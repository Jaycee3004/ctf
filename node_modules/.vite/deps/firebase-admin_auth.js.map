{
  "version": 3,
  "sources": ["../../firebase-admin/lib/auth/user-import-builder.js", "../../firebase-admin/lib/auth/action-code-settings-builder.js", "../../firebase-admin/lib/auth/auth-config.js", "../../firebase-admin/lib/auth/tenant.js", "../../firebase-admin/lib/auth/identifier.js", "../../firebase-admin/lib/auth/project-config.js", "../../firebase-admin/lib/auth/auth-api-request.js", "../../firebase-admin/lib/utils/crypto-signer.js", "../../firebase-admin/lib/auth/token-generator.js", "../../debug/src/common.js", "../../debug/src/browser.js", "../../jose/dist/browser/runtime/webcrypto.js", "../../jose/dist/browser/runtime/digest.js", "../../jose/dist/browser/lib/buffer_utils.js", "../../jose/dist/browser/runtime/base64url.js", "../../jose/dist/browser/util/errors.js", "../../jose/dist/browser/runtime/random.js", "../../jose/dist/browser/lib/iv.js", "../../jose/dist/browser/lib/check_iv_length.js", "../../jose/dist/browser/runtime/check_cek_length.js", "../../jose/dist/browser/runtime/timing_safe_equal.js", "../../jose/dist/browser/lib/crypto_key.js", "../../jose/dist/browser/lib/invalid_key_input.js", "../../jose/dist/browser/runtime/is_key_like.js", "../../jose/dist/browser/runtime/decrypt.js", "../../jose/dist/browser/runtime/zlib.js", "../../jose/dist/browser/lib/is_disjoint.js", "../../jose/dist/browser/lib/is_object.js", "../../jose/dist/browser/runtime/bogus.js", "../../jose/dist/browser/runtime/aeskw.js", "../../jose/dist/browser/runtime/ecdhes.js", "../../jose/dist/browser/lib/check_p2s.js", "../../jose/dist/browser/runtime/pbes2kw.js", "../../jose/dist/browser/runtime/subtle_rsaes.js", "../../jose/dist/browser/runtime/check_key_length.js", "../../jose/dist/browser/runtime/rsaes.js", "../../jose/dist/browser/lib/cek.js", "../../jose/dist/browser/lib/format_pem.js", "../../jose/dist/browser/runtime/asn1.js", "../../jose/dist/browser/runtime/jwk_to_key.js", "../../jose/dist/browser/key/import.js", "../../jose/dist/browser/lib/check_key_type.js", "../../jose/dist/browser/runtime/encrypt.js", "../../jose/dist/browser/lib/aesgcmkw.js", "../../jose/dist/browser/lib/decrypt_key_management.js", "../../jose/dist/browser/lib/validate_crit.js", "../../jose/dist/browser/lib/validate_algorithms.js", "../../jose/dist/browser/jwe/flattened/decrypt.js", "../../jose/dist/browser/jwe/compact/decrypt.js", "../../jose/dist/browser/jwe/general/decrypt.js", "../../jose/dist/browser/runtime/key_to_jwk.js", "../../jose/dist/browser/key/export.js", "../../jose/dist/browser/lib/encrypt_key_management.js", "../../jose/dist/browser/jwe/flattened/encrypt.js", "../../jose/dist/browser/jwe/general/encrypt.js", "../../jose/dist/browser/runtime/subtle_dsa.js", "../../jose/dist/browser/runtime/get_sign_verify_key.js", "../../jose/dist/browser/runtime/verify.js", "../../jose/dist/browser/jws/flattened/verify.js", "../../jose/dist/browser/jws/compact/verify.js", "../../jose/dist/browser/jws/general/verify.js", "../../jose/dist/browser/lib/epoch.js", "../../jose/dist/browser/lib/secs.js", "../../jose/dist/browser/lib/jwt_claims_set.js", "../../jose/dist/browser/jwt/verify.js", "../../jose/dist/browser/jwt/decrypt.js", "../../jose/dist/browser/jwe/compact/encrypt.js", "../../jose/dist/browser/runtime/sign.js", "../../jose/dist/browser/jws/flattened/sign.js", "../../jose/dist/browser/jws/compact/sign.js", "../../jose/dist/browser/jws/general/sign.js", "../../jose/dist/browser/jwt/produce.js", "../../jose/dist/browser/jwt/sign.js", "../../jose/dist/browser/jwt/encrypt.js", "../../jose/dist/browser/jwk/thumbprint.js", "../../jose/dist/browser/jwk/embedded.js", "../../jose/dist/browser/jwks/local.js", "../../jose/dist/browser/runtime/fetch_jwks.js", "../../jose/dist/browser/jwks/remote.js", "../../jose/dist/browser/jwt/unsecured.js", "../../jose/dist/browser/util/base64url.js", "../../jose/dist/browser/util/decode_protected_header.js", "../../jose/dist/browser/util/decode_jwt.js", "../../jose/dist/browser/runtime/generate.js", "../../jose/dist/browser/key/generate_key_pair.js", "../../jose/dist/browser/key/generate_secret.js", "../../jose/dist/browser/runtime/runtime.js", "../../jose/dist/browser/util/runtime.js", "../../jose/dist/browser/index.js", "../../jwks-rsa/src/errors/JwksError.js", "../../jwks-rsa/src/utils.js", "../../jwks-rsa/src/wrappers/request.js", "../../pseudomap/pseudomap.js", "../../pseudomap/map.js", "../../lru-memoizer/node_modules/yallist/yallist.js", "../../lru-memoizer/node_modules/lru-cache/lib/lru-cache.js", "../../lodash.clonedeep/index.js", "../../lru-memoizer/src/freeze.ts", "../../lru-memoizer/src/sync.ts", "../../lru-memoizer/src/async.ts", "../../lru-memoizer/src/index.ts", "../../jwks-rsa/src/wrappers/cache.js", "../../limiter/lib/tokenBucket.js", "../../limiter/lib/clock.js", "../../limiter/lib/rateLimiter.js", "../../limiter/index.js", "../../jwks-rsa/src/errors/JwksRateLimitError.js", "../../jwks-rsa/src/wrappers/rateLimit.js", "../../jwks-rsa/src/wrappers/interceptor.js", "../../jwks-rsa/src/wrappers/callbackSupport.js", "../../jwks-rsa/src/wrappers/index.js", "../../jwks-rsa/src/errors/SigningKeyNotFoundError.js", "../../jwks-rsa/src/JwksClient.js", "../../jwks-rsa/src/errors/ArgumentError.js", "../../jwks-rsa/src/errors/index.js", "../../jwks-rsa/src/integrations/config.js", "../../jwks-rsa/src/integrations/hapi.js", "../../jwks-rsa/src/integrations/express.js", "../../jwks-rsa/src/integrations/koa.js", "../../jwks-rsa/src/integrations/passport.js", "../../jwks-rsa/src/index.js", "../../firebase-admin/lib/utils/jwt.js", "../../firebase-admin/lib/auth/token-verifier.js", "../../firebase-admin/lib/auth/user-record.js", "../../firebase-admin/lib/auth/base-auth.js", "../../firebase-admin/lib/auth/tenant-manager.js", "../../firebase-admin/lib/auth/project-config-manager.js", "../../firebase-admin/lib/auth/auth.js", "../../firebase-admin/lib/auth/index.js", "../../firebase-admin/lib/esm/auth/index.js"],
  "sourcesContent": ["/*! firebase-admin v11.11.0 */\n\"use strict\";\n/*!\n * Copyright 2018 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UserImportBuilder = exports.convertMultiFactorInfoToServerFormat = void 0;\nconst deep_copy_1 = require(\"../utils/deep-copy\");\nconst utils = require(\"../utils\");\nconst validator = require(\"../utils/validator\");\nconst error_1 = require(\"../utils/error\");\n/**\n * Converts a client format second factor object to server format.\n * @param multiFactorInfo - The client format second factor.\n * @returns The corresponding AuthFactorInfo server request format.\n */\nfunction convertMultiFactorInfoToServerFormat(multiFactorInfo) {\n    let enrolledAt;\n    if (typeof multiFactorInfo.enrollmentTime !== 'undefined') {\n        if (validator.isUTCDateString(multiFactorInfo.enrollmentTime)) {\n            // Convert from UTC date string (client side format) to ISO date string (server side format).\n            enrolledAt = new Date(multiFactorInfo.enrollmentTime).toISOString();\n        }\n        else {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ENROLLMENT_TIME, `The second factor \"enrollmentTime\" for \"${multiFactorInfo.uid}\" must be a valid ` +\n                'UTC date string.');\n        }\n    }\n    // Currently only phone second factors are supported.\n    if (isPhoneFactor(multiFactorInfo)) {\n        // If any required field is missing or invalid, validation will still fail later.\n        const authFactorInfo = {\n            mfaEnrollmentId: multiFactorInfo.uid,\n            displayName: multiFactorInfo.displayName,\n            // Required for all phone second factors.\n            phoneInfo: multiFactorInfo.phoneNumber,\n            enrolledAt,\n        };\n        for (const objKey in authFactorInfo) {\n            if (typeof authFactorInfo[objKey] === 'undefined') {\n                delete authFactorInfo[objKey];\n            }\n        }\n        return authFactorInfo;\n    }\n    else {\n        // Unsupported second factor.\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.UNSUPPORTED_SECOND_FACTOR, `Unsupported second factor \"${JSON.stringify(multiFactorInfo)}\" provided.`);\n    }\n}\nexports.convertMultiFactorInfoToServerFormat = convertMultiFactorInfoToServerFormat;\nfunction isPhoneFactor(multiFactorInfo) {\n    return multiFactorInfo.factorId === 'phone';\n}\n/**\n * @param {any} obj The object to check for number field within.\n * @param {string} key The entry key.\n * @returns {number} The corresponding number if available. Otherwise, NaN.\n */\nfunction getNumberField(obj, key) {\n    if (typeof obj[key] !== 'undefined' && obj[key] !== null) {\n        return parseInt(obj[key].toString(), 10);\n    }\n    return NaN;\n}\n/**\n * Converts a UserImportRecord to a UploadAccountUser object. Throws an error when invalid\n * fields are provided.\n * @param {UserImportRecord} user The UserImportRecord to conver to UploadAccountUser.\n * @param {ValidatorFunction=} userValidator The user validator function.\n * @returns {UploadAccountUser} The corresponding UploadAccountUser to return.\n */\nfunction populateUploadAccountUser(user, userValidator) {\n    const result = {\n        localId: user.uid,\n        email: user.email,\n        emailVerified: user.emailVerified,\n        displayName: user.displayName,\n        disabled: user.disabled,\n        photoUrl: user.photoURL,\n        phoneNumber: user.phoneNumber,\n        providerUserInfo: [],\n        mfaInfo: [],\n        tenantId: user.tenantId,\n        customAttributes: user.customClaims && JSON.stringify(user.customClaims),\n    };\n    if (typeof user.passwordHash !== 'undefined') {\n        if (!validator.isBuffer(user.passwordHash)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_PASSWORD_HASH);\n        }\n        result.passwordHash = utils.toWebSafeBase64(user.passwordHash);\n    }\n    if (typeof user.passwordSalt !== 'undefined') {\n        if (!validator.isBuffer(user.passwordSalt)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_PASSWORD_SALT);\n        }\n        result.salt = utils.toWebSafeBase64(user.passwordSalt);\n    }\n    if (validator.isNonNullObject(user.metadata)) {\n        if (validator.isNonEmptyString(user.metadata.creationTime)) {\n            result.createdAt = new Date(user.metadata.creationTime).getTime();\n        }\n        if (validator.isNonEmptyString(user.metadata.lastSignInTime)) {\n            result.lastLoginAt = new Date(user.metadata.lastSignInTime).getTime();\n        }\n    }\n    if (validator.isArray(user.providerData)) {\n        user.providerData.forEach((providerData) => {\n            result.providerUserInfo.push({\n                providerId: providerData.providerId,\n                rawId: providerData.uid,\n                email: providerData.email,\n                displayName: providerData.displayName,\n                photoUrl: providerData.photoURL,\n            });\n        });\n    }\n    // Convert user.multiFactor.enrolledFactors to server format.\n    if (validator.isNonNullObject(user.multiFactor) &&\n        validator.isNonEmptyArray(user.multiFactor.enrolledFactors)) {\n        user.multiFactor.enrolledFactors.forEach((multiFactorInfo) => {\n            result.mfaInfo.push(convertMultiFactorInfoToServerFormat(multiFactorInfo));\n        });\n    }\n    // Remove blank fields.\n    let key;\n    for (key in result) {\n        if (typeof result[key] === 'undefined') {\n            delete result[key];\n        }\n    }\n    if (result.providerUserInfo.length === 0) {\n        delete result.providerUserInfo;\n    }\n    if (result.mfaInfo.length === 0) {\n        delete result.mfaInfo;\n    }\n    // Validate the constructured user individual request. This will throw if an error\n    // is detected.\n    if (typeof userValidator === 'function') {\n        userValidator(result);\n    }\n    return result;\n}\n/**\n * Class that provides a helper for building/validating uploadAccount requests and\n * UserImportResult responses.\n */\nclass UserImportBuilder {\n    /**\n     * @param {UserImportRecord[]} users The list of user records to import.\n     * @param {UserImportOptions=} options The import options which includes hashing\n     *     algorithm details.\n     * @param {ValidatorFunction=} userRequestValidator The user request validator function.\n     * @constructor\n     */\n    constructor(users, options, userRequestValidator) {\n        this.requiresHashOptions = false;\n        this.validatedUsers = [];\n        this.userImportResultErrors = [];\n        this.indexMap = {};\n        this.validatedUsers = this.populateUsers(users, userRequestValidator);\n        this.validatedOptions = this.populateOptions(options, this.requiresHashOptions);\n    }\n    /**\n     * Returns the corresponding constructed uploadAccount request.\n     * @returns {UploadAccountRequest} The constructed uploadAccount request.\n     */\n    buildRequest() {\n        const users = this.validatedUsers.map((user) => {\n            return (0, deep_copy_1.deepCopy)(user);\n        });\n        return (0, deep_copy_1.deepExtend)({ users }, (0, deep_copy_1.deepCopy)(this.validatedOptions));\n    }\n    /**\n     * Populates the UserImportResult using the client side detected errors and the server\n     * side returned errors.\n     * @returns {UserImportResult} The user import result based on the returned failed\n     *     uploadAccount response.\n     */\n    buildResponse(failedUploads) {\n        // Initialize user import result.\n        const importResult = {\n            successCount: this.validatedUsers.length,\n            failureCount: this.userImportResultErrors.length,\n            errors: (0, deep_copy_1.deepCopy)(this.userImportResultErrors),\n        };\n        importResult.failureCount += failedUploads.length;\n        importResult.successCount -= failedUploads.length;\n        failedUploads.forEach((failedUpload) => {\n            importResult.errors.push({\n                // Map backend request index to original developer provided array index.\n                index: this.indexMap[failedUpload.index],\n                error: new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_USER_IMPORT, failedUpload.message),\n            });\n        });\n        // Sort errors by index.\n        importResult.errors.sort((a, b) => {\n            return a.index - b.index;\n        });\n        // Return sorted result.\n        return importResult;\n    }\n    /**\n     * Validates and returns the hashing options of the uploadAccount request.\n     * Throws an error whenever an invalid or missing options is detected.\n     * @param {UserImportOptions} options The UserImportOptions.\n     * @param {boolean} requiresHashOptions Whether to require hash options.\n     * @returns {UploadAccountOptions} The populated UploadAccount options.\n     */\n    populateOptions(options, requiresHashOptions) {\n        let populatedOptions;\n        if (!requiresHashOptions) {\n            return {};\n        }\n        if (!validator.isNonNullObject(options)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, '\"UserImportOptions\" are required when importing users with passwords.');\n        }\n        if (!validator.isNonNullObject(options.hash)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.MISSING_HASH_ALGORITHM, '\"hash.algorithm\" is missing from the provided \"UserImportOptions\".');\n        }\n        if (typeof options.hash.algorithm === 'undefined' ||\n            !validator.isNonEmptyString(options.hash.algorithm)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_HASH_ALGORITHM, '\"hash.algorithm\" must be a string matching the list of supported algorithms.');\n        }\n        let rounds;\n        switch (options.hash.algorithm) {\n            case 'HMAC_SHA512':\n            case 'HMAC_SHA256':\n            case 'HMAC_SHA1':\n            case 'HMAC_MD5':\n                if (!validator.isBuffer(options.hash.key)) {\n                    throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_HASH_KEY, 'A non-empty \"hash.key\" byte buffer must be provided for ' +\n                        `hash algorithm ${options.hash.algorithm}.`);\n                }\n                populatedOptions = {\n                    hashAlgorithm: options.hash.algorithm,\n                    signerKey: utils.toWebSafeBase64(options.hash.key),\n                };\n                break;\n            case 'MD5':\n            case 'SHA1':\n            case 'SHA256':\n            case 'SHA512': {\n                // MD5 is [0,8192] but SHA1, SHA256, and SHA512 are [1,8192]\n                rounds = getNumberField(options.hash, 'rounds');\n                const minRounds = options.hash.algorithm === 'MD5' ? 0 : 1;\n                if (isNaN(rounds) || rounds < minRounds || rounds > 8192) {\n                    throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_HASH_ROUNDS, `A valid \"hash.rounds\" number between ${minRounds} and 8192 must be provided for ` +\n                        `hash algorithm ${options.hash.algorithm}.`);\n                }\n                populatedOptions = {\n                    hashAlgorithm: options.hash.algorithm,\n                    rounds,\n                };\n                break;\n            }\n            case 'PBKDF_SHA1':\n            case 'PBKDF2_SHA256':\n                rounds = getNumberField(options.hash, 'rounds');\n                if (isNaN(rounds) || rounds < 0 || rounds > 120000) {\n                    throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_HASH_ROUNDS, 'A valid \"hash.rounds\" number between 0 and 120000 must be provided for ' +\n                        `hash algorithm ${options.hash.algorithm}.`);\n                }\n                populatedOptions = {\n                    hashAlgorithm: options.hash.algorithm,\n                    rounds,\n                };\n                break;\n            case 'SCRYPT': {\n                if (!validator.isBuffer(options.hash.key)) {\n                    throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_HASH_KEY, 'A \"hash.key\" byte buffer must be provided for ' +\n                        `hash algorithm ${options.hash.algorithm}.`);\n                }\n                rounds = getNumberField(options.hash, 'rounds');\n                if (isNaN(rounds) || rounds <= 0 || rounds > 8) {\n                    throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_HASH_ROUNDS, 'A valid \"hash.rounds\" number between 1 and 8 must be provided for ' +\n                        `hash algorithm ${options.hash.algorithm}.`);\n                }\n                const memoryCost = getNumberField(options.hash, 'memoryCost');\n                if (isNaN(memoryCost) || memoryCost <= 0 || memoryCost > 14) {\n                    throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_HASH_MEMORY_COST, 'A valid \"hash.memoryCost\" number between 1 and 14 must be provided for ' +\n                        `hash algorithm ${options.hash.algorithm}.`);\n                }\n                if (typeof options.hash.saltSeparator !== 'undefined' &&\n                    !validator.isBuffer(options.hash.saltSeparator)) {\n                    throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_HASH_SALT_SEPARATOR, '\"hash.saltSeparator\" must be a byte buffer.');\n                }\n                populatedOptions = {\n                    hashAlgorithm: options.hash.algorithm,\n                    signerKey: utils.toWebSafeBase64(options.hash.key),\n                    rounds,\n                    memoryCost,\n                    saltSeparator: utils.toWebSafeBase64(options.hash.saltSeparator || Buffer.from('')),\n                };\n                break;\n            }\n            case 'BCRYPT':\n                populatedOptions = {\n                    hashAlgorithm: options.hash.algorithm,\n                };\n                break;\n            case 'STANDARD_SCRYPT': {\n                const cpuMemCost = getNumberField(options.hash, 'memoryCost');\n                if (isNaN(cpuMemCost)) {\n                    throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_HASH_MEMORY_COST, 'A valid \"hash.memoryCost\" number must be provided for ' +\n                        `hash algorithm ${options.hash.algorithm}.`);\n                }\n                const parallelization = getNumberField(options.hash, 'parallelization');\n                if (isNaN(parallelization)) {\n                    throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_HASH_PARALLELIZATION, 'A valid \"hash.parallelization\" number must be provided for ' +\n                        `hash algorithm ${options.hash.algorithm}.`);\n                }\n                const blockSize = getNumberField(options.hash, 'blockSize');\n                if (isNaN(blockSize)) {\n                    throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_HASH_BLOCK_SIZE, 'A valid \"hash.blockSize\" number must be provided for ' +\n                        `hash algorithm ${options.hash.algorithm}.`);\n                }\n                const dkLen = getNumberField(options.hash, 'derivedKeyLength');\n                if (isNaN(dkLen)) {\n                    throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_HASH_DERIVED_KEY_LENGTH, 'A valid \"hash.derivedKeyLength\" number must be provided for ' +\n                        `hash algorithm ${options.hash.algorithm}.`);\n                }\n                populatedOptions = {\n                    hashAlgorithm: options.hash.algorithm,\n                    cpuMemCost,\n                    parallelization,\n                    blockSize,\n                    dkLen,\n                };\n                break;\n            }\n            default:\n                throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_HASH_ALGORITHM, `Unsupported hash algorithm provider \"${options.hash.algorithm}\".`);\n        }\n        return populatedOptions;\n    }\n    /**\n     * Validates and returns the users list of the uploadAccount request.\n     * Whenever a user with an error is detected, the error is cached and will later be\n     * merged into the user import result. This allows the processing of valid users without\n     * failing early on the first error detected.\n     * @param {UserImportRecord[]} users The UserImportRecords to convert to UnploadAccountUser\n     *     objects.\n     * @param {ValidatorFunction=} userValidator The user validator function.\n     * @returns {UploadAccountUser[]} The populated uploadAccount users.\n     */\n    populateUsers(users, userValidator) {\n        const populatedUsers = [];\n        users.forEach((user, index) => {\n            try {\n                const result = populateUploadAccountUser(user, userValidator);\n                if (typeof result.passwordHash !== 'undefined') {\n                    this.requiresHashOptions = true;\n                }\n                // Only users that pass client screening will be passed to backend for processing.\n                populatedUsers.push(result);\n                // Map user's index (the one to be sent to backend) to original developer provided array.\n                this.indexMap[populatedUsers.length - 1] = index;\n            }\n            catch (error) {\n                // Save the client side error with respect to the developer provided array.\n                this.userImportResultErrors.push({\n                    index,\n                    error,\n                });\n            }\n        });\n        return populatedUsers;\n    }\n}\nexports.UserImportBuilder = UserImportBuilder;\n", "/*! firebase-admin v11.11.0 */\n\"use strict\";\n/*!\n * Copyright 2018 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ActionCodeSettingsBuilder = void 0;\nconst validator = require(\"../utils/validator\");\nconst error_1 = require(\"../utils/error\");\n/**\n * Defines the ActionCodeSettings builder class used to convert the\n * ActionCodeSettings object to its corresponding server request.\n *\n * @internal\n */\nclass ActionCodeSettingsBuilder {\n    /**\n     * ActionCodeSettingsBuilder constructor.\n     *\n     * @param {ActionCodeSettings} actionCodeSettings The ActionCodeSettings\n     *     object used to initiliaze this server request builder.\n     * @constructor\n     */\n    constructor(actionCodeSettings) {\n        if (!validator.isNonNullObject(actionCodeSettings)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, '\"ActionCodeSettings\" must be a non-null object.');\n        }\n        if (typeof actionCodeSettings.url === 'undefined') {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.MISSING_CONTINUE_URI);\n        }\n        else if (!validator.isURL(actionCodeSettings.url)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_CONTINUE_URI);\n        }\n        this.continueUrl = actionCodeSettings.url;\n        if (typeof actionCodeSettings.handleCodeInApp !== 'undefined' &&\n            !validator.isBoolean(actionCodeSettings.handleCodeInApp)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, '\"ActionCodeSettings.handleCodeInApp\" must be a boolean.');\n        }\n        this.canHandleCodeInApp = actionCodeSettings.handleCodeInApp || false;\n        if (typeof actionCodeSettings.dynamicLinkDomain !== 'undefined' &&\n            !validator.isNonEmptyString(actionCodeSettings.dynamicLinkDomain)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_DYNAMIC_LINK_DOMAIN);\n        }\n        this.dynamicLinkDomain = actionCodeSettings.dynamicLinkDomain;\n        if (typeof actionCodeSettings.iOS !== 'undefined') {\n            if (!validator.isNonNullObject(actionCodeSettings.iOS)) {\n                throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, '\"ActionCodeSettings.iOS\" must be a valid non-null object.');\n            }\n            else if (typeof actionCodeSettings.iOS.bundleId === 'undefined') {\n                throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.MISSING_IOS_BUNDLE_ID);\n            }\n            else if (!validator.isNonEmptyString(actionCodeSettings.iOS.bundleId)) {\n                throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, '\"ActionCodeSettings.iOS.bundleId\" must be a valid non-empty string.');\n            }\n            this.ibi = actionCodeSettings.iOS.bundleId;\n        }\n        if (typeof actionCodeSettings.android !== 'undefined') {\n            if (!validator.isNonNullObject(actionCodeSettings.android)) {\n                throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, '\"ActionCodeSettings.android\" must be a valid non-null object.');\n            }\n            else if (typeof actionCodeSettings.android.packageName === 'undefined') {\n                throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.MISSING_ANDROID_PACKAGE_NAME);\n            }\n            else if (!validator.isNonEmptyString(actionCodeSettings.android.packageName)) {\n                throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, '\"ActionCodeSettings.android.packageName\" must be a valid non-empty string.');\n            }\n            else if (typeof actionCodeSettings.android.minimumVersion !== 'undefined' &&\n                !validator.isNonEmptyString(actionCodeSettings.android.minimumVersion)) {\n                throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, '\"ActionCodeSettings.android.minimumVersion\" must be a valid non-empty string.');\n            }\n            else if (typeof actionCodeSettings.android.installApp !== 'undefined' &&\n                !validator.isBoolean(actionCodeSettings.android.installApp)) {\n                throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, '\"ActionCodeSettings.android.installApp\" must be a valid boolean.');\n            }\n            this.apn = actionCodeSettings.android.packageName;\n            this.amv = actionCodeSettings.android.minimumVersion;\n            this.installApp = actionCodeSettings.android.installApp || false;\n        }\n    }\n    /**\n     * Returns the corresponding constructed server request corresponding to the\n     * current ActionCodeSettings.\n     *\n     * @returns The constructed EmailActionCodeRequest request.\n     */\n    buildRequest() {\n        const request = {\n            continueUrl: this.continueUrl,\n            canHandleCodeInApp: this.canHandleCodeInApp,\n            dynamicLinkDomain: this.dynamicLinkDomain,\n            androidPackageName: this.apn,\n            androidMinimumVersion: this.amv,\n            androidInstallApp: this.installApp,\n            iOSBundleId: this.ibi,\n        };\n        // Remove all null and undefined fields from request.\n        for (const key in request) {\n            if (Object.prototype.hasOwnProperty.call(request, key)) {\n                if (typeof request[key] === 'undefined' || request[key] === null) {\n                    delete request[key];\n                }\n            }\n        }\n        return request;\n    }\n}\nexports.ActionCodeSettingsBuilder = ActionCodeSettingsBuilder;\n", "/*! firebase-admin v11.11.0 */\n\"use strict\";\n/*!\n * Copyright 2018 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EmailPrivacyAuthConfig = exports.PasswordPolicyAuthConfig = exports.RecaptchaAuthConfig = exports.SmsRegionsAuthConfig = exports.OIDCConfig = exports.SAMLConfig = exports.EmailSignInConfig = exports.validateTestPhoneNumbers = exports.MultiFactorAuthConfig = exports.MAXIMUM_TEST_PHONE_NUMBERS = void 0;\nconst validator = require(\"../utils/validator\");\nconst deep_copy_1 = require(\"../utils/deep-copy\");\nconst error_1 = require(\"../utils/error\");\n/** A maximum of 10 test phone number / code pairs can be configured. */\nexports.MAXIMUM_TEST_PHONE_NUMBERS = 10;\n/** Client Auth factor type to server auth factor type mapping. */\nconst AUTH_FACTOR_CLIENT_TO_SERVER_TYPE = {\n    phone: 'PHONE_SMS',\n};\n/** Server Auth factor type to client auth factor type mapping. */\nconst AUTH_FACTOR_SERVER_TO_CLIENT_TYPE = Object.keys(AUTH_FACTOR_CLIENT_TO_SERVER_TYPE)\n    .reduce((res, key) => {\n    res[AUTH_FACTOR_CLIENT_TO_SERVER_TYPE[key]] = key;\n    return res;\n}, {});\n/**\n * Defines the multi-factor config class used to convert client side MultiFactorConfig\n * to a format that is understood by the Auth server.\n *\n * @internal\n */\nclass MultiFactorAuthConfig {\n    /**\n     * Static method to convert a client side request to a MultiFactorAuthServerConfig.\n     * Throws an error if validation fails.\n     *\n     * @param options - The options object to convert to a server request.\n     * @returns The resulting server request.\n     * @internal\n     */\n    static buildServerRequest(options) {\n        const request = {};\n        MultiFactorAuthConfig.validate(options);\n        if (Object.prototype.hasOwnProperty.call(options, 'state')) {\n            request.state = options.state;\n        }\n        if (Object.prototype.hasOwnProperty.call(options, 'factorIds')) {\n            (options.factorIds || []).forEach((factorId) => {\n                if (typeof request.enabledProviders === 'undefined') {\n                    request.enabledProviders = [];\n                }\n                request.enabledProviders.push(AUTH_FACTOR_CLIENT_TO_SERVER_TYPE[factorId]);\n            });\n            // In case an empty array is passed. Ensure it gets populated so the array is cleared.\n            if (options.factorIds && options.factorIds.length === 0) {\n                request.enabledProviders = [];\n            }\n        }\n        if (Object.prototype.hasOwnProperty.call(options, 'providerConfigs')) {\n            request.providerConfigs = options.providerConfigs;\n        }\n        return request;\n    }\n    /**\n     * Validates the MultiFactorConfig options object. Throws an error on failure.\n     *\n     * @param options - The options object to validate.\n     */\n    static validate(options) {\n        const validKeys = {\n            state: true,\n            factorIds: true,\n            providerConfigs: true,\n        };\n        if (!validator.isNonNullObject(options)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_CONFIG, '\"MultiFactorConfig\" must be a non-null object.');\n        }\n        // Check for unsupported top level attributes.\n        for (const key in options) {\n            if (!(key in validKeys)) {\n                throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_CONFIG, `\"${key}\" is not a valid MultiFactorConfig parameter.`);\n            }\n        }\n        // Validate content.\n        if (typeof options.state !== 'undefined' &&\n            options.state !== 'ENABLED' &&\n            options.state !== 'DISABLED') {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_CONFIG, '\"MultiFactorConfig.state\" must be either \"ENABLED\" or \"DISABLED\".');\n        }\n        if (typeof options.factorIds !== 'undefined') {\n            if (!validator.isArray(options.factorIds)) {\n                throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_CONFIG, '\"MultiFactorConfig.factorIds\" must be an array of valid \"AuthFactorTypes\".');\n            }\n            // Validate content of array.\n            options.factorIds.forEach((factorId) => {\n                if (typeof AUTH_FACTOR_CLIENT_TO_SERVER_TYPE[factorId] === 'undefined') {\n                    throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_CONFIG, `\"${factorId}\" is not a valid \"AuthFactorType\".`);\n                }\n            });\n        }\n        if (typeof options.providerConfigs !== 'undefined') {\n            if (!validator.isArray(options.providerConfigs)) {\n                throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_CONFIG, '\"MultiFactorConfig.providerConfigs\" must be an array of valid \"MultiFactorProviderConfig.\"');\n            }\n            //Validate content of array.\n            options.providerConfigs.forEach((multiFactorProviderConfig) => {\n                if (typeof multiFactorProviderConfig === 'undefined' || !validator.isObject(multiFactorProviderConfig)) {\n                    throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_CONFIG, `\"${multiFactorProviderConfig}\" is not a valid \"MultiFactorProviderConfig\" type.`);\n                }\n                const validProviderConfigKeys = {\n                    state: true,\n                    totpProviderConfig: true,\n                };\n                for (const key in multiFactorProviderConfig) {\n                    if (!(key in validProviderConfigKeys)) {\n                        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_CONFIG, `\"${key}\" is not a valid ProviderConfig parameter.`);\n                    }\n                }\n                if (typeof multiFactorProviderConfig.state === 'undefined' ||\n                    (multiFactorProviderConfig.state !== 'ENABLED' &&\n                        multiFactorProviderConfig.state !== 'DISABLED')) {\n                    throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_CONFIG, '\"MultiFactorConfig.providerConfigs.state\" must be either \"ENABLED\" or \"DISABLED\".');\n                }\n                // Since TOTP is the only provider config available right now, not defining it will lead into an error\n                if (typeof multiFactorProviderConfig.totpProviderConfig === 'undefined') {\n                    throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_CONFIG, '\"MultiFactorConfig.providerConfigs.totpProviderConfig\" must be defined.');\n                }\n                const validTotpProviderConfigKeys = {\n                    adjacentIntervals: true,\n                };\n                for (const key in multiFactorProviderConfig.totpProviderConfig) {\n                    if (!(key in validTotpProviderConfigKeys)) {\n                        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_CONFIG, `\"${key}\" is not a valid TotpProviderConfig parameter.`);\n                    }\n                }\n                const adjIntervals = multiFactorProviderConfig.totpProviderConfig.adjacentIntervals;\n                if (typeof adjIntervals !== 'undefined' &&\n                    (!Number.isInteger(adjIntervals) || adjIntervals < 0 || adjIntervals > 10)) {\n                    throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, '\"MultiFactorConfig.providerConfigs.totpProviderConfig.adjacentIntervals\" must' +\n                        ' be a valid number between 0 and 10 (both inclusive).');\n                }\n            });\n        }\n    }\n    /**\n     * The MultiFactorAuthConfig constructor.\n     *\n     * @param response - The server side response used to initialize the\n     *     MultiFactorAuthConfig object.\n     * @constructor\n     * @internal\n     */\n    constructor(response) {\n        if (typeof response.state === 'undefined') {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INTERNAL_ERROR, 'INTERNAL ASSERT FAILED: Invalid multi-factor configuration response');\n        }\n        this.state = response.state;\n        this.factorIds = [];\n        (response.enabledProviders || []).forEach((enabledProvider) => {\n            // Ignore unsupported types. It is possible the current admin SDK version is\n            // not up to date and newer backend types are supported.\n            if (typeof AUTH_FACTOR_SERVER_TO_CLIENT_TYPE[enabledProvider] !== 'undefined') {\n                this.factorIds.push(AUTH_FACTOR_SERVER_TO_CLIENT_TYPE[enabledProvider]);\n            }\n        });\n        this.providerConfigs = [];\n        (response.providerConfigs || []).forEach((providerConfig) => {\n            if (typeof providerConfig !== 'undefined') {\n                if (typeof providerConfig.state === 'undefined' ||\n                    typeof providerConfig.totpProviderConfig === 'undefined' ||\n                    (typeof providerConfig.totpProviderConfig.adjacentIntervals !== 'undefined' &&\n                        typeof providerConfig.totpProviderConfig.adjacentIntervals !== 'number')) {\n                    throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INTERNAL_ERROR, 'INTERNAL ASSERT FAILED: Invalid multi-factor configuration response');\n                }\n                this.providerConfigs.push(providerConfig);\n            }\n        });\n    }\n    /** Converts MultiFactorConfig to JSON object\n     * @returns The plain object representation of the multi-factor config instance. */\n    toJSON() {\n        return {\n            state: this.state,\n            factorIds: this.factorIds,\n            providerConfigs: this.providerConfigs,\n        };\n    }\n}\nexports.MultiFactorAuthConfig = MultiFactorAuthConfig;\n/**\n * Validates the provided map of test phone number / code pairs.\n * @param testPhoneNumbers - The phone number / code pairs to validate.\n */\nfunction validateTestPhoneNumbers(testPhoneNumbers) {\n    if (!validator.isObject(testPhoneNumbers)) {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, '\"testPhoneNumbers\" must be a map of phone number / code pairs.');\n    }\n    if (Object.keys(testPhoneNumbers).length > exports.MAXIMUM_TEST_PHONE_NUMBERS) {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.MAXIMUM_TEST_PHONE_NUMBER_EXCEEDED);\n    }\n    for (const phoneNumber in testPhoneNumbers) {\n        // Validate phone number.\n        if (!validator.isPhoneNumber(phoneNumber)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_TESTING_PHONE_NUMBER, `\"${phoneNumber}\" is not a valid E.164 standard compliant phone number.`);\n        }\n        // Validate code.\n        if (!validator.isString(testPhoneNumbers[phoneNumber]) ||\n            !/^[\\d]{6}$/.test(testPhoneNumbers[phoneNumber])) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_TESTING_PHONE_NUMBER, `\"${testPhoneNumbers[phoneNumber]}\" is not a valid 6 digit code string.`);\n        }\n    }\n}\nexports.validateTestPhoneNumbers = validateTestPhoneNumbers;\n/**\n * Defines the email sign-in config class used to convert client side EmailSignInConfig\n * to a format that is understood by the Auth server.\n *\n * @internal\n */\nclass EmailSignInConfig {\n    /**\n     * Static method to convert a client side request to a EmailSignInConfigServerRequest.\n     * Throws an error if validation fails.\n     *\n     * @param options - The options object to convert to a server request.\n     * @returns The resulting server request.\n     * @internal\n     */\n    static buildServerRequest(options) {\n        const request = {};\n        EmailSignInConfig.validate(options);\n        if (Object.prototype.hasOwnProperty.call(options, 'enabled')) {\n            request.allowPasswordSignup = options.enabled;\n        }\n        if (Object.prototype.hasOwnProperty.call(options, 'passwordRequired')) {\n            request.enableEmailLinkSignin = !options.passwordRequired;\n        }\n        return request;\n    }\n    /**\n     * Validates the EmailSignInConfig options object. Throws an error on failure.\n     *\n     * @param options - The options object to validate.\n     */\n    static validate(options) {\n        // TODO: Validate the request.\n        const validKeys = {\n            enabled: true,\n            passwordRequired: true,\n        };\n        if (!validator.isNonNullObject(options)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, '\"EmailSignInConfig\" must be a non-null object.');\n        }\n        // Check for unsupported top level attributes.\n        for (const key in options) {\n            if (!(key in validKeys)) {\n                throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, `\"${key}\" is not a valid EmailSignInConfig parameter.`);\n            }\n        }\n        // Validate content.\n        if (typeof options.enabled !== 'undefined' &&\n            !validator.isBoolean(options.enabled)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, '\"EmailSignInConfig.enabled\" must be a boolean.');\n        }\n        if (typeof options.passwordRequired !== 'undefined' &&\n            !validator.isBoolean(options.passwordRequired)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, '\"EmailSignInConfig.passwordRequired\" must be a boolean.');\n        }\n    }\n    /**\n     * The EmailSignInConfig constructor.\n     *\n     * @param response - The server side response used to initialize the\n     *     EmailSignInConfig object.\n     * @constructor\n     */\n    constructor(response) {\n        if (typeof response.allowPasswordSignup === 'undefined') {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INTERNAL_ERROR, 'INTERNAL ASSERT FAILED: Invalid email sign-in configuration response');\n        }\n        this.enabled = response.allowPasswordSignup;\n        this.passwordRequired = !response.enableEmailLinkSignin;\n    }\n    /** @returns The plain object representation of the email sign-in config. */\n    toJSON() {\n        return {\n            enabled: this.enabled,\n            passwordRequired: this.passwordRequired,\n        };\n    }\n}\nexports.EmailSignInConfig = EmailSignInConfig;\n/**\n * Defines the SAMLConfig class used to convert a client side configuration to its\n * server side representation.\n *\n * @internal\n */\nclass SAMLConfig {\n    /**\n     * Converts a client side request to a SAMLConfigServerRequest which is the format\n     * accepted by the backend server.\n     * Throws an error if validation fails. If the request is not a SAMLConfig request,\n     * returns null.\n     *\n     * @param options - The options object to convert to a server request.\n     * @param ignoreMissingFields - Whether to ignore missing fields.\n     * @returns The resulting server request or null if not valid.\n     */\n    static buildServerRequest(options, ignoreMissingFields = false) {\n        const makeRequest = validator.isNonNullObject(options) &&\n            (options.providerId || ignoreMissingFields);\n        if (!makeRequest) {\n            return null;\n        }\n        const request = {};\n        // Validate options.\n        SAMLConfig.validate(options, ignoreMissingFields);\n        request.enabled = options.enabled;\n        request.displayName = options.displayName;\n        // IdP config.\n        if (options.idpEntityId || options.ssoURL || options.x509Certificates) {\n            request.idpConfig = {\n                idpEntityId: options.idpEntityId,\n                ssoUrl: options.ssoURL,\n                signRequest: options.enableRequestSigning,\n                idpCertificates: typeof options.x509Certificates === 'undefined' ? undefined : [],\n            };\n            if (options.x509Certificates) {\n                for (const cert of (options.x509Certificates || [])) {\n                    request.idpConfig.idpCertificates.push({ x509Certificate: cert });\n                }\n            }\n        }\n        // RP config.\n        if (options.callbackURL || options.rpEntityId) {\n            request.spConfig = {\n                spEntityId: options.rpEntityId,\n                callbackUri: options.callbackURL,\n            };\n        }\n        return request;\n    }\n    /**\n     * Returns the provider ID corresponding to the resource name if available.\n     *\n     * @param resourceName - The server side resource name.\n     * @returns The provider ID corresponding to the resource, null otherwise.\n     */\n    static getProviderIdFromResourceName(resourceName) {\n        // name is of form projects/project1/inboundSamlConfigs/providerId1\n        const matchProviderRes = resourceName.match(/\\/inboundSamlConfigs\\/(saml\\..*)$/);\n        if (!matchProviderRes || matchProviderRes.length < 2) {\n            return null;\n        }\n        return matchProviderRes[1];\n    }\n    /**\n     * @param providerId - The provider ID to check.\n     * @returns Whether the provider ID corresponds to a SAML provider.\n     */\n    static isProviderId(providerId) {\n        return validator.isNonEmptyString(providerId) && providerId.indexOf('saml.') === 0;\n    }\n    /**\n     * Validates the SAMLConfig options object. Throws an error on failure.\n     *\n     * @param options - The options object to validate.\n     * @param ignoreMissingFields - Whether to ignore missing fields.\n     */\n    static validate(options, ignoreMissingFields = false) {\n        const validKeys = {\n            enabled: true,\n            displayName: true,\n            providerId: true,\n            idpEntityId: true,\n            ssoURL: true,\n            x509Certificates: true,\n            rpEntityId: true,\n            callbackURL: true,\n            enableRequestSigning: true,\n        };\n        if (!validator.isNonNullObject(options)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_CONFIG, '\"SAMLAuthProviderConfig\" must be a valid non-null object.');\n        }\n        // Check for unsupported top level attributes.\n        for (const key in options) {\n            if (!(key in validKeys)) {\n                throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_CONFIG, `\"${key}\" is not a valid SAML config parameter.`);\n            }\n        }\n        // Required fields.\n        if (validator.isNonEmptyString(options.providerId)) {\n            if (options.providerId.indexOf('saml.') !== 0) {\n                throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_PROVIDER_ID, '\"SAMLAuthProviderConfig.providerId\" must be a valid non-empty string prefixed with \"saml.\".');\n            }\n        }\n        else if (!ignoreMissingFields) {\n            // providerId is required and not provided correctly.\n            throw new error_1.FirebaseAuthError(!options.providerId ? error_1.AuthClientErrorCode.MISSING_PROVIDER_ID : error_1.AuthClientErrorCode.INVALID_PROVIDER_ID, '\"SAMLAuthProviderConfig.providerId\" must be a valid non-empty string prefixed with \"saml.\".');\n        }\n        if (!(ignoreMissingFields && typeof options.idpEntityId === 'undefined') &&\n            !validator.isNonEmptyString(options.idpEntityId)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_CONFIG, '\"SAMLAuthProviderConfig.idpEntityId\" must be a valid non-empty string.');\n        }\n        if (!(ignoreMissingFields && typeof options.ssoURL === 'undefined') &&\n            !validator.isURL(options.ssoURL)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_CONFIG, '\"SAMLAuthProviderConfig.ssoURL\" must be a valid URL string.');\n        }\n        if (!(ignoreMissingFields && typeof options.rpEntityId === 'undefined') &&\n            !validator.isNonEmptyString(options.rpEntityId)) {\n            throw new error_1.FirebaseAuthError(!options.rpEntityId ? error_1.AuthClientErrorCode.MISSING_SAML_RELYING_PARTY_CONFIG :\n                error_1.AuthClientErrorCode.INVALID_CONFIG, '\"SAMLAuthProviderConfig.rpEntityId\" must be a valid non-empty string.');\n        }\n        if (!(ignoreMissingFields && typeof options.callbackURL === 'undefined') &&\n            !validator.isURL(options.callbackURL)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_CONFIG, '\"SAMLAuthProviderConfig.callbackURL\" must be a valid URL string.');\n        }\n        if (!(ignoreMissingFields && typeof options.x509Certificates === 'undefined') &&\n            !validator.isArray(options.x509Certificates)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_CONFIG, '\"SAMLAuthProviderConfig.x509Certificates\" must be a valid array of X509 certificate strings.');\n        }\n        (options.x509Certificates || []).forEach((cert) => {\n            if (!validator.isNonEmptyString(cert)) {\n                throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_CONFIG, '\"SAMLAuthProviderConfig.x509Certificates\" must be a valid array of X509 certificate strings.');\n            }\n        });\n        if (typeof options.enableRequestSigning !== 'undefined' &&\n            !validator.isBoolean(options.enableRequestSigning)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_CONFIG, '\"SAMLAuthProviderConfig.enableRequestSigning\" must be a boolean.');\n        }\n        if (typeof options.enabled !== 'undefined' &&\n            !validator.isBoolean(options.enabled)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_CONFIG, '\"SAMLAuthProviderConfig.enabled\" must be a boolean.');\n        }\n        if (typeof options.displayName !== 'undefined' &&\n            !validator.isString(options.displayName)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_CONFIG, '\"SAMLAuthProviderConfig.displayName\" must be a valid string.');\n        }\n    }\n    /**\n     * The SAMLConfig constructor.\n     *\n     * @param response - The server side response used to initialize the SAMLConfig object.\n     * @constructor\n     */\n    constructor(response) {\n        if (!response ||\n            !response.idpConfig ||\n            !response.idpConfig.idpEntityId ||\n            !response.idpConfig.ssoUrl ||\n            !response.spConfig ||\n            !response.spConfig.spEntityId ||\n            !response.name ||\n            !(validator.isString(response.name) &&\n                SAMLConfig.getProviderIdFromResourceName(response.name))) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INTERNAL_ERROR, 'INTERNAL ASSERT FAILED: Invalid SAML configuration response');\n        }\n        const providerId = SAMLConfig.getProviderIdFromResourceName(response.name);\n        if (!providerId) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INTERNAL_ERROR, 'INTERNAL ASSERT FAILED: Invalid SAML configuration response');\n        }\n        this.providerId = providerId;\n        // RP config.\n        this.rpEntityId = response.spConfig.spEntityId;\n        this.callbackURL = response.spConfig.callbackUri;\n        // IdP config.\n        this.idpEntityId = response.idpConfig.idpEntityId;\n        this.ssoURL = response.idpConfig.ssoUrl;\n        this.enableRequestSigning = !!response.idpConfig.signRequest;\n        const x509Certificates = [];\n        for (const cert of (response.idpConfig.idpCertificates || [])) {\n            if (cert.x509Certificate) {\n                x509Certificates.push(cert.x509Certificate);\n            }\n        }\n        this.x509Certificates = x509Certificates;\n        // When enabled is undefined, it takes its default value of false.\n        this.enabled = !!response.enabled;\n        this.displayName = response.displayName;\n    }\n    /** @returns The plain object representation of the SAMLConfig. */\n    toJSON() {\n        return {\n            enabled: this.enabled,\n            displayName: this.displayName,\n            providerId: this.providerId,\n            idpEntityId: this.idpEntityId,\n            ssoURL: this.ssoURL,\n            x509Certificates: (0, deep_copy_1.deepCopy)(this.x509Certificates),\n            rpEntityId: this.rpEntityId,\n            callbackURL: this.callbackURL,\n            enableRequestSigning: this.enableRequestSigning,\n        };\n    }\n}\nexports.SAMLConfig = SAMLConfig;\n/**\n * Defines the OIDCConfig class used to convert a client side configuration to its\n * server side representation.\n *\n * @internal\n */\nclass OIDCConfig {\n    /**\n     * Converts a client side request to a OIDCConfigServerRequest which is the format\n     * accepted by the backend server.\n     * Throws an error if validation fails. If the request is not a OIDCConfig request,\n     * returns null.\n     *\n     * @param options - The options object to convert to a server request.\n     * @param ignoreMissingFields - Whether to ignore missing fields.\n     * @returns The resulting server request or null if not valid.\n     */\n    static buildServerRequest(options, ignoreMissingFields = false) {\n        const makeRequest = validator.isNonNullObject(options) &&\n            (options.providerId || ignoreMissingFields);\n        if (!makeRequest) {\n            return null;\n        }\n        const request = {};\n        // Validate options.\n        OIDCConfig.validate(options, ignoreMissingFields);\n        request.enabled = options.enabled;\n        request.displayName = options.displayName;\n        request.issuer = options.issuer;\n        request.clientId = options.clientId;\n        if (typeof options.clientSecret !== 'undefined') {\n            request.clientSecret = options.clientSecret;\n        }\n        if (typeof options.responseType !== 'undefined') {\n            request.responseType = options.responseType;\n        }\n        return request;\n    }\n    /**\n     * Returns the provider ID corresponding to the resource name if available.\n     *\n     * @param resourceName - The server side resource name\n     * @returns The provider ID corresponding to the resource, null otherwise.\n     */\n    static getProviderIdFromResourceName(resourceName) {\n        // name is of form projects/project1/oauthIdpConfigs/providerId1\n        const matchProviderRes = resourceName.match(/\\/oauthIdpConfigs\\/(oidc\\..*)$/);\n        if (!matchProviderRes || matchProviderRes.length < 2) {\n            return null;\n        }\n        return matchProviderRes[1];\n    }\n    /**\n     * @param providerId - The provider ID to check.\n     * @returns Whether the provider ID corresponds to an OIDC provider.\n     */\n    static isProviderId(providerId) {\n        return validator.isNonEmptyString(providerId) && providerId.indexOf('oidc.') === 0;\n    }\n    /**\n     * Validates the OIDCConfig options object. Throws an error on failure.\n     *\n     * @param options - The options object to validate.\n     * @param ignoreMissingFields - Whether to ignore missing fields.\n     */\n    static validate(options, ignoreMissingFields = false) {\n        const validKeys = {\n            enabled: true,\n            displayName: true,\n            providerId: true,\n            clientId: true,\n            issuer: true,\n            clientSecret: true,\n            responseType: true,\n        };\n        const validResponseTypes = {\n            idToken: true,\n            code: true,\n        };\n        if (!validator.isNonNullObject(options)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_CONFIG, '\"OIDCAuthProviderConfig\" must be a valid non-null object.');\n        }\n        // Check for unsupported top level attributes.\n        for (const key in options) {\n            if (!(key in validKeys)) {\n                throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_CONFIG, `\"${key}\" is not a valid OIDC config parameter.`);\n            }\n        }\n        // Required fields.\n        if (validator.isNonEmptyString(options.providerId)) {\n            if (options.providerId.indexOf('oidc.') !== 0) {\n                throw new error_1.FirebaseAuthError(!options.providerId ? error_1.AuthClientErrorCode.MISSING_PROVIDER_ID : error_1.AuthClientErrorCode.INVALID_PROVIDER_ID, '\"OIDCAuthProviderConfig.providerId\" must be a valid non-empty string prefixed with \"oidc.\".');\n            }\n        }\n        else if (!ignoreMissingFields) {\n            throw new error_1.FirebaseAuthError(!options.providerId ? error_1.AuthClientErrorCode.MISSING_PROVIDER_ID : error_1.AuthClientErrorCode.INVALID_PROVIDER_ID, '\"OIDCAuthProviderConfig.providerId\" must be a valid non-empty string prefixed with \"oidc.\".');\n        }\n        if (!(ignoreMissingFields && typeof options.clientId === 'undefined') &&\n            !validator.isNonEmptyString(options.clientId)) {\n            throw new error_1.FirebaseAuthError(!options.clientId ? error_1.AuthClientErrorCode.MISSING_OAUTH_CLIENT_ID : error_1.AuthClientErrorCode.INVALID_OAUTH_CLIENT_ID, '\"OIDCAuthProviderConfig.clientId\" must be a valid non-empty string.');\n        }\n        if (!(ignoreMissingFields && typeof options.issuer === 'undefined') &&\n            !validator.isURL(options.issuer)) {\n            throw new error_1.FirebaseAuthError(!options.issuer ? error_1.AuthClientErrorCode.MISSING_ISSUER : error_1.AuthClientErrorCode.INVALID_CONFIG, '\"OIDCAuthProviderConfig.issuer\" must be a valid URL string.');\n        }\n        if (typeof options.enabled !== 'undefined' &&\n            !validator.isBoolean(options.enabled)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_CONFIG, '\"OIDCAuthProviderConfig.enabled\" must be a boolean.');\n        }\n        if (typeof options.displayName !== 'undefined' &&\n            !validator.isString(options.displayName)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_CONFIG, '\"OIDCAuthProviderConfig.displayName\" must be a valid string.');\n        }\n        if (typeof options.clientSecret !== 'undefined' &&\n            !validator.isNonEmptyString(options.clientSecret)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_CONFIG, '\"OIDCAuthProviderConfig.clientSecret\" must be a valid string.');\n        }\n        if (validator.isNonNullObject(options.responseType) && typeof options.responseType !== 'undefined') {\n            Object.keys(options.responseType).forEach((key) => {\n                if (!(key in validResponseTypes)) {\n                    throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_CONFIG, `\"${key}\" is not a valid OAuthResponseType parameter.`);\n                }\n            });\n            const idToken = options.responseType.idToken;\n            if (typeof idToken !== 'undefined' && !validator.isBoolean(idToken)) {\n                throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, '\"OIDCAuthProviderConfig.responseType.idToken\" must be a boolean.');\n            }\n            const code = options.responseType.code;\n            if (typeof code !== 'undefined') {\n                if (!validator.isBoolean(code)) {\n                    throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, '\"OIDCAuthProviderConfig.responseType.code\" must be a boolean.');\n                }\n                // If code flow is enabled, client secret must be provided.\n                if (code && typeof options.clientSecret === 'undefined') {\n                    throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.MISSING_OAUTH_CLIENT_SECRET, 'The OAuth configuration client secret is required to enable OIDC code flow.');\n                }\n            }\n            const allKeys = Object.keys(options.responseType).length;\n            const enabledCount = Object.values(options.responseType).filter(Boolean).length;\n            // Only one of OAuth response types can be set to true.\n            if (allKeys > 1 && enabledCount !== 1) {\n                throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_OAUTH_RESPONSETYPE, 'Only exactly one OAuth responseType should be set to true.');\n            }\n        }\n    }\n    /**\n     * The OIDCConfig constructor.\n     *\n     * @param response - The server side response used to initialize the OIDCConfig object.\n     * @constructor\n     */\n    constructor(response) {\n        if (!response ||\n            !response.issuer ||\n            !response.clientId ||\n            !response.name ||\n            !(validator.isString(response.name) &&\n                OIDCConfig.getProviderIdFromResourceName(response.name))) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INTERNAL_ERROR, 'INTERNAL ASSERT FAILED: Invalid OIDC configuration response');\n        }\n        const providerId = OIDCConfig.getProviderIdFromResourceName(response.name);\n        if (!providerId) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INTERNAL_ERROR, 'INTERNAL ASSERT FAILED: Invalid SAML configuration response');\n        }\n        this.providerId = providerId;\n        this.clientId = response.clientId;\n        this.issuer = response.issuer;\n        // When enabled is undefined, it takes its default value of false.\n        this.enabled = !!response.enabled;\n        this.displayName = response.displayName;\n        if (typeof response.clientSecret !== 'undefined') {\n            this.clientSecret = response.clientSecret;\n        }\n        if (typeof response.responseType !== 'undefined') {\n            this.responseType = response.responseType;\n        }\n    }\n    /** @returns The plain object representation of the OIDCConfig. */\n    toJSON() {\n        return {\n            enabled: this.enabled,\n            displayName: this.displayName,\n            providerId: this.providerId,\n            issuer: this.issuer,\n            clientId: this.clientId,\n            clientSecret: (0, deep_copy_1.deepCopy)(this.clientSecret),\n            responseType: (0, deep_copy_1.deepCopy)(this.responseType),\n        };\n    }\n}\nexports.OIDCConfig = OIDCConfig;\n/**\n * Defines the SMSRegionConfig class used for validation.\n *\n * @internal\n */\nclass SmsRegionsAuthConfig {\n    static validate(options) {\n        if (!validator.isNonNullObject(options)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_CONFIG, '\"SmsRegionConfig\" must be a non-null object.');\n        }\n        const validKeys = {\n            allowlistOnly: true,\n            allowByDefault: true,\n        };\n        for (const key in options) {\n            if (!(key in validKeys)) {\n                throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_CONFIG, `\"${key}\" is not a valid SmsRegionConfig parameter.`);\n            }\n        }\n        // validate mutual exclusiveness of allowByDefault and allowlistOnly\n        if (typeof options.allowByDefault !== 'undefined' && typeof options.allowlistOnly !== 'undefined') {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_CONFIG, 'SmsRegionConfig cannot have both \"allowByDefault\" and \"allowlistOnly\" parameters.');\n        }\n        // validation for allowByDefault type\n        if (typeof options.allowByDefault !== 'undefined') {\n            const allowByDefaultValidKeys = {\n                disallowedRegions: true,\n            };\n            for (const key in options.allowByDefault) {\n                if (!(key in allowByDefaultValidKeys)) {\n                    throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_CONFIG, `\"${key}\" is not a valid SmsRegionConfig.allowByDefault parameter.`);\n                }\n            }\n            // disallowedRegion can be empty.\n            if (typeof options.allowByDefault.disallowedRegions !== 'undefined'\n                && !validator.isArray(options.allowByDefault.disallowedRegions)) {\n                throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_CONFIG, '\"SmsRegionConfig.allowByDefault.disallowedRegions\" must be a valid string array.');\n            }\n        }\n        if (typeof options.allowlistOnly !== 'undefined') {\n            const allowListOnlyValidKeys = {\n                allowedRegions: true,\n            };\n            for (const key in options.allowlistOnly) {\n                if (!(key in allowListOnlyValidKeys)) {\n                    throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_CONFIG, `\"${key}\" is not a valid SmsRegionConfig.allowlistOnly parameter.`);\n                }\n            }\n            // allowedRegions can be empty\n            if (typeof options.allowlistOnly.allowedRegions !== 'undefined'\n                && !validator.isArray(options.allowlistOnly.allowedRegions)) {\n                throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_CONFIG, '\"SmsRegionConfig.allowlistOnly.allowedRegions\" must be a valid string array.');\n            }\n        }\n    }\n}\nexports.SmsRegionsAuthConfig = SmsRegionsAuthConfig;\nclass RecaptchaAuthConfig {\n    constructor(recaptchaConfig) {\n        this.emailPasswordEnforcementState = recaptchaConfig.emailPasswordEnforcementState;\n        this.managedRules = recaptchaConfig.managedRules;\n        this.recaptchaKeys = recaptchaConfig.recaptchaKeys;\n        this.useAccountDefender = recaptchaConfig.useAccountDefender;\n    }\n    /**\n     * Validates the RecaptchaConfig options object. Throws an error on failure.\n     * @param options - The options object to validate.\n     */\n    static validate(options) {\n        const validKeys = {\n            emailPasswordEnforcementState: true,\n            managedRules: true,\n            recaptchaKeys: true,\n            useAccountDefender: true,\n        };\n        if (!validator.isNonNullObject(options)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_CONFIG, '\"RecaptchaConfig\" must be a non-null object.');\n        }\n        for (const key in options) {\n            if (!(key in validKeys)) {\n                throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_CONFIG, `\"${key}\" is not a valid RecaptchaConfig parameter.`);\n            }\n        }\n        // Validation\n        if (typeof options.emailPasswordEnforcementState !== undefined) {\n            if (!validator.isNonEmptyString(options.emailPasswordEnforcementState)) {\n                throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, '\"RecaptchaConfig.emailPasswordEnforcementState\" must be a valid non-empty string.');\n            }\n            if (options.emailPasswordEnforcementState !== 'OFF' &&\n                options.emailPasswordEnforcementState !== 'AUDIT' &&\n                options.emailPasswordEnforcementState !== 'ENFORCE') {\n                throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_CONFIG, '\"RecaptchaConfig.emailPasswordEnforcementState\" must be either \"OFF\", \"AUDIT\" or \"ENFORCE\".');\n            }\n        }\n        if (typeof options.managedRules !== 'undefined') {\n            // Validate array\n            if (!validator.isArray(options.managedRules)) {\n                throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_CONFIG, '\"RecaptchaConfig.managedRules\" must be an array of valid \"RecaptchaManagedRule\".');\n            }\n            // Validate each rule of the array\n            options.managedRules.forEach((managedRule) => {\n                RecaptchaAuthConfig.validateManagedRule(managedRule);\n            });\n        }\n        if (typeof options.useAccountDefender !== 'undefined') {\n            if (!validator.isBoolean(options.useAccountDefender)) {\n                throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_CONFIG, '\"RecaptchaConfig.useAccountDefender\" must be a boolean value\".');\n            }\n        }\n    }\n    /**\n     * Validate each element in ManagedRule array\n     * @param options - The options object to validate.\n     */\n    static validateManagedRule(options) {\n        const validKeys = {\n            endScore: true,\n            action: true,\n        };\n        if (!validator.isNonNullObject(options)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_CONFIG, '\"RecaptchaManagedRule\" must be a non-null object.');\n        }\n        // Check for unsupported top level attributes.\n        for (const key in options) {\n            if (!(key in validKeys)) {\n                throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_CONFIG, `\"${key}\" is not a valid RecaptchaManagedRule parameter.`);\n            }\n        }\n        // Validate content.\n        if (typeof options.action !== 'undefined' &&\n            options.action !== 'BLOCK') {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_CONFIG, '\"RecaptchaManagedRule.action\" must be \"BLOCK\".');\n        }\n    }\n    /**\n     * Returns a JSON-serializable representation of this object.\n     * @returns The JSON-serializable object representation of the ReCaptcha config instance\n     */\n    toJSON() {\n        const json = {\n            emailPasswordEnforcementState: this.emailPasswordEnforcementState,\n            managedRules: (0, deep_copy_1.deepCopy)(this.managedRules),\n            recaptchaKeys: (0, deep_copy_1.deepCopy)(this.recaptchaKeys),\n            useAccountDefender: this.useAccountDefender,\n        };\n        if (typeof json.emailPasswordEnforcementState === 'undefined') {\n            delete json.emailPasswordEnforcementState;\n        }\n        if (typeof json.managedRules === 'undefined') {\n            delete json.managedRules;\n        }\n        if (typeof json.recaptchaKeys === 'undefined') {\n            delete json.recaptchaKeys;\n        }\n        if (typeof json.useAccountDefender === 'undefined') {\n            delete json.useAccountDefender;\n        }\n        return json;\n    }\n}\nexports.RecaptchaAuthConfig = RecaptchaAuthConfig;\n/**\n * Defines the password policy config class used to convert client side PasswordPolicyConfig\n * to a format that is understood by the Auth server.\n *\n * @internal\n */\nclass PasswordPolicyAuthConfig {\n    /**\n     * Static method to convert a client side request to a PasswordPolicyAuthServerConfig.\n     * Throws an error if validation fails.\n     *\n     * @param options - The options object to convert to a server request.\n     * @returns The resulting server request.\n     * @internal\n     */\n    static buildServerRequest(options) {\n        const request = {};\n        PasswordPolicyAuthConfig.validate(options);\n        if (Object.prototype.hasOwnProperty.call(options, 'enforcementState')) {\n            request.passwordPolicyEnforcementState = options.enforcementState;\n        }\n        request.forceUpgradeOnSignin = false;\n        if (Object.prototype.hasOwnProperty.call(options, 'forceUpgradeOnSignin')) {\n            request.forceUpgradeOnSignin = options.forceUpgradeOnSignin;\n        }\n        const constraintsRequest = {\n            containsUppercaseCharacter: false,\n            containsLowercaseCharacter: false,\n            containsNonAlphanumericCharacter: false,\n            containsNumericCharacter: false,\n            minPasswordLength: 6,\n            maxPasswordLength: 4096,\n        };\n        request.passwordPolicyVersions = [];\n        if (Object.prototype.hasOwnProperty.call(options, 'constraints')) {\n            if (options) {\n                if (options.constraints?.requireUppercase !== undefined) {\n                    constraintsRequest.containsUppercaseCharacter = options.constraints.requireUppercase;\n                }\n                if (options.constraints?.requireLowercase !== undefined) {\n                    constraintsRequest.containsLowercaseCharacter = options.constraints.requireLowercase;\n                }\n                if (options.constraints?.requireNonAlphanumeric !== undefined) {\n                    constraintsRequest.containsNonAlphanumericCharacter = options.constraints.requireNonAlphanumeric;\n                }\n                if (options.constraints?.requireNumeric !== undefined) {\n                    constraintsRequest.containsNumericCharacter = options.constraints.requireNumeric;\n                }\n                if (options.constraints?.minLength !== undefined) {\n                    constraintsRequest.minPasswordLength = options.constraints.minLength;\n                }\n                if (options.constraints?.maxLength !== undefined) {\n                    constraintsRequest.maxPasswordLength = options.constraints.maxLength;\n                }\n            }\n        }\n        request.passwordPolicyVersions.push({ customStrengthOptions: constraintsRequest });\n        return request;\n    }\n    /**\n     * Validates the PasswordPolicyConfig options object. Throws an error on failure.\n     *\n     * @param options - The options object to validate.\n     * @internal\n     */\n    static validate(options) {\n        const validKeys = {\n            enforcementState: true,\n            forceUpgradeOnSignin: true,\n            constraints: true,\n        };\n        if (!validator.isNonNullObject(options)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_CONFIG, '\"PasswordPolicyConfig\" must be a non-null object.');\n        }\n        // Check for unsupported top level attributes.\n        for (const key in options) {\n            if (!(key in validKeys)) {\n                throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_CONFIG, `\"${key}\" is not a valid PasswordPolicyConfig parameter.`);\n            }\n        }\n        // Validate content.\n        if (typeof options.enforcementState === 'undefined' ||\n            !(options.enforcementState === 'ENFORCE' ||\n                options.enforcementState === 'OFF')) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_CONFIG, '\"PasswordPolicyConfig.enforcementState\" must be either \"ENFORCE\" or \"OFF\".');\n        }\n        if (typeof options.forceUpgradeOnSignin !== 'undefined') {\n            if (!validator.isBoolean(options.forceUpgradeOnSignin)) {\n                throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_CONFIG, '\"PasswordPolicyConfig.forceUpgradeOnSignin\" must be a boolean.');\n            }\n        }\n        if (typeof options.constraints !== 'undefined') {\n            if (options.enforcementState === 'ENFORCE' && !validator.isNonNullObject(options.constraints)) {\n                throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_CONFIG, '\"PasswordPolicyConfig.constraints\" must be a non-empty object.');\n            }\n            const validCharKeys = {\n                requireUppercase: true,\n                requireLowercase: true,\n                requireNumeric: true,\n                requireNonAlphanumeric: true,\n                minLength: true,\n                maxLength: true,\n            };\n            // Check for unsupported  attributes.\n            for (const key in options.constraints) {\n                if (!(key in validCharKeys)) {\n                    throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_CONFIG, `\"${key}\" is not a valid PasswordPolicyConfig.constraints parameter.`);\n                }\n            }\n            if (typeof options.constraints.requireUppercase !== 'undefined' &&\n                !validator.isBoolean(options.constraints.requireUppercase)) {\n                throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_CONFIG, '\"PasswordPolicyConfig.constraints.requireUppercase\" must be a boolean.');\n            }\n            if (typeof options.constraints.requireLowercase !== 'undefined' &&\n                !validator.isBoolean(options.constraints.requireLowercase)) {\n                throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_CONFIG, '\"PasswordPolicyConfig.constraints.requireLowercase\" must be a boolean.');\n            }\n            if (typeof options.constraints.requireNonAlphanumeric !== 'undefined' &&\n                !validator.isBoolean(options.constraints.requireNonAlphanumeric)) {\n                throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_CONFIG, '\"PasswordPolicyConfig.constraints.requireNonAlphanumeric\"' +\n                    ' must be a boolean.');\n            }\n            if (typeof options.constraints.requireNumeric !== 'undefined' &&\n                !validator.isBoolean(options.constraints.requireNumeric)) {\n                throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_CONFIG, '\"PasswordPolicyConfig.constraints.requireNumeric\" must be a boolean.');\n            }\n            if (typeof options.constraints.minLength === 'undefined') {\n                options.constraints.minLength = 6;\n            }\n            else if (!validator.isNumber(options.constraints.minLength)) {\n                throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_CONFIG, '\"PasswordPolicyConfig.constraints.minLength\" must be a number.');\n            }\n            else {\n                if (!(options.constraints.minLength >= 6\n                    && options.constraints.minLength <= 30)) {\n                    throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_CONFIG, '\"PasswordPolicyConfig.constraints.minLength\"' +\n                        ' must be an integer between 6 and 30, inclusive.');\n                }\n            }\n            if (typeof options.constraints.maxLength === 'undefined') {\n                options.constraints.maxLength = 4096;\n            }\n            else if (!validator.isNumber(options.constraints.maxLength)) {\n                throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_CONFIG, '\"PasswordPolicyConfig.constraints.maxLength\" must be a number.');\n            }\n            else {\n                if (!(options.constraints.maxLength >= options.constraints.minLength &&\n                    options.constraints.maxLength <= 4096)) {\n                    throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_CONFIG, '\"PasswordPolicyConfig.constraints.maxLength\"' +\n                        ' must be greater than or equal to minLength and at max 4096.');\n                }\n            }\n        }\n        else {\n            if (options.enforcementState === 'ENFORCE') {\n                throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_CONFIG, '\"PasswordPolicyConfig.constraints\" must be defined.');\n            }\n        }\n    }\n    /**\n     * The PasswordPolicyAuthConfig constructor.\n     *\n     * @param response - The server side response used to initialize the\n     *     PasswordPolicyAuthConfig object.\n     * @constructor\n     * @internal\n     */\n    constructor(response) {\n        if (typeof response.passwordPolicyEnforcementState === 'undefined') {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INTERNAL_ERROR, 'INTERNAL ASSERT FAILED: Invalid password policy configuration response');\n        }\n        this.enforcementState = response.passwordPolicyEnforcementState;\n        let constraintsResponse = {};\n        if (typeof response.passwordPolicyVersions !== 'undefined') {\n            (response.passwordPolicyVersions || []).forEach((policyVersion) => {\n                constraintsResponse = {\n                    requireLowercase: policyVersion.customStrengthOptions?.containsLowercaseCharacter,\n                    requireUppercase: policyVersion.customStrengthOptions?.containsUppercaseCharacter,\n                    requireNonAlphanumeric: policyVersion.customStrengthOptions?.containsNonAlphanumericCharacter,\n                    requireNumeric: policyVersion.customStrengthOptions?.containsNumericCharacter,\n                    minLength: policyVersion.customStrengthOptions?.minPasswordLength,\n                    maxLength: policyVersion.customStrengthOptions?.maxPasswordLength,\n                };\n            });\n        }\n        this.constraints = constraintsResponse;\n        this.forceUpgradeOnSignin = response.forceUpgradeOnSignin ? true : false;\n    }\n}\nexports.PasswordPolicyAuthConfig = PasswordPolicyAuthConfig;\n/**\n * Defines the EmailPrivacyAuthConfig class used for validation.\n *\n * @internal\n */\nclass EmailPrivacyAuthConfig {\n    static validate(options) {\n        if (!validator.isNonNullObject(options)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_CONFIG, '\"EmailPrivacyConfig\" must be a non-null object.');\n        }\n        const validKeys = {\n            enableImprovedEmailPrivacy: true,\n        };\n        for (const key in options) {\n            if (!(key in validKeys)) {\n                throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_CONFIG, `\"${key}\" is not a valid \"EmailPrivacyConfig\" parameter.`);\n            }\n        }\n        if (typeof options.enableImprovedEmailPrivacy !== 'undefined'\n            && !validator.isBoolean(options.enableImprovedEmailPrivacy)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_CONFIG, '\"EmailPrivacyConfig.enableImprovedEmailPrivacy\" must be a valid boolean value.');\n        }\n    }\n}\nexports.EmailPrivacyAuthConfig = EmailPrivacyAuthConfig;\n", "/*! firebase-admin v11.11.0 */\n\"use strict\";\n/*!\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Tenant = void 0;\nconst validator = require(\"../utils/validator\");\nconst deep_copy_1 = require(\"../utils/deep-copy\");\nconst error_1 = require(\"../utils/error\");\nconst auth_config_1 = require(\"./auth-config\");\n/**\n * Represents a tenant configuration.\n *\n * Multi-tenancy support requires Google Cloud's Identity Platform\n * (GCIP). To learn more about GCIP, including pricing and features,\n * see the {@link https://cloud.google.com/identity-platform | GCIP documentation}.\n *\n * Before multi-tenancy can be used on a Google Cloud Identity Platform project,\n * tenants must be allowed on that project via the Cloud Console UI.\n *\n * A tenant configuration provides information such as the display name, tenant\n * identifier and email authentication configuration.\n * For OIDC/SAML provider configuration management, `TenantAwareAuth` instances should\n * be used instead of a `Tenant` to retrieve the list of configured IdPs on a tenant.\n * When configuring these providers, note that tenants will inherit\n * whitelisted domains and authenticated redirect URIs of their parent project.\n *\n * All other settings of a tenant will also be inherited. These will need to be managed\n * from the Cloud Console UI.\n */\nclass Tenant {\n    /**\n     * Builds the corresponding server request for a TenantOptions object.\n     *\n     * @param tenantOptions - The properties to convert to a server request.\n     * @param createRequest - Whether this is a create request.\n     * @returns The equivalent server request.\n     *\n     * @internal\n     */\n    static buildServerRequest(tenantOptions, createRequest) {\n        Tenant.validate(tenantOptions, createRequest);\n        let request = {};\n        if (typeof tenantOptions.emailSignInConfig !== 'undefined') {\n            request = auth_config_1.EmailSignInConfig.buildServerRequest(tenantOptions.emailSignInConfig);\n        }\n        if (typeof tenantOptions.displayName !== 'undefined') {\n            request.displayName = tenantOptions.displayName;\n        }\n        if (typeof tenantOptions.anonymousSignInEnabled !== 'undefined') {\n            request.enableAnonymousUser = tenantOptions.anonymousSignInEnabled;\n        }\n        if (typeof tenantOptions.multiFactorConfig !== 'undefined') {\n            request.mfaConfig = auth_config_1.MultiFactorAuthConfig.buildServerRequest(tenantOptions.multiFactorConfig);\n        }\n        if (typeof tenantOptions.testPhoneNumbers !== 'undefined') {\n            // null will clear existing test phone numbers. Translate to empty object.\n            request.testPhoneNumbers = tenantOptions.testPhoneNumbers ?? {};\n        }\n        if (typeof tenantOptions.smsRegionConfig !== 'undefined') {\n            request.smsRegionConfig = tenantOptions.smsRegionConfig;\n        }\n        if (typeof tenantOptions.recaptchaConfig !== 'undefined') {\n            request.recaptchaConfig = tenantOptions.recaptchaConfig;\n        }\n        if (typeof tenantOptions.passwordPolicyConfig !== 'undefined') {\n            request.passwordPolicyConfig = auth_config_1.PasswordPolicyAuthConfig.buildServerRequest(tenantOptions.passwordPolicyConfig);\n        }\n        if (typeof tenantOptions.emailPrivacyConfig !== 'undefined') {\n            request.emailPrivacyConfig = tenantOptions.emailPrivacyConfig;\n        }\n        return request;\n    }\n    /**\n     * Returns the tenant ID corresponding to the resource name if available.\n     *\n     * @param resourceName - The server side resource name\n     * @returns The tenant ID corresponding to the resource, null otherwise.\n     *\n     * @internal\n     */\n    static getTenantIdFromResourceName(resourceName) {\n        // name is of form projects/project1/tenants/tenant1\n        const matchTenantRes = resourceName.match(/\\/tenants\\/(.*)$/);\n        if (!matchTenantRes || matchTenantRes.length < 2) {\n            return null;\n        }\n        return matchTenantRes[1];\n    }\n    /**\n     * Validates a tenant options object. Throws an error on failure.\n     *\n     * @param request - The tenant options object to validate.\n     * @param createRequest - Whether this is a create request.\n     */\n    static validate(request, createRequest) {\n        const validKeys = {\n            displayName: true,\n            emailSignInConfig: true,\n            anonymousSignInEnabled: true,\n            multiFactorConfig: true,\n            testPhoneNumbers: true,\n            smsRegionConfig: true,\n            recaptchaConfig: true,\n            passwordPolicyConfig: true,\n            emailPrivacyConfig: true,\n        };\n        const label = createRequest ? 'CreateTenantRequest' : 'UpdateTenantRequest';\n        if (!validator.isNonNullObject(request)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, `\"${label}\" must be a valid non-null object.`);\n        }\n        // Check for unsupported top level attributes.\n        for (const key in request) {\n            if (!(key in validKeys)) {\n                throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, `\"${key}\" is not a valid ${label} parameter.`);\n            }\n        }\n        // Validate displayName type if provided.\n        if (typeof request.displayName !== 'undefined' &&\n            !validator.isNonEmptyString(request.displayName)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, `\"${label}.displayName\" must be a valid non-empty string.`);\n        }\n        // Validate emailSignInConfig type if provided.\n        if (typeof request.emailSignInConfig !== 'undefined') {\n            // This will throw an error if invalid.\n            auth_config_1.EmailSignInConfig.buildServerRequest(request.emailSignInConfig);\n        }\n        // Validate test phone numbers if provided.\n        if (typeof request.testPhoneNumbers !== 'undefined' &&\n            request.testPhoneNumbers !== null) {\n            (0, auth_config_1.validateTestPhoneNumbers)(request.testPhoneNumbers);\n        }\n        else if (request.testPhoneNumbers === null && createRequest) {\n            // null allowed only for update operations.\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, `\"${label}.testPhoneNumbers\" must be a non-null object.`);\n        }\n        // Validate multiFactorConfig type if provided.\n        if (typeof request.multiFactorConfig !== 'undefined') {\n            // This will throw an error if invalid.\n            auth_config_1.MultiFactorAuthConfig.buildServerRequest(request.multiFactorConfig);\n        }\n        // Validate SMS Regions Config if provided.\n        if (typeof request.smsRegionConfig !== 'undefined') {\n            auth_config_1.SmsRegionsAuthConfig.validate(request.smsRegionConfig);\n        }\n        // Validate reCAPTCHAConfig type if provided.\n        if (typeof request.recaptchaConfig !== 'undefined') {\n            auth_config_1.RecaptchaAuthConfig.validate(request.recaptchaConfig);\n        }\n        // Validate passwordPolicyConfig type if provided.\n        if (typeof request.passwordPolicyConfig !== 'undefined') {\n            // This will throw an error if invalid.\n            auth_config_1.PasswordPolicyAuthConfig.buildServerRequest(request.passwordPolicyConfig);\n        }\n        // Validate Email Privacy Config if provided.\n        if (typeof request.emailPrivacyConfig !== 'undefined') {\n            auth_config_1.EmailPrivacyAuthConfig.validate(request.emailPrivacyConfig);\n        }\n    }\n    /**\n     * The Tenant object constructor.\n     *\n     * @param response - The server side response used to initialize the Tenant object.\n     * @constructor\n     * @internal\n     */\n    constructor(response) {\n        const tenantId = Tenant.getTenantIdFromResourceName(response.name);\n        if (!tenantId) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INTERNAL_ERROR, 'INTERNAL ASSERT FAILED: Invalid tenant response');\n        }\n        this.tenantId = tenantId;\n        this.displayName = response.displayName;\n        try {\n            this.emailSignInConfig_ = new auth_config_1.EmailSignInConfig(response);\n        }\n        catch (e) {\n            // If allowPasswordSignup is undefined, it is disabled by default.\n            this.emailSignInConfig_ = new auth_config_1.EmailSignInConfig({\n                allowPasswordSignup: false,\n            });\n        }\n        this.anonymousSignInEnabled = !!response.enableAnonymousUser;\n        if (typeof response.mfaConfig !== 'undefined') {\n            this.multiFactorConfig_ = new auth_config_1.MultiFactorAuthConfig(response.mfaConfig);\n        }\n        if (typeof response.testPhoneNumbers !== 'undefined') {\n            this.testPhoneNumbers = (0, deep_copy_1.deepCopy)(response.testPhoneNumbers || {});\n        }\n        if (typeof response.smsRegionConfig !== 'undefined') {\n            this.smsRegionConfig = (0, deep_copy_1.deepCopy)(response.smsRegionConfig);\n        }\n        if (typeof response.recaptchaConfig !== 'undefined') {\n            this.recaptchaConfig_ = new auth_config_1.RecaptchaAuthConfig(response.recaptchaConfig);\n        }\n        if (typeof response.passwordPolicyConfig !== 'undefined') {\n            this.passwordPolicyConfig = new auth_config_1.PasswordPolicyAuthConfig(response.passwordPolicyConfig);\n        }\n        if (typeof response.emailPrivacyConfig !== 'undefined') {\n            this.emailPrivacyConfig = (0, deep_copy_1.deepCopy)(response.emailPrivacyConfig);\n        }\n    }\n    /**\n     * The email sign in provider configuration.\n     */\n    get emailSignInConfig() {\n        return this.emailSignInConfig_;\n    }\n    /**\n     * The multi-factor auth configuration on the current tenant.\n     */\n    get multiFactorConfig() {\n        return this.multiFactorConfig_;\n    }\n    /**\n     * The recaptcha config auth configuration of the current tenant.\n     */\n    get recaptchaConfig() {\n        return this.recaptchaConfig_;\n    }\n    /**\n     * Returns a JSON-serializable representation of this object.\n     *\n     * @returns A JSON-serializable representation of this object.\n     */\n    toJSON() {\n        const json = {\n            tenantId: this.tenantId,\n            displayName: this.displayName,\n            emailSignInConfig: this.emailSignInConfig_?.toJSON(),\n            multiFactorConfig: this.multiFactorConfig_?.toJSON(),\n            anonymousSignInEnabled: this.anonymousSignInEnabled,\n            testPhoneNumbers: this.testPhoneNumbers,\n            smsRegionConfig: (0, deep_copy_1.deepCopy)(this.smsRegionConfig),\n            recaptchaConfig: this.recaptchaConfig_?.toJSON(),\n            passwordPolicyConfig: (0, deep_copy_1.deepCopy)(this.passwordPolicyConfig),\n            emailPrivacyConfig: (0, deep_copy_1.deepCopy)(this.emailPrivacyConfig),\n        };\n        if (typeof json.multiFactorConfig === 'undefined') {\n            delete json.multiFactorConfig;\n        }\n        if (typeof json.testPhoneNumbers === 'undefined') {\n            delete json.testPhoneNumbers;\n        }\n        if (typeof json.smsRegionConfig === 'undefined') {\n            delete json.smsRegionConfig;\n        }\n        if (typeof json.recaptchaConfig === 'undefined') {\n            delete json.recaptchaConfig;\n        }\n        if (typeof json.passwordPolicyConfig === 'undefined') {\n            delete json.passwordPolicyConfig;\n        }\n        if (typeof json.emailPrivacyConfig === 'undefined') {\n            delete json.emailPrivacyConfig;\n        }\n        return json;\n    }\n}\nexports.Tenant = Tenant;\n", "/*! firebase-admin v11.11.0 */\n\"use strict\";\n/*!\n * Copyright 2020 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isProviderIdentifier = exports.isPhoneIdentifier = exports.isEmailIdentifier = exports.isUidIdentifier = void 0;\n/*\n * User defined type guards. See\n * https://www.typescriptlang.org/docs/handbook/advanced-types.html#user-defined-type-guards\n */\nfunction isUidIdentifier(id) {\n    return id.uid !== undefined;\n}\nexports.isUidIdentifier = isUidIdentifier;\nfunction isEmailIdentifier(id) {\n    return id.email !== undefined;\n}\nexports.isEmailIdentifier = isEmailIdentifier;\nfunction isPhoneIdentifier(id) {\n    return id.phoneNumber !== undefined;\n}\nexports.isPhoneIdentifier = isPhoneIdentifier;\nfunction isProviderIdentifier(id) {\n    const pid = id;\n    return pid.providerId !== undefined && pid.providerUid !== undefined;\n}\nexports.isProviderIdentifier = isProviderIdentifier;\n", "/*! firebase-admin v11.11.0 */\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ProjectConfig = void 0;\n/*!\n * Copyright 2022 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst validator = require(\"../utils/validator\");\nconst error_1 = require(\"../utils/error\");\nconst auth_config_1 = require(\"./auth-config\");\nconst deep_copy_1 = require(\"../utils/deep-copy\");\n/**\n* Represents a project configuration.\n*/\nclass ProjectConfig {\n    /**\n     * The multi-factor auth configuration.\n     */\n    get multiFactorConfig() {\n        return this.multiFactorConfig_;\n    }\n    /**\n     * Validates a project config options object. Throws an error on failure.\n     *\n     * @param request - The project config options object to validate.\n     */\n    static validate(request) {\n        if (!validator.isNonNullObject(request)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, '\"UpdateProjectConfigRequest\" must be a valid non-null object.');\n        }\n        const validKeys = {\n            smsRegionConfig: true,\n            multiFactorConfig: true,\n            recaptchaConfig: true,\n            passwordPolicyConfig: true,\n            emailPrivacyConfig: true,\n        };\n        // Check for unsupported top level attributes.\n        for (const key in request) {\n            if (!(key in validKeys)) {\n                throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, `\"${key}\" is not a valid UpdateProjectConfigRequest parameter.`);\n            }\n        }\n        // Validate SMS Regions Config if provided.\n        if (typeof request.smsRegionConfig !== 'undefined') {\n            auth_config_1.SmsRegionsAuthConfig.validate(request.smsRegionConfig);\n        }\n        // Validate Multi Factor Config if provided\n        if (typeof request.multiFactorConfig !== 'undefined') {\n            auth_config_1.MultiFactorAuthConfig.validate(request.multiFactorConfig);\n        }\n        // Validate reCAPTCHA config attribute.\n        if (typeof request.recaptchaConfig !== 'undefined') {\n            auth_config_1.RecaptchaAuthConfig.validate(request.recaptchaConfig);\n        }\n        // Validate Password policy Config if provided\n        if (typeof request.passwordPolicyConfig !== 'undefined') {\n            auth_config_1.PasswordPolicyAuthConfig.validate(request.passwordPolicyConfig);\n        }\n        // Validate Email Privacy Config if provided.\n        if (typeof request.emailPrivacyConfig !== 'undefined') {\n            auth_config_1.EmailPrivacyAuthConfig.validate(request.emailPrivacyConfig);\n        }\n    }\n    /**\n     * Build the corresponding server request for a UpdateProjectConfigRequest object.\n     * @param configOptions - The properties to convert to a server request.\n     * @returns  The equivalent server request.\n     *\n     * @internal\n     */\n    static buildServerRequest(configOptions) {\n        ProjectConfig.validate(configOptions);\n        const request = {};\n        if (typeof configOptions.smsRegionConfig !== 'undefined') {\n            request.smsRegionConfig = configOptions.smsRegionConfig;\n        }\n        if (typeof configOptions.multiFactorConfig !== 'undefined') {\n            request.mfa = auth_config_1.MultiFactorAuthConfig.buildServerRequest(configOptions.multiFactorConfig);\n        }\n        if (typeof configOptions.recaptchaConfig !== 'undefined') {\n            request.recaptchaConfig = configOptions.recaptchaConfig;\n        }\n        if (typeof configOptions.passwordPolicyConfig !== 'undefined') {\n            request.passwordPolicyConfig = auth_config_1.PasswordPolicyAuthConfig.buildServerRequest(configOptions.passwordPolicyConfig);\n        }\n        if (typeof configOptions.emailPrivacyConfig !== 'undefined') {\n            request.emailPrivacyConfig = configOptions.emailPrivacyConfig;\n        }\n        return request;\n    }\n    /**\n     * The reCAPTCHA configuration.\n     */\n    get recaptchaConfig() {\n        return this.recaptchaConfig_;\n    }\n    /**\n     * The Project Config object constructor.\n     *\n     * @param response - The server side response used to initialize the Project Config object.\n     * @constructor\n     * @internal\n     */\n    constructor(response) {\n        if (typeof response.smsRegionConfig !== 'undefined') {\n            this.smsRegionConfig = response.smsRegionConfig;\n        }\n        //Backend API returns \"mfa\" in case of project config and \"mfaConfig\" in case of tenant config. \n        //The SDK exposes it as multiFactorConfig always.\n        if (typeof response.mfa !== 'undefined') {\n            this.multiFactorConfig_ = new auth_config_1.MultiFactorAuthConfig(response.mfa);\n        }\n        if (typeof response.recaptchaConfig !== 'undefined') {\n            this.recaptchaConfig_ = new auth_config_1.RecaptchaAuthConfig(response.recaptchaConfig);\n        }\n        if (typeof response.passwordPolicyConfig !== 'undefined') {\n            this.passwordPolicyConfig = new auth_config_1.PasswordPolicyAuthConfig(response.passwordPolicyConfig);\n        }\n        if (typeof response.emailPrivacyConfig !== 'undefined') {\n            this.emailPrivacyConfig = response.emailPrivacyConfig;\n        }\n    }\n    /**\n     * Returns a JSON-serializable representation of this object.\n     *\n     * @returns A JSON-serializable representation of this object.\n     */\n    toJSON() {\n        // JSON serialization\n        const json = {\n            smsRegionConfig: (0, deep_copy_1.deepCopy)(this.smsRegionConfig),\n            multiFactorConfig: (0, deep_copy_1.deepCopy)(this.multiFactorConfig),\n            recaptchaConfig: this.recaptchaConfig_?.toJSON(),\n            passwordPolicyConfig: (0, deep_copy_1.deepCopy)(this.passwordPolicyConfig),\n            emailPrivacyConfig: (0, deep_copy_1.deepCopy)(this.emailPrivacyConfig),\n        };\n        if (typeof json.smsRegionConfig === 'undefined') {\n            delete json.smsRegionConfig;\n        }\n        if (typeof json.multiFactorConfig === 'undefined') {\n            delete json.multiFactorConfig;\n        }\n        if (typeof json.recaptchaConfig === 'undefined') {\n            delete json.recaptchaConfig;\n        }\n        if (typeof json.passwordPolicyConfig === 'undefined') {\n            delete json.passwordPolicyConfig;\n        }\n        if (typeof json.emailPrivacyConfig === 'undefined') {\n            delete json.emailPrivacyConfig;\n        }\n        return json;\n    }\n}\nexports.ProjectConfig = ProjectConfig;\n", "/*! firebase-admin v11.11.0 */\n\"use strict\";\n/*!\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useEmulator = exports.TenantAwareAuthRequestHandler = exports.AuthRequestHandler = exports.AbstractAuthRequestHandler = exports.FIREBASE_AUTH_SIGN_UP_NEW_USER = exports.FIREBASE_AUTH_SET_ACCOUNT_INFO = exports.FIREBASE_AUTH_BATCH_DELETE_ACCOUNTS = exports.FIREBASE_AUTH_DELETE_ACCOUNT = exports.FIREBASE_AUTH_GET_ACCOUNTS_INFO = exports.FIREBASE_AUTH_GET_ACCOUNT_INFO = exports.FIREBASE_AUTH_DOWNLOAD_ACCOUNT = exports.FIREBASE_AUTH_UPLOAD_ACCOUNT = exports.FIREBASE_AUTH_CREATE_SESSION_COOKIE = exports.EMAIL_ACTION_REQUEST_TYPES = exports.RESERVED_CLAIMS = void 0;\nconst validator = require(\"../utils/validator\");\nconst deep_copy_1 = require(\"../utils/deep-copy\");\nconst error_1 = require(\"../utils/error\");\nconst api_request_1 = require(\"../utils/api-request\");\nconst utils = require(\"../utils/index\");\nconst user_import_builder_1 = require(\"./user-import-builder\");\nconst action_code_settings_builder_1 = require(\"./action-code-settings-builder\");\nconst tenant_1 = require(\"./tenant\");\nconst identifier_1 = require(\"./identifier\");\nconst auth_config_1 = require(\"./auth-config\");\nconst project_config_1 = require(\"./project-config\");\n/** Firebase Auth request header. */\nconst FIREBASE_AUTH_HEADER = {\n    'X-Client-Version': `Node/Admin/${utils.getSdkVersion()}`,\n};\n/** Firebase Auth request timeout duration in milliseconds. */\nconst FIREBASE_AUTH_TIMEOUT = 25000;\n/** List of reserved claims which cannot be provided when creating a custom token. */\nexports.RESERVED_CLAIMS = [\n    'acr', 'amr', 'at_hash', 'aud', 'auth_time', 'azp', 'cnf', 'c_hash', 'exp', 'iat',\n    'iss', 'jti', 'nbf', 'nonce', 'sub', 'firebase',\n];\n/** List of supported email action request types. */\nexports.EMAIL_ACTION_REQUEST_TYPES = [\n    'PASSWORD_RESET', 'VERIFY_EMAIL', 'EMAIL_SIGNIN', 'VERIFY_AND_CHANGE_EMAIL',\n];\n/** Maximum allowed number of characters in the custom claims payload. */\nconst MAX_CLAIMS_PAYLOAD_SIZE = 1000;\n/** Maximum allowed number of users to batch download at one time. */\nconst MAX_DOWNLOAD_ACCOUNT_PAGE_SIZE = 1000;\n/** Maximum allowed number of users to batch upload at one time. */\nconst MAX_UPLOAD_ACCOUNT_BATCH_SIZE = 1000;\n/** Maximum allowed number of users to batch get at one time. */\nconst MAX_GET_ACCOUNTS_BATCH_SIZE = 100;\n/** Maximum allowed number of users to batch delete at one time. */\nconst MAX_DELETE_ACCOUNTS_BATCH_SIZE = 1000;\n/** Minimum allowed session cookie duration in seconds (5 minutes). */\nconst MIN_SESSION_COOKIE_DURATION_SECS = 5 * 60;\n/** Maximum allowed session cookie duration in seconds (2 weeks). */\nconst MAX_SESSION_COOKIE_DURATION_SECS = 14 * 24 * 60 * 60;\n/** Maximum allowed number of provider configurations to batch download at one time. */\nconst MAX_LIST_PROVIDER_CONFIGURATION_PAGE_SIZE = 100;\n/** The Firebase Auth backend base URL format. */\nconst FIREBASE_AUTH_BASE_URL_FORMAT = 'https://identitytoolkit.googleapis.com/{version}/projects/{projectId}{api}';\n/** Firebase Auth base URlLformat when using the auth emultor. */\nconst FIREBASE_AUTH_EMULATOR_BASE_URL_FORMAT = 'http://{host}/identitytoolkit.googleapis.com/{version}/projects/{projectId}{api}';\n/** The Firebase Auth backend multi-tenancy base URL format. */\nconst FIREBASE_AUTH_TENANT_URL_FORMAT = FIREBASE_AUTH_BASE_URL_FORMAT.replace('projects/{projectId}', 'projects/{projectId}/tenants/{tenantId}');\n/** Firebase Auth base URL format when using the auth emultor with multi-tenancy. */\nconst FIREBASE_AUTH_EMULATOR_TENANT_URL_FORMAT = FIREBASE_AUTH_EMULATOR_BASE_URL_FORMAT.replace('projects/{projectId}', 'projects/{projectId}/tenants/{tenantId}');\n/** Maximum allowed number of tenants to download at one time. */\nconst MAX_LIST_TENANT_PAGE_SIZE = 1000;\n/**\n * Enum for the user write operation type.\n */\nvar WriteOperationType;\n(function (WriteOperationType) {\n    WriteOperationType[\"Create\"] = \"create\";\n    WriteOperationType[\"Update\"] = \"update\";\n    WriteOperationType[\"Upload\"] = \"upload\";\n})(WriteOperationType || (WriteOperationType = {}));\n/** Defines a base utility to help with resource URL construction. */\nclass AuthResourceUrlBuilder {\n    /**\n     * The resource URL builder constructor.\n     *\n     * @param projectId - The resource project ID.\n     * @param version - The endpoint API version.\n     * @constructor\n     */\n    constructor(app, version = 'v1') {\n        this.app = app;\n        this.version = version;\n        if (useEmulator()) {\n            this.urlFormat = utils.formatString(FIREBASE_AUTH_EMULATOR_BASE_URL_FORMAT, {\n                host: emulatorHost()\n            });\n        }\n        else {\n            this.urlFormat = FIREBASE_AUTH_BASE_URL_FORMAT;\n        }\n    }\n    /**\n     * Returns the resource URL corresponding to the provided parameters.\n     *\n     * @param api - The backend API name.\n     * @param params - The optional additional parameters to substitute in the\n     *     URL path.\n     * @returns The corresponding resource URL.\n     */\n    getUrl(api, params) {\n        return this.getProjectId()\n            .then((projectId) => {\n            const baseParams = {\n                version: this.version,\n                projectId,\n                api: api || '',\n            };\n            const baseUrl = utils.formatString(this.urlFormat, baseParams);\n            // Substitute additional api related parameters.\n            return utils.formatString(baseUrl, params || {});\n        });\n    }\n    getProjectId() {\n        if (this.projectId) {\n            return Promise.resolve(this.projectId);\n        }\n        return utils.findProjectId(this.app)\n            .then((projectId) => {\n            if (!validator.isNonEmptyString(projectId)) {\n                throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_CREDENTIAL, 'Failed to determine project ID for Auth. Initialize the '\n                    + 'SDK with service account credentials or set project ID as an app option. '\n                    + 'Alternatively set the GOOGLE_CLOUD_PROJECT environment variable.');\n            }\n            this.projectId = projectId;\n            return projectId;\n        });\n    }\n}\n/** Tenant aware resource builder utility. */\nclass TenantAwareAuthResourceUrlBuilder extends AuthResourceUrlBuilder {\n    /**\n     * The tenant aware resource URL builder constructor.\n     *\n     * @param projectId - The resource project ID.\n     * @param version - The endpoint API version.\n     * @param tenantId - The tenant ID.\n     * @constructor\n     */\n    constructor(app, version, tenantId) {\n        super(app, version);\n        this.app = app;\n        this.version = version;\n        this.tenantId = tenantId;\n        if (useEmulator()) {\n            this.urlFormat = utils.formatString(FIREBASE_AUTH_EMULATOR_TENANT_URL_FORMAT, {\n                host: emulatorHost()\n            });\n        }\n        else {\n            this.urlFormat = FIREBASE_AUTH_TENANT_URL_FORMAT;\n        }\n    }\n    /**\n     * Returns the resource URL corresponding to the provided parameters.\n     *\n     * @param api - The backend API name.\n     * @param params - The optional additional parameters to substitute in the\n     *     URL path.\n     * @returns The corresponding resource URL.\n     */\n    getUrl(api, params) {\n        return super.getUrl(api, params)\n            .then((url) => {\n            return utils.formatString(url, { tenantId: this.tenantId });\n        });\n    }\n}\n/**\n * Auth-specific HTTP client which uses the special \"owner\" token\n * when communicating with the Auth Emulator.\n */\nclass AuthHttpClient extends api_request_1.AuthorizedHttpClient {\n    getToken() {\n        if (useEmulator()) {\n            return Promise.resolve('owner');\n        }\n        return super.getToken();\n    }\n}\n/**\n * Validates an AuthFactorInfo object. All unsupported parameters\n * are removed from the original request. If an invalid field is passed\n * an error is thrown.\n *\n * @param request - The AuthFactorInfo request object.\n */\nfunction validateAuthFactorInfo(request) {\n    const validKeys = {\n        mfaEnrollmentId: true,\n        displayName: true,\n        phoneInfo: true,\n        enrolledAt: true,\n    };\n    // Remove unsupported keys from the original request.\n    for (const key in request) {\n        if (!(key in validKeys)) {\n            delete request[key];\n        }\n    }\n    // No enrollment ID is available for signupNewUser. Use another identifier.\n    const authFactorInfoIdentifier = request.mfaEnrollmentId || request.phoneInfo || JSON.stringify(request);\n    // Enrollment uid may or may not be specified for update operations.\n    if (typeof request.mfaEnrollmentId !== 'undefined' &&\n        !validator.isNonEmptyString(request.mfaEnrollmentId)) {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_UID, 'The second factor \"uid\" must be a valid non-empty string.');\n    }\n    if (typeof request.displayName !== 'undefined' &&\n        !validator.isString(request.displayName)) {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_DISPLAY_NAME, `The second factor \"displayName\" for \"${authFactorInfoIdentifier}\" must be a valid string.`);\n    }\n    // enrolledAt must be a valid UTC date string.\n    if (typeof request.enrolledAt !== 'undefined' &&\n        !validator.isISODateString(request.enrolledAt)) {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ENROLLMENT_TIME, `The second factor \"enrollmentTime\" for \"${authFactorInfoIdentifier}\" must be a valid ` +\n            'UTC date string.');\n    }\n    // Validate required fields depending on second factor type.\n    if (typeof request.phoneInfo !== 'undefined') {\n        // phoneNumber should be a string and a valid phone number.\n        if (!validator.isPhoneNumber(request.phoneInfo)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_PHONE_NUMBER, `The second factor \"phoneNumber\" for \"${authFactorInfoIdentifier}\" must be a non-empty ` +\n                'E.164 standard compliant identifier string.');\n        }\n    }\n    else {\n        // Invalid second factor. For example, a phone second factor may have been provided without\n        // a phone number. A TOTP based second factor may require a secret key, etc.\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ENROLLED_FACTORS, 'MFAInfo object provided is invalid.');\n    }\n}\n/**\n * Validates a providerUserInfo object. All unsupported parameters\n * are removed from the original request. If an invalid field is passed\n * an error is thrown.\n *\n * @param request - The providerUserInfo request object.\n */\nfunction validateProviderUserInfo(request) {\n    const validKeys = {\n        rawId: true,\n        providerId: true,\n        email: true,\n        displayName: true,\n        photoUrl: true,\n    };\n    // Remove invalid keys from original request.\n    for (const key in request) {\n        if (!(key in validKeys)) {\n            delete request[key];\n        }\n    }\n    if (!validator.isNonEmptyString(request.providerId)) {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_PROVIDER_ID);\n    }\n    if (typeof request.displayName !== 'undefined' &&\n        typeof request.displayName !== 'string') {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_DISPLAY_NAME, `The provider \"displayName\" for \"${request.providerId}\" must be a valid string.`);\n    }\n    if (!validator.isNonEmptyString(request.rawId)) {\n        // This is called localId on the backend but the developer specifies this as\n        // uid externally. So the error message should use the client facing name.\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_UID, `The provider \"uid\" for \"${request.providerId}\" must be a valid non-empty string.`);\n    }\n    // email should be a string and a valid email.\n    if (typeof request.email !== 'undefined' && !validator.isEmail(request.email)) {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_EMAIL, `The provider \"email\" for \"${request.providerId}\" must be a valid email string.`);\n    }\n    // photoUrl should be a URL.\n    if (typeof request.photoUrl !== 'undefined' &&\n        !validator.isURL(request.photoUrl)) {\n        // This is called photoUrl on the backend but the developer specifies this as\n        // photoURL externally. So the error message should use the client facing name.\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_PHOTO_URL, `The provider \"photoURL\" for \"${request.providerId}\" must be a valid URL string.`);\n    }\n}\n/**\n * Validates a create/edit request object. All unsupported parameters\n * are removed from the original request. If an invalid field is passed\n * an error is thrown.\n *\n * @param request - The create/edit request object.\n * @param writeOperationType - The write operation type.\n */\nfunction validateCreateEditRequest(request, writeOperationType) {\n    const uploadAccountRequest = writeOperationType === WriteOperationType.Upload;\n    // Hash set of whitelisted parameters.\n    const validKeys = {\n        displayName: true,\n        localId: true,\n        email: true,\n        password: true,\n        rawPassword: true,\n        emailVerified: true,\n        photoUrl: true,\n        disabled: true,\n        disableUser: true,\n        deleteAttribute: true,\n        deleteProvider: true,\n        sanityCheck: true,\n        phoneNumber: true,\n        customAttributes: true,\n        validSince: true,\n        // Pass linkProviderUserInfo only for updates (i.e. not for uploads.)\n        linkProviderUserInfo: !uploadAccountRequest,\n        // Pass tenantId only for uploadAccount requests.\n        tenantId: uploadAccountRequest,\n        passwordHash: uploadAccountRequest,\n        salt: uploadAccountRequest,\n        createdAt: uploadAccountRequest,\n        lastLoginAt: uploadAccountRequest,\n        providerUserInfo: uploadAccountRequest,\n        mfaInfo: uploadAccountRequest,\n        // Only for non-uploadAccount requests.\n        mfa: !uploadAccountRequest,\n    };\n    // Remove invalid keys from original request.\n    for (const key in request) {\n        if (!(key in validKeys)) {\n            delete request[key];\n        }\n    }\n    if (typeof request.tenantId !== 'undefined' &&\n        !validator.isNonEmptyString(request.tenantId)) {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_TENANT_ID);\n    }\n    // For any invalid parameter, use the external key name in the error description.\n    // displayName should be a string.\n    if (typeof request.displayName !== 'undefined' &&\n        !validator.isString(request.displayName)) {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_DISPLAY_NAME);\n    }\n    if ((typeof request.localId !== 'undefined' || uploadAccountRequest) &&\n        !validator.isUid(request.localId)) {\n        // This is called localId on the backend but the developer specifies this as\n        // uid externally. So the error message should use the client facing name.\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_UID);\n    }\n    // email should be a string and a valid email.\n    if (typeof request.email !== 'undefined' && !validator.isEmail(request.email)) {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_EMAIL);\n    }\n    // phoneNumber should be a string and a valid phone number.\n    if (typeof request.phoneNumber !== 'undefined' &&\n        !validator.isPhoneNumber(request.phoneNumber)) {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_PHONE_NUMBER);\n    }\n    // password should be a string and a minimum of 6 chars.\n    if (typeof request.password !== 'undefined' &&\n        !validator.isPassword(request.password)) {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_PASSWORD);\n    }\n    // rawPassword should be a string and a minimum of 6 chars.\n    if (typeof request.rawPassword !== 'undefined' &&\n        !validator.isPassword(request.rawPassword)) {\n        // This is called rawPassword on the backend but the developer specifies this as\n        // password externally. So the error message should use the client facing name.\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_PASSWORD);\n    }\n    // emailVerified should be a boolean.\n    if (typeof request.emailVerified !== 'undefined' &&\n        typeof request.emailVerified !== 'boolean') {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_EMAIL_VERIFIED);\n    }\n    // photoUrl should be a URL.\n    if (typeof request.photoUrl !== 'undefined' &&\n        !validator.isURL(request.photoUrl)) {\n        // This is called photoUrl on the backend but the developer specifies this as\n        // photoURL externally. So the error message should use the client facing name.\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_PHOTO_URL);\n    }\n    // disabled should be a boolean.\n    if (typeof request.disabled !== 'undefined' &&\n        typeof request.disabled !== 'boolean') {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_DISABLED_FIELD);\n    }\n    // validSince should be a number.\n    if (typeof request.validSince !== 'undefined' &&\n        !validator.isNumber(request.validSince)) {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_TOKENS_VALID_AFTER_TIME);\n    }\n    // createdAt should be a number.\n    if (typeof request.createdAt !== 'undefined' &&\n        !validator.isNumber(request.createdAt)) {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_CREATION_TIME);\n    }\n    // lastSignInAt should be a number.\n    if (typeof request.lastLoginAt !== 'undefined' &&\n        !validator.isNumber(request.lastLoginAt)) {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_LAST_SIGN_IN_TIME);\n    }\n    // disableUser should be a boolean.\n    if (typeof request.disableUser !== 'undefined' &&\n        typeof request.disableUser !== 'boolean') {\n        // This is called disableUser on the backend but the developer specifies this as\n        // disabled externally. So the error message should use the client facing name.\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_DISABLED_FIELD);\n    }\n    // customAttributes should be stringified JSON with no blacklisted claims.\n    // The payload should not exceed 1KB.\n    if (typeof request.customAttributes !== 'undefined') {\n        let developerClaims;\n        try {\n            developerClaims = JSON.parse(request.customAttributes);\n        }\n        catch (error) {\n            // JSON parsing error. This should never happen as we stringify the claims internally.\n            // However, we still need to check since setAccountInfo via edit requests could pass\n            // this field.\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_CLAIMS, error.message);\n        }\n        const invalidClaims = [];\n        // Check for any invalid claims.\n        exports.RESERVED_CLAIMS.forEach((blacklistedClaim) => {\n            if (Object.prototype.hasOwnProperty.call(developerClaims, blacklistedClaim)) {\n                invalidClaims.push(blacklistedClaim);\n            }\n        });\n        // Throw an error if an invalid claim is detected.\n        if (invalidClaims.length > 0) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.FORBIDDEN_CLAIM, invalidClaims.length > 1 ?\n                `Developer claims \"${invalidClaims.join('\", \"')}\" are reserved and cannot be specified.` :\n                `Developer claim \"${invalidClaims[0]}\" is reserved and cannot be specified.`);\n        }\n        // Check claims payload does not exceed maxmimum size.\n        if (request.customAttributes.length > MAX_CLAIMS_PAYLOAD_SIZE) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.CLAIMS_TOO_LARGE, `Developer claims payload should not exceed ${MAX_CLAIMS_PAYLOAD_SIZE} characters.`);\n        }\n    }\n    // passwordHash has to be a base64 encoded string.\n    if (typeof request.passwordHash !== 'undefined' &&\n        !validator.isString(request.passwordHash)) {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_PASSWORD_HASH);\n    }\n    // salt has to be a base64 encoded string.\n    if (typeof request.salt !== 'undefined' &&\n        !validator.isString(request.salt)) {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_PASSWORD_SALT);\n    }\n    // providerUserInfo has to be an array of valid UserInfo requests.\n    if (typeof request.providerUserInfo !== 'undefined' &&\n        !validator.isArray(request.providerUserInfo)) {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_PROVIDER_DATA);\n    }\n    else if (validator.isArray(request.providerUserInfo)) {\n        request.providerUserInfo.forEach((providerUserInfoEntry) => {\n            validateProviderUserInfo(providerUserInfoEntry);\n        });\n    }\n    // linkProviderUserInfo must be a (single) UserProvider value.\n    if (typeof request.linkProviderUserInfo !== 'undefined') {\n        validateProviderUserInfo(request.linkProviderUserInfo);\n    }\n    // mfaInfo is used for importUsers.\n    // mfa.enrollments is used for setAccountInfo.\n    // enrollments has to be an array of valid AuthFactorInfo requests.\n    let enrollments = null;\n    if (request.mfaInfo) {\n        enrollments = request.mfaInfo;\n    }\n    else if (request.mfa && request.mfa.enrollments) {\n        enrollments = request.mfa.enrollments;\n    }\n    if (enrollments) {\n        if (!validator.isArray(enrollments)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ENROLLED_FACTORS);\n        }\n        enrollments.forEach((authFactorInfoEntry) => {\n            validateAuthFactorInfo(authFactorInfoEntry);\n        });\n    }\n}\n/**\n * Instantiates the createSessionCookie endpoint settings.\n *\n * @internal\n */\nexports.FIREBASE_AUTH_CREATE_SESSION_COOKIE = new api_request_1.ApiSettings(':createSessionCookie', 'POST')\n    // Set request validator.\n    .setRequestValidator((request) => {\n    // Validate the ID token is a non-empty string.\n    if (!validator.isNonEmptyString(request.idToken)) {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ID_TOKEN);\n    }\n    // Validate the custom session cookie duration.\n    if (!validator.isNumber(request.validDuration) ||\n        request.validDuration < MIN_SESSION_COOKIE_DURATION_SECS ||\n        request.validDuration > MAX_SESSION_COOKIE_DURATION_SECS) {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_SESSION_COOKIE_DURATION);\n    }\n})\n    // Set response validator.\n    .setResponseValidator((response) => {\n    // Response should always contain the session cookie.\n    if (!validator.isNonEmptyString(response.sessionCookie)) {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INTERNAL_ERROR);\n    }\n});\n/**\n * Instantiates the uploadAccount endpoint settings.\n *\n * @internal\n */\nexports.FIREBASE_AUTH_UPLOAD_ACCOUNT = new api_request_1.ApiSettings('/accounts:batchCreate', 'POST');\n/**\n * Instantiates the downloadAccount endpoint settings.\n *\n * @internal\n */\nexports.FIREBASE_AUTH_DOWNLOAD_ACCOUNT = new api_request_1.ApiSettings('/accounts:batchGet', 'GET')\n    // Set request validator.\n    .setRequestValidator((request) => {\n    // Validate next page token.\n    if (typeof request.nextPageToken !== 'undefined' &&\n        !validator.isNonEmptyString(request.nextPageToken)) {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_PAGE_TOKEN);\n    }\n    // Validate max results.\n    if (!validator.isNumber(request.maxResults) ||\n        request.maxResults <= 0 ||\n        request.maxResults > MAX_DOWNLOAD_ACCOUNT_PAGE_SIZE) {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, 'Required \"maxResults\" must be a positive integer that does not exceed ' +\n            `${MAX_DOWNLOAD_ACCOUNT_PAGE_SIZE}.`);\n    }\n});\n/**\n * Instantiates the getAccountInfo endpoint settings.\n *\n * @internal\n */\nexports.FIREBASE_AUTH_GET_ACCOUNT_INFO = new api_request_1.ApiSettings('/accounts:lookup', 'POST')\n    // Set request validator.\n    .setRequestValidator((request) => {\n    if (!request.localId && !request.email && !request.phoneNumber && !request.federatedUserId) {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INTERNAL_ERROR, 'INTERNAL ASSERT FAILED: Server request is missing user identifier');\n    }\n})\n    // Set response validator.\n    .setResponseValidator((response) => {\n    if (!response.users || !response.users.length) {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.USER_NOT_FOUND);\n    }\n});\n/**\n * Instantiates the getAccountInfo endpoint settings for use when fetching info\n * for multiple accounts.\n *\n * @internal\n */\nexports.FIREBASE_AUTH_GET_ACCOUNTS_INFO = new api_request_1.ApiSettings('/accounts:lookup', 'POST')\n    // Set request validator.\n    .setRequestValidator((request) => {\n    if (!request.localId && !request.email && !request.phoneNumber && !request.federatedUserId) {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INTERNAL_ERROR, 'INTERNAL ASSERT FAILED: Server request is missing user identifier');\n    }\n});\n/**\n * Instantiates the deleteAccount endpoint settings.\n *\n * @internal\n */\nexports.FIREBASE_AUTH_DELETE_ACCOUNT = new api_request_1.ApiSettings('/accounts:delete', 'POST')\n    // Set request validator.\n    .setRequestValidator((request) => {\n    if (!request.localId) {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INTERNAL_ERROR, 'INTERNAL ASSERT FAILED: Server request is missing user identifier');\n    }\n});\n/**\n * @internal\n */\nexports.FIREBASE_AUTH_BATCH_DELETE_ACCOUNTS = new api_request_1.ApiSettings('/accounts:batchDelete', 'POST')\n    .setRequestValidator((request) => {\n    if (!request.localIds) {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INTERNAL_ERROR, 'INTERNAL ASSERT FAILED: Server request is missing user identifiers');\n    }\n    if (typeof request.force === 'undefined' || request.force !== true) {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INTERNAL_ERROR, 'INTERNAL ASSERT FAILED: Server request is missing force=true field');\n    }\n})\n    .setResponseValidator((response) => {\n    const errors = response.errors || [];\n    errors.forEach((batchDeleteErrorInfo) => {\n        if (typeof batchDeleteErrorInfo.index === 'undefined') {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INTERNAL_ERROR, 'INTERNAL ASSERT FAILED: Server BatchDeleteAccountResponse is missing an errors.index field');\n        }\n        if (!batchDeleteErrorInfo.localId) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INTERNAL_ERROR, 'INTERNAL ASSERT FAILED: Server BatchDeleteAccountResponse is missing an errors.localId field');\n        }\n        // Allow the (error) message to be missing/undef.\n    });\n});\n/**\n * Instantiates the setAccountInfo endpoint settings for updating existing accounts.\n *\n * @internal\n */\nexports.FIREBASE_AUTH_SET_ACCOUNT_INFO = new api_request_1.ApiSettings('/accounts:update', 'POST')\n    // Set request validator.\n    .setRequestValidator((request) => {\n    // localId is a required parameter.\n    if (typeof request.localId === 'undefined') {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INTERNAL_ERROR, 'INTERNAL ASSERT FAILED: Server request is missing user identifier');\n    }\n    // Throw error when tenantId is passed in POST body.\n    if (typeof request.tenantId !== 'undefined') {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, '\"tenantId\" is an invalid \"UpdateRequest\" property.');\n    }\n    validateCreateEditRequest(request, WriteOperationType.Update);\n})\n    // Set response validator.\n    .setResponseValidator((response) => {\n    // If the localId is not returned, then the request failed.\n    if (!response.localId) {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.USER_NOT_FOUND);\n    }\n});\n/**\n * Instantiates the signupNewUser endpoint settings for creating a new user with or without\n * uid being specified. The backend will create a new one if not provided and return it.\n *\n * @internal\n */\nexports.FIREBASE_AUTH_SIGN_UP_NEW_USER = new api_request_1.ApiSettings('/accounts', 'POST')\n    // Set request validator.\n    .setRequestValidator((request) => {\n    // signupNewUser does not support customAttributes.\n    if (typeof request.customAttributes !== 'undefined') {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, '\"customAttributes\" cannot be set when creating a new user.');\n    }\n    // signupNewUser does not support validSince.\n    if (typeof request.validSince !== 'undefined') {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, '\"validSince\" cannot be set when creating a new user.');\n    }\n    // Throw error when tenantId is passed in POST body.\n    if (typeof request.tenantId !== 'undefined') {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, '\"tenantId\" is an invalid \"CreateRequest\" property.');\n    }\n    validateCreateEditRequest(request, WriteOperationType.Create);\n})\n    // Set response validator.\n    .setResponseValidator((response) => {\n    // If the localId is not returned, then the request failed.\n    if (!response.localId) {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INTERNAL_ERROR, 'INTERNAL ASSERT FAILED: Unable to create new user');\n    }\n});\nconst FIREBASE_AUTH_GET_OOB_CODE = new api_request_1.ApiSettings('/accounts:sendOobCode', 'POST')\n    // Set request validator.\n    .setRequestValidator((request) => {\n    if (!validator.isEmail(request.email)) {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_EMAIL);\n    }\n    if (typeof request.newEmail !== 'undefined' && !validator.isEmail(request.newEmail)) {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_NEW_EMAIL);\n    }\n    if (exports.EMAIL_ACTION_REQUEST_TYPES.indexOf(request.requestType) === -1) {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, `\"${request.requestType}\" is not a supported email action request type.`);\n    }\n})\n    // Set response validator.\n    .setResponseValidator((response) => {\n    // If the oobLink is not returned, then the request failed.\n    if (!response.oobLink) {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INTERNAL_ERROR, 'INTERNAL ASSERT FAILED: Unable to create the email action link');\n    }\n});\n/**\n * Instantiates the retrieve OIDC configuration endpoint settings.\n *\n * @internal\n */\nconst GET_OAUTH_IDP_CONFIG = new api_request_1.ApiSettings('/oauthIdpConfigs/{providerId}', 'GET')\n    // Set response validator.\n    .setResponseValidator((response) => {\n    // Response should always contain the OIDC provider resource name.\n    if (!validator.isNonEmptyString(response.name)) {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INTERNAL_ERROR, 'INTERNAL ASSERT FAILED: Unable to get OIDC configuration');\n    }\n});\n/**\n * Instantiates the delete OIDC configuration endpoint settings.\n *\n * @internal\n */\nconst DELETE_OAUTH_IDP_CONFIG = new api_request_1.ApiSettings('/oauthIdpConfigs/{providerId}', 'DELETE');\n/**\n * Instantiates the create OIDC configuration endpoint settings.\n *\n * @internal\n */\nconst CREATE_OAUTH_IDP_CONFIG = new api_request_1.ApiSettings('/oauthIdpConfigs?oauthIdpConfigId={providerId}', 'POST')\n    // Set response validator.\n    .setResponseValidator((response) => {\n    // Response should always contain the OIDC provider resource name.\n    if (!validator.isNonEmptyString(response.name)) {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INTERNAL_ERROR, 'INTERNAL ASSERT FAILED: Unable to create new OIDC configuration');\n    }\n});\n/**\n * Instantiates the update OIDC configuration endpoint settings.\n *\n * @internal\n */\nconst UPDATE_OAUTH_IDP_CONFIG = new api_request_1.ApiSettings('/oauthIdpConfigs/{providerId}?updateMask={updateMask}', 'PATCH')\n    // Set response validator.\n    .setResponseValidator((response) => {\n    // Response should always contain the configuration resource name.\n    if (!validator.isNonEmptyString(response.name)) {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INTERNAL_ERROR, 'INTERNAL ASSERT FAILED: Unable to update OIDC configuration');\n    }\n});\n/**\n * Instantiates the list OIDC configuration endpoint settings.\n *\n * @internal\n */\nconst LIST_OAUTH_IDP_CONFIGS = new api_request_1.ApiSettings('/oauthIdpConfigs', 'GET')\n    // Set request validator.\n    .setRequestValidator((request) => {\n    // Validate next page token.\n    if (typeof request.pageToken !== 'undefined' &&\n        !validator.isNonEmptyString(request.pageToken)) {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_PAGE_TOKEN);\n    }\n    // Validate max results.\n    if (!validator.isNumber(request.pageSize) ||\n        request.pageSize <= 0 ||\n        request.pageSize > MAX_LIST_PROVIDER_CONFIGURATION_PAGE_SIZE) {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, 'Required \"maxResults\" must be a positive integer that does not exceed ' +\n            `${MAX_LIST_PROVIDER_CONFIGURATION_PAGE_SIZE}.`);\n    }\n});\n/**\n * Instantiates the retrieve SAML configuration endpoint settings.\n *\n * @internal\n */\nconst GET_INBOUND_SAML_CONFIG = new api_request_1.ApiSettings('/inboundSamlConfigs/{providerId}', 'GET')\n    // Set response validator.\n    .setResponseValidator((response) => {\n    // Response should always contain the SAML provider resource name.\n    if (!validator.isNonEmptyString(response.name)) {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INTERNAL_ERROR, 'INTERNAL ASSERT FAILED: Unable to get SAML configuration');\n    }\n});\n/**\n * Instantiates the delete SAML configuration endpoint settings.\n *\n * @internal\n */\nconst DELETE_INBOUND_SAML_CONFIG = new api_request_1.ApiSettings('/inboundSamlConfigs/{providerId}', 'DELETE');\n/**\n * Instantiates the create SAML configuration endpoint settings.\n *\n * @internal\n */\nconst CREATE_INBOUND_SAML_CONFIG = new api_request_1.ApiSettings('/inboundSamlConfigs?inboundSamlConfigId={providerId}', 'POST')\n    // Set response validator.\n    .setResponseValidator((response) => {\n    // Response should always contain the SAML provider resource name.\n    if (!validator.isNonEmptyString(response.name)) {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INTERNAL_ERROR, 'INTERNAL ASSERT FAILED: Unable to create new SAML configuration');\n    }\n});\n/**\n * Instantiates the update SAML configuration endpoint settings.\n *\n * @internal\n */\nconst UPDATE_INBOUND_SAML_CONFIG = new api_request_1.ApiSettings('/inboundSamlConfigs/{providerId}?updateMask={updateMask}', 'PATCH')\n    // Set response validator.\n    .setResponseValidator((response) => {\n    // Response should always contain the configuration resource name.\n    if (!validator.isNonEmptyString(response.name)) {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INTERNAL_ERROR, 'INTERNAL ASSERT FAILED: Unable to update SAML configuration');\n    }\n});\n/**\n * Instantiates the list SAML configuration endpoint settings.\n *\n * @internal\n */\nconst LIST_INBOUND_SAML_CONFIGS = new api_request_1.ApiSettings('/inboundSamlConfigs', 'GET')\n    // Set request validator.\n    .setRequestValidator((request) => {\n    // Validate next page token.\n    if (typeof request.pageToken !== 'undefined' &&\n        !validator.isNonEmptyString(request.pageToken)) {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_PAGE_TOKEN);\n    }\n    // Validate max results.\n    if (!validator.isNumber(request.pageSize) ||\n        request.pageSize <= 0 ||\n        request.pageSize > MAX_LIST_PROVIDER_CONFIGURATION_PAGE_SIZE) {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, 'Required \"maxResults\" must be a positive integer that does not exceed ' +\n            `${MAX_LIST_PROVIDER_CONFIGURATION_PAGE_SIZE}.`);\n    }\n});\n/**\n * Class that provides the mechanism to send requests to the Firebase Auth backend endpoints.\n *\n * @internal\n */\nclass AbstractAuthRequestHandler {\n    /**\n     * @param response - The response to check for errors.\n     * @returns The error code if present; null otherwise.\n     */\n    static getErrorCode(response) {\n        return (validator.isNonNullObject(response) && response.error && response.error.message) || null;\n    }\n    static addUidToRequest(id, request) {\n        if (!validator.isUid(id.uid)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_UID);\n        }\n        request.localId ? request.localId.push(id.uid) : request.localId = [id.uid];\n        return request;\n    }\n    static addEmailToRequest(id, request) {\n        if (!validator.isEmail(id.email)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_EMAIL);\n        }\n        request.email ? request.email.push(id.email) : request.email = [id.email];\n        return request;\n    }\n    static addPhoneToRequest(id, request) {\n        if (!validator.isPhoneNumber(id.phoneNumber)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_PHONE_NUMBER);\n        }\n        request.phoneNumber ? request.phoneNumber.push(id.phoneNumber) : request.phoneNumber = [id.phoneNumber];\n        return request;\n    }\n    static addProviderToRequest(id, request) {\n        if (!validator.isNonEmptyString(id.providerId)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_PROVIDER_ID);\n        }\n        if (!validator.isNonEmptyString(id.providerUid)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_PROVIDER_UID);\n        }\n        const federatedUserId = {\n            providerId: id.providerId,\n            rawId: id.providerUid,\n        };\n        request.federatedUserId\n            ? request.federatedUserId.push(federatedUserId)\n            : request.federatedUserId = [federatedUserId];\n        return request;\n    }\n    /**\n     * @param app - The app used to fetch access tokens to sign API requests.\n     * @constructor\n     */\n    constructor(app) {\n        this.app = app;\n        if (typeof app !== 'object' || app === null || !('options' in app)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, 'First argument passed to admin.auth() must be a valid Firebase app instance.');\n        }\n        this.httpClient = new AuthHttpClient(app);\n    }\n    /**\n     * Creates a new Firebase session cookie with the specified duration that can be used for\n     * session management (set as a server side session cookie with custom cookie policy).\n     * The session cookie JWT will have the same payload claims as the provided ID token.\n     *\n     * @param idToken - The Firebase ID token to exchange for a session cookie.\n     * @param expiresIn - The session cookie duration in milliseconds.\n     *\n     * @returns A promise that resolves on success with the created session cookie.\n     */\n    createSessionCookie(idToken, expiresIn) {\n        const request = {\n            idToken,\n            // Convert to seconds.\n            validDuration: expiresIn / 1000,\n        };\n        return this.invokeRequestHandler(this.getAuthUrlBuilder(), exports.FIREBASE_AUTH_CREATE_SESSION_COOKIE, request)\n            .then((response) => response.sessionCookie);\n    }\n    /**\n     * Looks up a user by uid.\n     *\n     * @param uid - The uid of the user to lookup.\n     * @returns A promise that resolves with the user information.\n     */\n    getAccountInfoByUid(uid) {\n        if (!validator.isUid(uid)) {\n            return Promise.reject(new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_UID));\n        }\n        const request = {\n            localId: [uid],\n        };\n        return this.invokeRequestHandler(this.getAuthUrlBuilder(), exports.FIREBASE_AUTH_GET_ACCOUNT_INFO, request);\n    }\n    /**\n     * Looks up a user by email.\n     *\n     * @param email - The email of the user to lookup.\n     * @returns A promise that resolves with the user information.\n     */\n    getAccountInfoByEmail(email) {\n        if (!validator.isEmail(email)) {\n            return Promise.reject(new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_EMAIL));\n        }\n        const request = {\n            email: [email],\n        };\n        return this.invokeRequestHandler(this.getAuthUrlBuilder(), exports.FIREBASE_AUTH_GET_ACCOUNT_INFO, request);\n    }\n    /**\n     * Looks up a user by phone number.\n     *\n     * @param phoneNumber - The phone number of the user to lookup.\n     * @returns A promise that resolves with the user information.\n     */\n    getAccountInfoByPhoneNumber(phoneNumber) {\n        if (!validator.isPhoneNumber(phoneNumber)) {\n            return Promise.reject(new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_PHONE_NUMBER));\n        }\n        const request = {\n            phoneNumber: [phoneNumber],\n        };\n        return this.invokeRequestHandler(this.getAuthUrlBuilder(), exports.FIREBASE_AUTH_GET_ACCOUNT_INFO, request);\n    }\n    getAccountInfoByFederatedUid(providerId, rawId) {\n        if (!validator.isNonEmptyString(providerId) || !validator.isNonEmptyString(rawId)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_PROVIDER_ID);\n        }\n        const request = {\n            federatedUserId: [{\n                    providerId,\n                    rawId,\n                }],\n        };\n        return this.invokeRequestHandler(this.getAuthUrlBuilder(), exports.FIREBASE_AUTH_GET_ACCOUNT_INFO, request);\n    }\n    /**\n     * Looks up multiple users by their identifiers (uid, email, etc).\n     *\n     * @param identifiers - The identifiers indicating the users\n     *     to be looked up. Must have <= 100 entries.\n     * @param A - promise that resolves with the set of successfully\n     *     looked up users. Possibly empty if no users were looked up.\n     */\n    getAccountInfoByIdentifiers(identifiers) {\n        if (identifiers.length === 0) {\n            return Promise.resolve({ users: [] });\n        }\n        else if (identifiers.length > MAX_GET_ACCOUNTS_BATCH_SIZE) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.MAXIMUM_USER_COUNT_EXCEEDED, '`identifiers` parameter must have <= ' + MAX_GET_ACCOUNTS_BATCH_SIZE + ' entries.');\n        }\n        let request = {};\n        for (const id of identifiers) {\n            if ((0, identifier_1.isUidIdentifier)(id)) {\n                request = AbstractAuthRequestHandler.addUidToRequest(id, request);\n            }\n            else if ((0, identifier_1.isEmailIdentifier)(id)) {\n                request = AbstractAuthRequestHandler.addEmailToRequest(id, request);\n            }\n            else if ((0, identifier_1.isPhoneIdentifier)(id)) {\n                request = AbstractAuthRequestHandler.addPhoneToRequest(id, request);\n            }\n            else if ((0, identifier_1.isProviderIdentifier)(id)) {\n                request = AbstractAuthRequestHandler.addProviderToRequest(id, request);\n            }\n            else {\n                throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, 'Unrecognized identifier: ' + id);\n            }\n        }\n        return this.invokeRequestHandler(this.getAuthUrlBuilder(), exports.FIREBASE_AUTH_GET_ACCOUNTS_INFO, request);\n    }\n    /**\n     * Exports the users (single batch only) with a size of maxResults and starting from\n     * the offset as specified by pageToken.\n     *\n     * @param maxResults - The page size, 1000 if undefined. This is also the maximum\n     *     allowed limit.\n     * @param pageToken - The next page token. If not specified, returns users starting\n     *     without any offset. Users are returned in the order they were created from oldest to\n     *     newest, relative to the page token offset.\n     * @returns A promise that resolves with the current batch of downloaded\n     *     users and the next page token if available. For the last page, an empty list of users\n     *     and no page token are returned.\n     */\n    downloadAccount(maxResults = MAX_DOWNLOAD_ACCOUNT_PAGE_SIZE, pageToken) {\n        // Construct request.\n        const request = {\n            maxResults,\n            nextPageToken: pageToken,\n        };\n        // Remove next page token if not provided.\n        if (typeof request.nextPageToken === 'undefined') {\n            delete request.nextPageToken;\n        }\n        return this.invokeRequestHandler(this.getAuthUrlBuilder(), exports.FIREBASE_AUTH_DOWNLOAD_ACCOUNT, request)\n            .then((response) => {\n            // No more users available.\n            if (!response.users) {\n                response.users = [];\n            }\n            return response;\n        });\n    }\n    /**\n     * Imports the list of users provided to Firebase Auth. This is useful when\n     * migrating from an external authentication system without having to use the Firebase CLI SDK.\n     * At most, 1000 users are allowed to be imported one at a time.\n     * When importing a list of password users, UserImportOptions are required to be specified.\n     *\n     * @param users - The list of user records to import to Firebase Auth.\n     * @param options - The user import options, required when the users provided\n     *     include password credentials.\n     * @returns A promise that resolves when the operation completes\n     *     with the result of the import. This includes the number of successful imports, the number\n     *     of failed uploads and their corresponding errors.\n     */\n    uploadAccount(users, options) {\n        // This will throw if any error is detected in the hash options.\n        // For errors in the list of users, this will not throw and will report the errors and the\n        // corresponding user index in the user import generated response below.\n        // No need to validate raw request or raw response as this is done in UserImportBuilder.\n        const userImportBuilder = new user_import_builder_1.UserImportBuilder(users, options, (userRequest) => {\n            // Pass true to validate the uploadAccount specific fields.\n            validateCreateEditRequest(userRequest, WriteOperationType.Upload);\n        });\n        const request = userImportBuilder.buildRequest();\n        // Fail quickly if more users than allowed are to be imported.\n        if (validator.isArray(users) && users.length > MAX_UPLOAD_ACCOUNT_BATCH_SIZE) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.MAXIMUM_USER_COUNT_EXCEEDED, `A maximum of ${MAX_UPLOAD_ACCOUNT_BATCH_SIZE} users can be imported at once.`);\n        }\n        // If no remaining user in request after client side processing, there is no need\n        // to send the request to the server.\n        if (!request.users || request.users.length === 0) {\n            return Promise.resolve(userImportBuilder.buildResponse([]));\n        }\n        return this.invokeRequestHandler(this.getAuthUrlBuilder(), exports.FIREBASE_AUTH_UPLOAD_ACCOUNT, request)\n            .then((response) => {\n            // No error object is returned if no error encountered.\n            const failedUploads = (response.error || []);\n            // Rewrite response as UserImportResult and re-insert client previously detected errors.\n            return userImportBuilder.buildResponse(failedUploads);\n        });\n    }\n    /**\n     * Deletes an account identified by a uid.\n     *\n     * @param uid - The uid of the user to delete.\n     * @returns A promise that resolves when the user is deleted.\n     */\n    deleteAccount(uid) {\n        if (!validator.isUid(uid)) {\n            return Promise.reject(new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_UID));\n        }\n        const request = {\n            localId: uid,\n        };\n        return this.invokeRequestHandler(this.getAuthUrlBuilder(), exports.FIREBASE_AUTH_DELETE_ACCOUNT, request);\n    }\n    deleteAccounts(uids, force) {\n        if (uids.length === 0) {\n            return Promise.resolve({});\n        }\n        else if (uids.length > MAX_DELETE_ACCOUNTS_BATCH_SIZE) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.MAXIMUM_USER_COUNT_EXCEEDED, '`uids` parameter must have <= ' + MAX_DELETE_ACCOUNTS_BATCH_SIZE + ' entries.');\n        }\n        const request = {\n            localIds: [],\n            force,\n        };\n        uids.forEach((uid) => {\n            if (!validator.isUid(uid)) {\n                throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_UID);\n            }\n            request.localIds.push(uid);\n        });\n        return this.invokeRequestHandler(this.getAuthUrlBuilder(), exports.FIREBASE_AUTH_BATCH_DELETE_ACCOUNTS, request);\n    }\n    /**\n     * Sets additional developer claims on an existing user identified by provided UID.\n     *\n     * @param uid - The user to edit.\n     * @param customUserClaims - The developer claims to set.\n     * @returns A promise that resolves when the operation completes\n     *     with the user id that was edited.\n     */\n    setCustomUserClaims(uid, customUserClaims) {\n        // Validate user UID.\n        if (!validator.isUid(uid)) {\n            return Promise.reject(new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_UID));\n        }\n        else if (!validator.isObject(customUserClaims)) {\n            return Promise.reject(new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, 'CustomUserClaims argument must be an object or null.'));\n        }\n        // Delete operation. Replace null with an empty object.\n        if (customUserClaims === null) {\n            customUserClaims = {};\n        }\n        // Construct custom user attribute editting request.\n        const request = {\n            localId: uid,\n            customAttributes: JSON.stringify(customUserClaims),\n        };\n        return this.invokeRequestHandler(this.getAuthUrlBuilder(), exports.FIREBASE_AUTH_SET_ACCOUNT_INFO, request)\n            .then((response) => {\n            return response.localId;\n        });\n    }\n    /**\n     * Edits an existing user.\n     *\n     * @param uid - The user to edit.\n     * @param properties - The properties to set on the user.\n     * @returns A promise that resolves when the operation completes\n     *     with the user id that was edited.\n     */\n    updateExistingAccount(uid, properties) {\n        if (!validator.isUid(uid)) {\n            return Promise.reject(new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_UID));\n        }\n        else if (!validator.isNonNullObject(properties)) {\n            return Promise.reject(new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, 'Properties argument must be a non-null object.'));\n        }\n        else if (validator.isNonNullObject(properties.providerToLink)) {\n            // TODO(rsgowman): These checks overlap somewhat with\n            // validateProviderUserInfo. It may be possible to refactor a bit.\n            if (!validator.isNonEmptyString(properties.providerToLink.providerId)) {\n                throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, 'providerToLink.providerId of properties argument must be a non-empty string.');\n            }\n            if (!validator.isNonEmptyString(properties.providerToLink.uid)) {\n                throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, 'providerToLink.uid of properties argument must be a non-empty string.');\n            }\n        }\n        else if (typeof properties.providersToUnlink !== 'undefined') {\n            if (!validator.isArray(properties.providersToUnlink)) {\n                throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, 'providersToUnlink of properties argument must be an array of strings.');\n            }\n            properties.providersToUnlink.forEach((providerId) => {\n                if (!validator.isNonEmptyString(providerId)) {\n                    throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, 'providersToUnlink of properties argument must be an array of strings.');\n                }\n            });\n        }\n        // Build the setAccountInfo request.\n        const request = (0, deep_copy_1.deepCopy)(properties);\n        request.localId = uid;\n        // For deleting displayName or photoURL, these values must be passed as null.\n        // They will be removed from the backend request and an additional parameter\n        // deleteAttribute: ['PHOTO_URL', 'DISPLAY_NAME']\n        // with an array of the parameter names to delete will be passed.\n        // Parameters that are deletable and their deleteAttribute names.\n        // Use client facing names, photoURL instead of photoUrl.\n        const deletableParams = {\n            displayName: 'DISPLAY_NAME',\n            photoURL: 'PHOTO_URL',\n        };\n        // Properties to delete if available.\n        request.deleteAttribute = [];\n        for (const key in deletableParams) {\n            if (request[key] === null) {\n                // Add property identifier to list of attributes to delete.\n                request.deleteAttribute.push(deletableParams[key]);\n                // Remove property from request.\n                delete request[key];\n            }\n        }\n        if (request.deleteAttribute.length === 0) {\n            delete request.deleteAttribute;\n        }\n        // For deleting phoneNumber, this value must be passed as null.\n        // It will be removed from the backend request and an additional parameter\n        // deleteProvider: ['phone'] with an array of providerIds (phone in this case),\n        // will be passed.\n        if (request.phoneNumber === null) {\n            request.deleteProvider ? request.deleteProvider.push('phone') : request.deleteProvider = ['phone'];\n            delete request.phoneNumber;\n        }\n        if (typeof (request.providerToLink) !== 'undefined') {\n            request.linkProviderUserInfo = (0, deep_copy_1.deepCopy)(request.providerToLink);\n            delete request.providerToLink;\n            request.linkProviderUserInfo.rawId = request.linkProviderUserInfo.uid;\n            delete request.linkProviderUserInfo.uid;\n        }\n        if (typeof (request.providersToUnlink) !== 'undefined') {\n            if (!validator.isArray(request.deleteProvider)) {\n                request.deleteProvider = [];\n            }\n            request.deleteProvider = request.deleteProvider.concat(request.providersToUnlink);\n            delete request.providersToUnlink;\n        }\n        // Rewrite photoURL to photoUrl.\n        if (typeof request.photoURL !== 'undefined') {\n            request.photoUrl = request.photoURL;\n            delete request.photoURL;\n        }\n        // Rewrite disabled to disableUser.\n        if (typeof request.disabled !== 'undefined') {\n            request.disableUser = request.disabled;\n            delete request.disabled;\n        }\n        // Construct mfa related user data.\n        if (validator.isNonNullObject(request.multiFactor)) {\n            if (request.multiFactor.enrolledFactors === null) {\n                // Remove all second factors.\n                request.mfa = {};\n            }\n            else if (validator.isArray(request.multiFactor.enrolledFactors)) {\n                request.mfa = {\n                    enrollments: [],\n                };\n                try {\n                    request.multiFactor.enrolledFactors.forEach((multiFactorInfo) => {\n                        request.mfa.enrollments.push((0, user_import_builder_1.convertMultiFactorInfoToServerFormat)(multiFactorInfo));\n                    });\n                }\n                catch (e) {\n                    return Promise.reject(e);\n                }\n                if (request.mfa.enrollments.length === 0) {\n                    delete request.mfa.enrollments;\n                }\n            }\n            delete request.multiFactor;\n        }\n        return this.invokeRequestHandler(this.getAuthUrlBuilder(), exports.FIREBASE_AUTH_SET_ACCOUNT_INFO, request)\n            .then((response) => {\n            return response.localId;\n        });\n    }\n    /**\n     * Revokes all refresh tokens for the specified user identified by the uid provided.\n     * In addition to revoking all refresh tokens for a user, all ID tokens issued\n     * before revocation will also be revoked on the Auth backend. Any request with an\n     * ID token generated before revocation will be rejected with a token expired error.\n     * Note that due to the fact that the timestamp is stored in seconds, any tokens minted in\n     * the same second as the revocation will still be valid. If there is a chance that a token\n     * was minted in the last second, delay for 1 second before revoking.\n     *\n     * @param uid - The user whose tokens are to be revoked.\n     * @returns A promise that resolves when the operation completes\n     *     successfully with the user id of the corresponding user.\n     */\n    revokeRefreshTokens(uid) {\n        // Validate user UID.\n        if (!validator.isUid(uid)) {\n            return Promise.reject(new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_UID));\n        }\n        const request = {\n            localId: uid,\n            // validSince is in UTC seconds.\n            validSince: Math.floor(new Date().getTime() / 1000),\n        };\n        return this.invokeRequestHandler(this.getAuthUrlBuilder(), exports.FIREBASE_AUTH_SET_ACCOUNT_INFO, request)\n            .then((response) => {\n            return response.localId;\n        });\n    }\n    /**\n     * Create a new user with the properties supplied.\n     *\n     * @param properties - The properties to set on the user.\n     * @returns A promise that resolves when the operation completes\n     *     with the user id that was created.\n     */\n    createNewAccount(properties) {\n        if (!validator.isNonNullObject(properties)) {\n            return Promise.reject(new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, 'Properties argument must be a non-null object.'));\n        }\n        const request = (0, deep_copy_1.deepCopy)(properties);\n        // Rewrite photoURL to photoUrl.\n        if (typeof request.photoURL !== 'undefined') {\n            request.photoUrl = request.photoURL;\n            delete request.photoURL;\n        }\n        // Rewrite uid to localId if it exists.\n        if (typeof request.uid !== 'undefined') {\n            request.localId = request.uid;\n            delete request.uid;\n        }\n        // Construct mfa related user data.\n        if (validator.isNonNullObject(request.multiFactor)) {\n            if (validator.isNonEmptyArray(request.multiFactor.enrolledFactors)) {\n                const mfaInfo = [];\n                try {\n                    request.multiFactor.enrolledFactors.forEach((multiFactorInfo) => {\n                        // Enrollment time and uid are not allowed for signupNewUser endpoint.\n                        // They will automatically be provisioned server side.\n                        if ('enrollmentTime' in multiFactorInfo) {\n                            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, '\"enrollmentTime\" is not supported when adding second factors via \"createUser()\"');\n                        }\n                        else if ('uid' in multiFactorInfo) {\n                            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, '\"uid\" is not supported when adding second factors via \"createUser()\"');\n                        }\n                        mfaInfo.push((0, user_import_builder_1.convertMultiFactorInfoToServerFormat)(multiFactorInfo));\n                    });\n                }\n                catch (e) {\n                    return Promise.reject(e);\n                }\n                request.mfaInfo = mfaInfo;\n            }\n            delete request.multiFactor;\n        }\n        return this.invokeRequestHandler(this.getAuthUrlBuilder(), exports.FIREBASE_AUTH_SIGN_UP_NEW_USER, request)\n            .then((response) => {\n            // Return the user id.\n            return response.localId;\n        });\n    }\n    /**\n     * Generates the out of band email action link for the email specified using the action code settings provided.\n     * Returns a promise that resolves with the generated link.\n     *\n     * @param requestType - The request type. This could be either used for password reset,\n     *     email verification, email link sign-in.\n     * @param email - The email of the user the link is being sent to.\n     * @param actionCodeSettings - The optional action code setings which defines whether\n     *     the link is to be handled by a mobile app and the additional state information to be passed in the\n     *     deep link, etc. Required when requestType === 'EMAIL_SIGNIN'\n     * @param newEmail - The email address the account is being updated to.\n     *     Required only for VERIFY_AND_CHANGE_EMAIL requests.\n     * @returns A promise that resolves with the email action link.\n     */\n    getEmailActionLink(requestType, email, actionCodeSettings, newEmail) {\n        let request = {\n            requestType,\n            email,\n            returnOobLink: true,\n            ...(typeof newEmail !== 'undefined') && { newEmail },\n        };\n        // ActionCodeSettings required for email link sign-in to determine the url where the sign-in will\n        // be completed.\n        if (typeof actionCodeSettings === 'undefined' && requestType === 'EMAIL_SIGNIN') {\n            return Promise.reject(new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, \"`actionCodeSettings` is required when `requestType` === 'EMAIL_SIGNIN'\"));\n        }\n        if (typeof actionCodeSettings !== 'undefined' || requestType === 'EMAIL_SIGNIN') {\n            try {\n                const builder = new action_code_settings_builder_1.ActionCodeSettingsBuilder(actionCodeSettings);\n                request = (0, deep_copy_1.deepExtend)(request, builder.buildRequest());\n            }\n            catch (e) {\n                return Promise.reject(e);\n            }\n        }\n        if (requestType === 'VERIFY_AND_CHANGE_EMAIL' && typeof newEmail === 'undefined') {\n            return Promise.reject(new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, \"`newEmail` is required when `requestType` === 'VERIFY_AND_CHANGE_EMAIL'\"));\n        }\n        return this.invokeRequestHandler(this.getAuthUrlBuilder(), FIREBASE_AUTH_GET_OOB_CODE, request)\n            .then((response) => {\n            // Return the link.\n            return response.oobLink;\n        });\n    }\n    /**\n     * Looks up an OIDC provider configuration by provider ID.\n     *\n     * @param providerId - The provider identifier of the configuration to lookup.\n     * @returns A promise that resolves with the provider configuration information.\n     */\n    getOAuthIdpConfig(providerId) {\n        if (!auth_config_1.OIDCConfig.isProviderId(providerId)) {\n            return Promise.reject(new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_PROVIDER_ID));\n        }\n        return this.invokeRequestHandler(this.getProjectConfigUrlBuilder(), GET_OAUTH_IDP_CONFIG, {}, { providerId });\n    }\n    /**\n     * Lists the OIDC configurations (single batch only) with a size of maxResults and starting from\n     * the offset as specified by pageToken.\n     *\n     * @param maxResults - The page size, 100 if undefined. This is also the maximum\n     *     allowed limit.\n     * @param pageToken - The next page token. If not specified, returns OIDC configurations\n     *     without any offset. Configurations are returned in the order they were created from oldest to\n     *     newest, relative to the page token offset.\n     * @returns A promise that resolves with the current batch of downloaded\n     *     OIDC configurations and the next page token if available. For the last page, an empty list of provider\n     *     configuration and no page token are returned.\n     */\n    listOAuthIdpConfigs(maxResults = MAX_LIST_PROVIDER_CONFIGURATION_PAGE_SIZE, pageToken) {\n        const request = {\n            pageSize: maxResults,\n        };\n        // Add next page token if provided.\n        if (typeof pageToken !== 'undefined') {\n            request.pageToken = pageToken;\n        }\n        return this.invokeRequestHandler(this.getProjectConfigUrlBuilder(), LIST_OAUTH_IDP_CONFIGS, request)\n            .then((response) => {\n            if (!response.oauthIdpConfigs) {\n                response.oauthIdpConfigs = [];\n                delete response.nextPageToken;\n            }\n            return response;\n        });\n    }\n    /**\n     * Deletes an OIDC configuration identified by a providerId.\n     *\n     * @param providerId - The identifier of the OIDC configuration to delete.\n     * @returns A promise that resolves when the OIDC provider is deleted.\n     */\n    deleteOAuthIdpConfig(providerId) {\n        if (!auth_config_1.OIDCConfig.isProviderId(providerId)) {\n            return Promise.reject(new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_PROVIDER_ID));\n        }\n        return this.invokeRequestHandler(this.getProjectConfigUrlBuilder(), DELETE_OAUTH_IDP_CONFIG, {}, { providerId })\n            .then(() => {\n            // Return nothing.\n        });\n    }\n    /**\n     * Creates a new OIDC provider configuration with the properties provided.\n     *\n     * @param options - The properties to set on the new OIDC provider configuration to be created.\n     * @returns A promise that resolves with the newly created OIDC\n     *     configuration.\n     */\n    createOAuthIdpConfig(options) {\n        // Construct backend request.\n        let request;\n        try {\n            request = auth_config_1.OIDCConfig.buildServerRequest(options) || {};\n        }\n        catch (e) {\n            return Promise.reject(e);\n        }\n        const providerId = options.providerId;\n        return this.invokeRequestHandler(this.getProjectConfigUrlBuilder(), CREATE_OAUTH_IDP_CONFIG, request, { providerId })\n            .then((response) => {\n            if (!auth_config_1.OIDCConfig.getProviderIdFromResourceName(response.name)) {\n                throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INTERNAL_ERROR, 'INTERNAL ASSERT FAILED: Unable to create new OIDC provider configuration');\n            }\n            return response;\n        });\n    }\n    /**\n     * Updates an existing OIDC provider configuration with the properties provided.\n     *\n     * @param providerId - The provider identifier of the OIDC configuration to update.\n     * @param options - The properties to update on the existing configuration.\n     * @returns A promise that resolves with the modified provider\n     *     configuration.\n     */\n    updateOAuthIdpConfig(providerId, options) {\n        if (!auth_config_1.OIDCConfig.isProviderId(providerId)) {\n            return Promise.reject(new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_PROVIDER_ID));\n        }\n        // Construct backend request.\n        let request;\n        try {\n            request = auth_config_1.OIDCConfig.buildServerRequest(options, true) || {};\n        }\n        catch (e) {\n            return Promise.reject(e);\n        }\n        const updateMask = utils.generateUpdateMask(request);\n        return this.invokeRequestHandler(this.getProjectConfigUrlBuilder(), UPDATE_OAUTH_IDP_CONFIG, request, { providerId, updateMask: updateMask.join(',') })\n            .then((response) => {\n            if (!auth_config_1.OIDCConfig.getProviderIdFromResourceName(response.name)) {\n                throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INTERNAL_ERROR, 'INTERNAL ASSERT FAILED: Unable to update OIDC provider configuration');\n            }\n            return response;\n        });\n    }\n    /**\n     * Looks up an SAML provider configuration by provider ID.\n     *\n     * @param providerId - The provider identifier of the configuration to lookup.\n     * @returns A promise that resolves with the provider configuration information.\n     */\n    getInboundSamlConfig(providerId) {\n        if (!auth_config_1.SAMLConfig.isProviderId(providerId)) {\n            return Promise.reject(new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_PROVIDER_ID));\n        }\n        return this.invokeRequestHandler(this.getProjectConfigUrlBuilder(), GET_INBOUND_SAML_CONFIG, {}, { providerId });\n    }\n    /**\n     * Lists the SAML configurations (single batch only) with a size of maxResults and starting from\n     * the offset as specified by pageToken.\n     *\n     * @param maxResults - The page size, 100 if undefined. This is also the maximum\n     *     allowed limit.\n     * @param pageToken - The next page token. If not specified, returns SAML configurations starting\n     *     without any offset. Configurations are returned in the order they were created from oldest to\n     *     newest, relative to the page token offset.\n     * @returns A promise that resolves with the current batch of downloaded\n     *     SAML configurations and the next page token if available. For the last page, an empty list of provider\n     *     configuration and no page token are returned.\n     */\n    listInboundSamlConfigs(maxResults = MAX_LIST_PROVIDER_CONFIGURATION_PAGE_SIZE, pageToken) {\n        const request = {\n            pageSize: maxResults,\n        };\n        // Add next page token if provided.\n        if (typeof pageToken !== 'undefined') {\n            request.pageToken = pageToken;\n        }\n        return this.invokeRequestHandler(this.getProjectConfigUrlBuilder(), LIST_INBOUND_SAML_CONFIGS, request)\n            .then((response) => {\n            if (!response.inboundSamlConfigs) {\n                response.inboundSamlConfigs = [];\n                delete response.nextPageToken;\n            }\n            return response;\n        });\n    }\n    /**\n     * Deletes a SAML configuration identified by a providerId.\n     *\n     * @param providerId - The identifier of the SAML configuration to delete.\n     * @returns A promise that resolves when the SAML provider is deleted.\n     */\n    deleteInboundSamlConfig(providerId) {\n        if (!auth_config_1.SAMLConfig.isProviderId(providerId)) {\n            return Promise.reject(new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_PROVIDER_ID));\n        }\n        return this.invokeRequestHandler(this.getProjectConfigUrlBuilder(), DELETE_INBOUND_SAML_CONFIG, {}, { providerId })\n            .then(() => {\n            // Return nothing.\n        });\n    }\n    /**\n     * Creates a new SAML provider configuration with the properties provided.\n     *\n     * @param options - The properties to set on the new SAML provider configuration to be created.\n     * @returns A promise that resolves with the newly created SAML\n     *     configuration.\n     */\n    createInboundSamlConfig(options) {\n        // Construct backend request.\n        let request;\n        try {\n            request = auth_config_1.SAMLConfig.buildServerRequest(options) || {};\n        }\n        catch (e) {\n            return Promise.reject(e);\n        }\n        const providerId = options.providerId;\n        return this.invokeRequestHandler(this.getProjectConfigUrlBuilder(), CREATE_INBOUND_SAML_CONFIG, request, { providerId })\n            .then((response) => {\n            if (!auth_config_1.SAMLConfig.getProviderIdFromResourceName(response.name)) {\n                throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INTERNAL_ERROR, 'INTERNAL ASSERT FAILED: Unable to create new SAML provider configuration');\n            }\n            return response;\n        });\n    }\n    /**\n     * Updates an existing SAML provider configuration with the properties provided.\n     *\n     * @param providerId - The provider identifier of the SAML configuration to update.\n     * @param options - The properties to update on the existing configuration.\n     * @returns A promise that resolves with the modified provider\n     *     configuration.\n     */\n    updateInboundSamlConfig(providerId, options) {\n        if (!auth_config_1.SAMLConfig.isProviderId(providerId)) {\n            return Promise.reject(new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_PROVIDER_ID));\n        }\n        // Construct backend request.\n        let request;\n        try {\n            request = auth_config_1.SAMLConfig.buildServerRequest(options, true) || {};\n        }\n        catch (e) {\n            return Promise.reject(e);\n        }\n        const updateMask = utils.generateUpdateMask(request);\n        return this.invokeRequestHandler(this.getProjectConfigUrlBuilder(), UPDATE_INBOUND_SAML_CONFIG, request, { providerId, updateMask: updateMask.join(',') })\n            .then((response) => {\n            if (!auth_config_1.SAMLConfig.getProviderIdFromResourceName(response.name)) {\n                throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INTERNAL_ERROR, 'INTERNAL ASSERT FAILED: Unable to update SAML provider configuration');\n            }\n            return response;\n        });\n    }\n    /**\n     * Invokes the request handler based on the API settings object passed.\n     *\n     * @param urlBuilder - The URL builder for Auth endpoints.\n     * @param apiSettings - The API endpoint settings to apply to request and response.\n     * @param requestData - The request data.\n     * @param additionalResourceParams - Additional resource related params if needed.\n     * @returns A promise that resolves with the response.\n     */\n    invokeRequestHandler(urlBuilder, apiSettings, requestData, additionalResourceParams) {\n        return urlBuilder.getUrl(apiSettings.getEndpoint(), additionalResourceParams)\n            .then((url) => {\n            // Validate request.\n            if (requestData) {\n                const requestValidator = apiSettings.getRequestValidator();\n                requestValidator(requestData);\n            }\n            // Process request.\n            const req = {\n                method: apiSettings.getHttpMethod(),\n                url,\n                headers: FIREBASE_AUTH_HEADER,\n                data: requestData,\n                timeout: FIREBASE_AUTH_TIMEOUT,\n            };\n            return this.httpClient.send(req);\n        })\n            .then((response) => {\n            // Validate response.\n            const responseValidator = apiSettings.getResponseValidator();\n            responseValidator(response.data);\n            // Return entire response.\n            return response.data;\n        })\n            .catch((err) => {\n            if (err instanceof api_request_1.HttpError) {\n                const error = err.response.data;\n                const errorCode = AbstractAuthRequestHandler.getErrorCode(error);\n                if (!errorCode) {\n                    throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INTERNAL_ERROR, 'Error returned from server: ' + error + '. Additionally, an ' +\n                        'internal error occurred while attempting to extract the ' +\n                        'errorcode from the error.');\n                }\n                throw error_1.FirebaseAuthError.fromServerError(errorCode, /* message */ undefined, error);\n            }\n            throw err;\n        });\n    }\n    /**\n     * @returns The current Auth user management resource URL builder.\n     */\n    getAuthUrlBuilder() {\n        if (!this.authUrlBuilder) {\n            this.authUrlBuilder = this.newAuthUrlBuilder();\n        }\n        return this.authUrlBuilder;\n    }\n    /**\n     * @returns The current project config resource URL builder.\n     */\n    getProjectConfigUrlBuilder() {\n        if (!this.projectConfigUrlBuilder) {\n            this.projectConfigUrlBuilder = this.newProjectConfigUrlBuilder();\n        }\n        return this.projectConfigUrlBuilder;\n    }\n}\nexports.AbstractAuthRequestHandler = AbstractAuthRequestHandler;\n/** Instantiates the getConfig endpoint settings. */\nconst GET_PROJECT_CONFIG = new api_request_1.ApiSettings('/config', 'GET')\n    .setResponseValidator((response) => {\n    // Response should always contain at least the config name.\n    if (!validator.isNonEmptyString(response.name)) {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INTERNAL_ERROR, 'INTERNAL ASSERT FAILED: Unable to get project config');\n    }\n});\n/** Instantiates the updateConfig endpoint settings. */\nconst UPDATE_PROJECT_CONFIG = new api_request_1.ApiSettings('/config?updateMask={updateMask}', 'PATCH')\n    .setResponseValidator((response) => {\n    // Response should always contain at least the config name.\n    if (!validator.isNonEmptyString(response.name)) {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INTERNAL_ERROR, 'INTERNAL ASSERT FAILED: Unable to update project config');\n    }\n});\n/** Instantiates the getTenant endpoint settings. */\nconst GET_TENANT = new api_request_1.ApiSettings('/tenants/{tenantId}', 'GET')\n    // Set response validator.\n    .setResponseValidator((response) => {\n    // Response should always contain at least the tenant name.\n    if (!validator.isNonEmptyString(response.name)) {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INTERNAL_ERROR, 'INTERNAL ASSERT FAILED: Unable to get tenant');\n    }\n});\n/** Instantiates the deleteTenant endpoint settings. */\nconst DELETE_TENANT = new api_request_1.ApiSettings('/tenants/{tenantId}', 'DELETE');\n/** Instantiates the updateTenant endpoint settings. */\nconst UPDATE_TENANT = new api_request_1.ApiSettings('/tenants/{tenantId}?updateMask={updateMask}', 'PATCH')\n    // Set response validator.\n    .setResponseValidator((response) => {\n    // Response should always contain at least the tenant name.\n    if (!validator.isNonEmptyString(response.name) ||\n        !tenant_1.Tenant.getTenantIdFromResourceName(response.name)) {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INTERNAL_ERROR, 'INTERNAL ASSERT FAILED: Unable to update tenant');\n    }\n});\n/** Instantiates the listTenants endpoint settings. */\nconst LIST_TENANTS = new api_request_1.ApiSettings('/tenants', 'GET')\n    // Set request validator.\n    .setRequestValidator((request) => {\n    // Validate next page token.\n    if (typeof request.pageToken !== 'undefined' &&\n        !validator.isNonEmptyString(request.pageToken)) {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_PAGE_TOKEN);\n    }\n    // Validate max results.\n    if (!validator.isNumber(request.pageSize) ||\n        request.pageSize <= 0 ||\n        request.pageSize > MAX_LIST_TENANT_PAGE_SIZE) {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, 'Required \"maxResults\" must be a positive non-zero number that does not exceed ' +\n            `the allowed ${MAX_LIST_TENANT_PAGE_SIZE}.`);\n    }\n});\n/** Instantiates the createTenant endpoint settings. */\nconst CREATE_TENANT = new api_request_1.ApiSettings('/tenants', 'POST')\n    // Set response validator.\n    .setResponseValidator((response) => {\n    // Response should always contain at least the tenant name.\n    if (!validator.isNonEmptyString(response.name) ||\n        !tenant_1.Tenant.getTenantIdFromResourceName(response.name)) {\n        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INTERNAL_ERROR, 'INTERNAL ASSERT FAILED: Unable to create new tenant');\n    }\n});\n/**\n * Utility for sending requests to Auth server that are Auth instance related. This includes user, tenant,\n * and project config management related APIs. This extends the BaseFirebaseAuthRequestHandler class and defines\n * additional tenant management related APIs.\n */\nclass AuthRequestHandler extends AbstractAuthRequestHandler {\n    /**\n     * The FirebaseAuthRequestHandler constructor used to initialize an instance using a FirebaseApp.\n     *\n     * @param app - The app used to fetch access tokens to sign API requests.\n     * @constructor.\n     */\n    constructor(app) {\n        super(app);\n        this.authResourceUrlBuilder = new AuthResourceUrlBuilder(app, 'v2');\n    }\n    /**\n     * @returns A new Auth user management resource URL builder instance.\n     */\n    newAuthUrlBuilder() {\n        return new AuthResourceUrlBuilder(this.app, 'v1');\n    }\n    /**\n     * @returns A new project config resource URL builder instance.\n     */\n    newProjectConfigUrlBuilder() {\n        return new AuthResourceUrlBuilder(this.app, 'v2');\n    }\n    /**\n     * Get the current project's config\n     * @returns A promise that resolves with the project config information.\n     */\n    getProjectConfig() {\n        return this.invokeRequestHandler(this.authResourceUrlBuilder, GET_PROJECT_CONFIG, {}, {})\n            .then((response) => {\n            return response;\n        });\n    }\n    /**\n     * Update the current project's config.\n     * @returns A promise that resolves with the project config information.\n     */\n    updateProjectConfig(options) {\n        try {\n            const request = project_config_1.ProjectConfig.buildServerRequest(options);\n            const updateMask = utils.generateUpdateMask(request);\n            return this.invokeRequestHandler(this.authResourceUrlBuilder, UPDATE_PROJECT_CONFIG, request, { updateMask: updateMask.join(',') })\n                .then((response) => {\n                return response;\n            });\n        }\n        catch (e) {\n            return Promise.reject(e);\n        }\n    }\n    /**\n     * Looks up a tenant by tenant ID.\n     *\n     * @param tenantId - The tenant identifier of the tenant to lookup.\n     * @returns A promise that resolves with the tenant information.\n     */\n    getTenant(tenantId) {\n        if (!validator.isNonEmptyString(tenantId)) {\n            return Promise.reject(new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_TENANT_ID));\n        }\n        return this.invokeRequestHandler(this.authResourceUrlBuilder, GET_TENANT, {}, { tenantId })\n            .then((response) => {\n            return response;\n        });\n    }\n    /**\n     * Exports the tenants (single batch only) with a size of maxResults and starting from\n     * the offset as specified by pageToken.\n     *\n     * @param maxResults - The page size, 1000 if undefined. This is also the maximum\n     *     allowed limit.\n     * @param pageToken - The next page token. If not specified, returns tenants starting\n     *     without any offset. Tenants are returned in the order they were created from oldest to\n     *     newest, relative to the page token offset.\n     * @returns A promise that resolves with the current batch of downloaded\n     *     tenants and the next page token if available. For the last page, an empty list of tenants\n     *     and no page token are returned.\n     */\n    listTenants(maxResults = MAX_LIST_TENANT_PAGE_SIZE, pageToken) {\n        const request = {\n            pageSize: maxResults,\n            pageToken,\n        };\n        // Remove next page token if not provided.\n        if (typeof request.pageToken === 'undefined') {\n            delete request.pageToken;\n        }\n        return this.invokeRequestHandler(this.authResourceUrlBuilder, LIST_TENANTS, request)\n            .then((response) => {\n            if (!response.tenants) {\n                response.tenants = [];\n                delete response.nextPageToken;\n            }\n            return response;\n        });\n    }\n    /**\n     * Deletes a tenant identified by a tenantId.\n     *\n     * @param tenantId - The identifier of the tenant to delete.\n     * @returns A promise that resolves when the tenant is deleted.\n     */\n    deleteTenant(tenantId) {\n        if (!validator.isNonEmptyString(tenantId)) {\n            return Promise.reject(new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_TENANT_ID));\n        }\n        return this.invokeRequestHandler(this.authResourceUrlBuilder, DELETE_TENANT, undefined, { tenantId })\n            .then(() => {\n            // Return nothing.\n        });\n    }\n    /**\n     * Creates a new tenant with the properties provided.\n     *\n     * @param tenantOptions - The properties to set on the new tenant to be created.\n     * @returns A promise that resolves with the newly created tenant object.\n     */\n    createTenant(tenantOptions) {\n        try {\n            // Construct backend request.\n            const request = tenant_1.Tenant.buildServerRequest(tenantOptions, true);\n            return this.invokeRequestHandler(this.authResourceUrlBuilder, CREATE_TENANT, request)\n                .then((response) => {\n                return response;\n            });\n        }\n        catch (e) {\n            return Promise.reject(e);\n        }\n    }\n    /**\n     * Updates an existing tenant with the properties provided.\n     *\n     * @param tenantId - The tenant identifier of the tenant to update.\n     * @param tenantOptions - The properties to update on the existing tenant.\n     * @returns A promise that resolves with the modified tenant object.\n     */\n    updateTenant(tenantId, tenantOptions) {\n        if (!validator.isNonEmptyString(tenantId)) {\n            return Promise.reject(new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_TENANT_ID));\n        }\n        try {\n            // Construct backend request.\n            const request = tenant_1.Tenant.buildServerRequest(tenantOptions, false);\n            // Do not traverse deep into testPhoneNumbers. The entire content should be replaced\n            // and not just specific phone numbers.\n            const updateMask = utils.generateUpdateMask(request, ['testPhoneNumbers']);\n            return this.invokeRequestHandler(this.authResourceUrlBuilder, UPDATE_TENANT, request, { tenantId, updateMask: updateMask.join(',') })\n                .then((response) => {\n                return response;\n            });\n        }\n        catch (e) {\n            return Promise.reject(e);\n        }\n    }\n}\nexports.AuthRequestHandler = AuthRequestHandler;\n/**\n * Utility for sending requests to Auth server that are tenant Auth instance related. This includes user\n * management related APIs for specified tenants.\n * This extends the BaseFirebaseAuthRequestHandler class.\n */\nclass TenantAwareAuthRequestHandler extends AbstractAuthRequestHandler {\n    /**\n     * The FirebaseTenantRequestHandler constructor used to initialize an instance using a\n     * FirebaseApp and a tenant ID.\n     *\n     * @param app - The app used to fetch access tokens to sign API requests.\n     * @param tenantId - The request handler's tenant ID.\n     * @constructor\n     */\n    constructor(app, tenantId) {\n        super(app);\n        this.tenantId = tenantId;\n    }\n    /**\n     * @returns A new Auth user management resource URL builder instance.\n     */\n    newAuthUrlBuilder() {\n        return new TenantAwareAuthResourceUrlBuilder(this.app, 'v1', this.tenantId);\n    }\n    /**\n     * @returns A new project config resource URL builder instance.\n     */\n    newProjectConfigUrlBuilder() {\n        return new TenantAwareAuthResourceUrlBuilder(this.app, 'v2', this.tenantId);\n    }\n    /**\n     * Imports the list of users provided to Firebase Auth. This is useful when\n     * migrating from an external authentication system without having to use the Firebase CLI SDK.\n     * At most, 1000 users are allowed to be imported one at a time.\n     * When importing a list of password users, UserImportOptions are required to be specified.\n     *\n     * Overrides the superclass methods by adding an additional check to match tenant IDs of\n     * imported user records if present.\n     *\n     * @param users - The list of user records to import to Firebase Auth.\n     * @param options - The user import options, required when the users provided\n     *     include password credentials.\n     * @returns A promise that resolves when the operation completes\n     *     with the result of the import. This includes the number of successful imports, the number\n     *     of failed uploads and their corresponding errors.\n     */\n    uploadAccount(users, options) {\n        // Add additional check to match tenant ID of imported user records.\n        users.forEach((user, index) => {\n            if (validator.isNonEmptyString(user.tenantId) &&\n                user.tenantId !== this.tenantId) {\n                throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.MISMATCHING_TENANT_ID, `UserRecord of index \"${index}\" has mismatching tenant ID \"${user.tenantId}\"`);\n            }\n        });\n        return super.uploadAccount(users, options);\n    }\n}\nexports.TenantAwareAuthRequestHandler = TenantAwareAuthRequestHandler;\nfunction emulatorHost() {\n    return process.env.FIREBASE_AUTH_EMULATOR_HOST;\n}\n/**\n * When true the SDK should communicate with the Auth Emulator for all API\n * calls and also produce unsigned tokens.\n */\nfunction useEmulator() {\n    return !!emulatorHost();\n}\nexports.useEmulator = useEmulator;\n", "/*! firebase-admin v11.11.0 */\n\"use strict\";\n/*!\n * @license\n * Copyright 2021 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CryptoSignerErrorCode = exports.CryptoSignerError = exports.cryptoSignerFromApp = exports.IAMSigner = exports.ServiceAccountSigner = void 0;\nconst credential_internal_1 = require(\"../app/credential-internal\");\nconst api_request_1 = require(\"./api-request\");\nconst validator = require(\"../utils/validator\");\nconst ALGORITHM_RS256 = 'RS256';\n/**\n * A CryptoSigner implementation that uses an explicitly specified service account private key to\n * sign data. Performs all operations locally, and does not make any RPC calls.\n */\nclass ServiceAccountSigner {\n    /**\n     * Creates a new CryptoSigner instance from the given service account credential.\n     *\n     * @param credential - A service account credential.\n     */\n    constructor(credential) {\n        this.credential = credential;\n        this.algorithm = ALGORITHM_RS256;\n        if (!credential) {\n            throw new CryptoSignerError({\n                code: CryptoSignerErrorCode.INVALID_CREDENTIAL,\n                message: 'INTERNAL ASSERT: Must provide a service account credential to initialize ServiceAccountSigner.',\n            });\n        }\n    }\n    /**\n     * @inheritDoc\n     */\n    sign(buffer) {\n        const crypto = require('crypto'); // eslint-disable-line @typescript-eslint/no-var-requires\n        const sign = crypto.createSign('RSA-SHA256');\n        sign.update(buffer);\n        return Promise.resolve(sign.sign(this.credential.privateKey));\n    }\n    /**\n     * @inheritDoc\n     */\n    getAccountId() {\n        return Promise.resolve(this.credential.clientEmail);\n    }\n}\nexports.ServiceAccountSigner = ServiceAccountSigner;\n/**\n * A CryptoSigner implementation that uses the remote IAM service to sign data. If initialized without\n * a service account ID, attempts to discover a service account ID by consulting the local Metadata\n * service. This will succeed in managed environments like Google Cloud Functions and App Engine.\n *\n * @see https://cloud.google.com/iam/reference/rest/v1/projects.serviceAccounts/signBlob\n * @see https://cloud.google.com/compute/docs/storing-retrieving-metadata\n */\nclass IAMSigner {\n    constructor(httpClient, serviceAccountId) {\n        this.algorithm = ALGORITHM_RS256;\n        if (!httpClient) {\n            throw new CryptoSignerError({\n                code: CryptoSignerErrorCode.INVALID_ARGUMENT,\n                message: 'INTERNAL ASSERT: Must provide a HTTP client to initialize IAMSigner.',\n            });\n        }\n        if (typeof serviceAccountId !== 'undefined' && !validator.isNonEmptyString(serviceAccountId)) {\n            throw new CryptoSignerError({\n                code: CryptoSignerErrorCode.INVALID_ARGUMENT,\n                message: 'INTERNAL ASSERT: Service account ID must be undefined or a non-empty string.',\n            });\n        }\n        this.httpClient = httpClient;\n        this.serviceAccountId = serviceAccountId;\n    }\n    /**\n     * @inheritDoc\n     */\n    sign(buffer) {\n        return this.getAccountId().then((serviceAccount) => {\n            const request = {\n                method: 'POST',\n                url: `https://iamcredentials.googleapis.com/v1/projects/-/serviceAccounts/${serviceAccount}:signBlob`,\n                data: { payload: buffer.toString('base64') },\n            };\n            return this.httpClient.send(request);\n        }).then((response) => {\n            // Response from IAM is base64 encoded. Decode it into a buffer and return.\n            return Buffer.from(response.data.signedBlob, 'base64');\n        }).catch((err) => {\n            if (err instanceof api_request_1.HttpError) {\n                throw new CryptoSignerError({\n                    code: CryptoSignerErrorCode.SERVER_ERROR,\n                    message: err.message,\n                    cause: err\n                });\n            }\n            throw err;\n        });\n    }\n    /**\n     * @inheritDoc\n     */\n    getAccountId() {\n        if (validator.isNonEmptyString(this.serviceAccountId)) {\n            return Promise.resolve(this.serviceAccountId);\n        }\n        const request = {\n            method: 'GET',\n            url: 'http://metadata/computeMetadata/v1/instance/service-accounts/default/email',\n            headers: {\n                'Metadata-Flavor': 'Google',\n            },\n        };\n        const client = new api_request_1.HttpClient();\n        return client.send(request).then((response) => {\n            if (!response.text) {\n                throw new CryptoSignerError({\n                    code: CryptoSignerErrorCode.INTERNAL_ERROR,\n                    message: 'HTTP Response missing payload',\n                });\n            }\n            this.serviceAccountId = response.text;\n            return response.text;\n        }).catch((err) => {\n            throw new CryptoSignerError({\n                code: CryptoSignerErrorCode.INVALID_CREDENTIAL,\n                message: 'Failed to determine service account. Make sure to initialize ' +\n                    'the SDK with a service account credential. Alternatively specify a service ' +\n                    `account with iam.serviceAccounts.signBlob permission. Original error: ${err}`,\n            });\n        });\n    }\n}\nexports.IAMSigner = IAMSigner;\n/**\n * Creates a new CryptoSigner instance for the given app. If the app has been initialized with a\n * service account credential, creates a ServiceAccountSigner.\n *\n * @param app - A FirebaseApp instance.\n * @returns A CryptoSigner instance.\n */\nfunction cryptoSignerFromApp(app) {\n    const credential = app.options.credential;\n    if (credential instanceof credential_internal_1.ServiceAccountCredential) {\n        return new ServiceAccountSigner(credential);\n    }\n    return new IAMSigner(new api_request_1.AuthorizedHttpClient(app), app.options.serviceAccountId);\n}\nexports.cryptoSignerFromApp = cryptoSignerFromApp;\n/**\n * CryptoSigner error code structure.\n *\n * @param errorInfo - The error information (code and message).\n * @constructor\n */\nclass CryptoSignerError extends Error {\n    constructor(errorInfo) {\n        super(errorInfo.message);\n        this.errorInfo = errorInfo;\n        /* tslint:disable:max-line-length */\n        // Set the prototype explicitly. See the following link for more details:\n        // https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work\n        /* tslint:enable:max-line-length */\n        this.__proto__ = CryptoSignerError.prototype;\n    }\n    /** @returns The error code. */\n    get code() {\n        return this.errorInfo.code;\n    }\n    /** @returns The error message. */\n    get message() {\n        return this.errorInfo.message;\n    }\n    /** @returns The error data. */\n    get cause() {\n        return this.errorInfo.cause;\n    }\n}\nexports.CryptoSignerError = CryptoSignerError;\n/**\n * Crypto Signer error codes and their default messages.\n */\nclass CryptoSignerErrorCode {\n}\nexports.CryptoSignerErrorCode = CryptoSignerErrorCode;\nCryptoSignerErrorCode.INVALID_ARGUMENT = 'invalid-argument';\nCryptoSignerErrorCode.INTERNAL_ERROR = 'internal-error';\nCryptoSignerErrorCode.INVALID_CREDENTIAL = 'invalid-credential';\nCryptoSignerErrorCode.SERVER_ERROR = 'server-error';\n", "/*! firebase-admin v11.11.0 */\n\"use strict\";\n/*!\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.handleCryptoSignerError = exports.FirebaseTokenGenerator = exports.EmulatedSigner = exports.BLACKLISTED_CLAIMS = void 0;\nconst error_1 = require(\"../utils/error\");\nconst crypto_signer_1 = require(\"../utils/crypto-signer\");\nconst validator = require(\"../utils/validator\");\nconst utils_1 = require(\"../utils\");\nconst ALGORITHM_NONE = 'none';\nconst ONE_HOUR_IN_SECONDS = 60 * 60;\n// List of blacklisted claims which cannot be provided when creating a custom token\nexports.BLACKLISTED_CLAIMS = [\n    'acr', 'amr', 'at_hash', 'aud', 'auth_time', 'azp', 'cnf', 'c_hash', 'exp', 'iat', 'iss', 'jti',\n    'nbf', 'nonce',\n];\n// Audience to use for Firebase Auth Custom tokens\nconst FIREBASE_AUDIENCE = 'https://identitytoolkit.googleapis.com/google.identity.identitytoolkit.v1.IdentityToolkit';\n/**\n * A CryptoSigner implementation that is used when communicating with the Auth emulator.\n * It produces unsigned tokens.\n */\nclass EmulatedSigner {\n    constructor() {\n        this.algorithm = ALGORITHM_NONE;\n    }\n    /**\n     * @inheritDoc\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    sign(buffer) {\n        return Promise.resolve(Buffer.from(''));\n    }\n    /**\n     * @inheritDoc\n     */\n    getAccountId() {\n        return Promise.resolve('firebase-auth-emulator@example.com');\n    }\n}\nexports.EmulatedSigner = EmulatedSigner;\n/**\n * Class for generating different types of Firebase Auth tokens (JWTs).\n *\n * @internal\n */\nclass FirebaseTokenGenerator {\n    /**\n     * @param tenantId - The tenant ID to use for the generated Firebase Auth\n     *     Custom token. If absent, then no tenant ID claim will be set in the\n     *     resulting JWT.\n     */\n    constructor(signer, tenantId) {\n        this.tenantId = tenantId;\n        if (!validator.isNonNullObject(signer)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_CREDENTIAL, 'INTERNAL ASSERT: Must provide a CryptoSigner to use FirebaseTokenGenerator.');\n        }\n        if (typeof this.tenantId !== 'undefined' && !validator.isNonEmptyString(this.tenantId)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, '`tenantId` argument must be a non-empty string.');\n        }\n        this.signer = signer;\n    }\n    /**\n     * Creates a new Firebase Auth Custom token.\n     *\n     * @param uid - The user ID to use for the generated Firebase Auth Custom token.\n     * @param developerClaims - Optional developer claims to include in the generated Firebase\n     *     Auth Custom token.\n     * @returns A Promise fulfilled with a Firebase Auth Custom token signed with a\n     *     service account key and containing the provided payload.\n     */\n    createCustomToken(uid, developerClaims) {\n        let errorMessage;\n        if (!validator.isNonEmptyString(uid)) {\n            errorMessage = '`uid` argument must be a non-empty string uid.';\n        }\n        else if (uid.length > 128) {\n            errorMessage = '`uid` argument must a uid with less than or equal to 128 characters.';\n        }\n        else if (!this.isDeveloperClaimsValid_(developerClaims)) {\n            errorMessage = '`developerClaims` argument must be a valid, non-null object containing the developer claims.';\n        }\n        if (errorMessage) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, errorMessage);\n        }\n        const claims = {};\n        if (typeof developerClaims !== 'undefined') {\n            for (const key in developerClaims) {\n                /* istanbul ignore else */\n                if (Object.prototype.hasOwnProperty.call(developerClaims, key)) {\n                    if (exports.BLACKLISTED_CLAIMS.indexOf(key) !== -1) {\n                        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, `Developer claim \"${key}\" is reserved and cannot be specified.`);\n                    }\n                    claims[key] = developerClaims[key];\n                }\n            }\n        }\n        return this.signer.getAccountId().then((account) => {\n            const header = {\n                alg: this.signer.algorithm,\n                typ: 'JWT',\n            };\n            const iat = Math.floor(Date.now() / 1000);\n            const body = {\n                aud: FIREBASE_AUDIENCE,\n                iat,\n                exp: iat + ONE_HOUR_IN_SECONDS,\n                iss: account,\n                sub: account,\n                uid,\n            };\n            if (this.tenantId) {\n                body.tenant_id = this.tenantId;\n            }\n            if (Object.keys(claims).length > 0) {\n                body.claims = claims;\n            }\n            const token = `${this.encodeSegment(header)}.${this.encodeSegment(body)}`;\n            const signPromise = this.signer.sign(Buffer.from(token));\n            return Promise.all([token, signPromise]);\n        }).then(([token, signature]) => {\n            return `${token}.${this.encodeSegment(signature)}`;\n        }).catch((err) => {\n            throw handleCryptoSignerError(err);\n        });\n    }\n    encodeSegment(segment) {\n        const buffer = (segment instanceof Buffer) ? segment : Buffer.from(JSON.stringify(segment));\n        return (0, utils_1.toWebSafeBase64)(buffer).replace(/=+$/, '');\n    }\n    /**\n     * Returns whether or not the provided developer claims are valid.\n     *\n     * @param developerClaims - Optional developer claims to validate.\n     * @returns True if the provided claims are valid; otherwise, false.\n     */\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    isDeveloperClaimsValid_(developerClaims) {\n        if (typeof developerClaims === 'undefined') {\n            return true;\n        }\n        return validator.isNonNullObject(developerClaims);\n    }\n}\nexports.FirebaseTokenGenerator = FirebaseTokenGenerator;\n/**\n * Creates a new FirebaseAuthError by extracting the error code, message and other relevant\n * details from a CryptoSignerError.\n *\n * @param err - The Error to convert into a FirebaseAuthError error\n * @returns A Firebase Auth error that can be returned to the user.\n */\nfunction handleCryptoSignerError(err) {\n    if (!(err instanceof crypto_signer_1.CryptoSignerError)) {\n        return err;\n    }\n    if (err.code === crypto_signer_1.CryptoSignerErrorCode.SERVER_ERROR && validator.isNonNullObject(err.cause)) {\n        const httpError = err.cause;\n        const errorResponse = httpError.response.data;\n        if (validator.isNonNullObject(errorResponse) && errorResponse.error) {\n            const errorCode = errorResponse.error.status;\n            const description = 'Please refer to https://firebase.google.com/docs/auth/admin/create-custom-tokens ' +\n                'for more details on how to use and troubleshoot this feature.';\n            const errorMsg = `${errorResponse.error.message}; ${description}`;\n            return error_1.FirebaseAuthError.fromServerError(errorCode, errorMsg, errorResponse);\n        }\n        return new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INTERNAL_ERROR, 'Error returned from server: ' + errorResponse + '. Additionally, an ' +\n            'internal error occurred while attempting to extract the ' +\n            'errorcode from the error.');\n    }\n    return new error_1.FirebaseAuthError(mapToAuthClientErrorCode(err.code), err.message);\n}\nexports.handleCryptoSignerError = handleCryptoSignerError;\nfunction mapToAuthClientErrorCode(code) {\n    switch (code) {\n        case crypto_signer_1.CryptoSignerErrorCode.INVALID_CREDENTIAL:\n            return error_1.AuthClientErrorCode.INVALID_CREDENTIAL;\n        case crypto_signer_1.CryptoSignerErrorCode.INVALID_ARGUMENT:\n            return error_1.AuthClientErrorCode.INVALID_ARGUMENT;\n        default:\n            return error_1.AuthClientErrorCode.INTERNAL_ERROR;\n    }\n}\n", "\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.slice(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n", "/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n", "export default crypto;\nexport const isCryptoKey = (key) => key instanceof CryptoKey;\n", "import crypto from './webcrypto.js';\nconst digest = async (algorithm, data) => {\n    const subtleDigest = `SHA-${algorithm.slice(-3)}`;\n    return new Uint8Array(await crypto.subtle.digest(subtleDigest, data));\n};\nexport default digest;\n", "import digest from '../runtime/digest.js';\nexport const encoder = new TextEncoder();\nexport const decoder = new TextDecoder();\nconst MAX_INT32 = 2 ** 32;\nexport function concat(...buffers) {\n    const size = buffers.reduce((acc, { length }) => acc + length, 0);\n    const buf = new Uint8Array(size);\n    let i = 0;\n    buffers.forEach((buffer) => {\n        buf.set(buffer, i);\n        i += buffer.length;\n    });\n    return buf;\n}\nexport function p2s(alg, p2sInput) {\n    return concat(encoder.encode(alg), new Uint8Array([0]), p2sInput);\n}\nfunction writeUInt32BE(buf, value, offset) {\n    if (value < 0 || value >= MAX_INT32) {\n        throw new RangeError(`value must be >= 0 and <= ${MAX_INT32 - 1}. Received ${value}`);\n    }\n    buf.set([value >>> 24, value >>> 16, value >>> 8, value & 0xff], offset);\n}\nexport function uint64be(value) {\n    const high = Math.floor(value / MAX_INT32);\n    const low = value % MAX_INT32;\n    const buf = new Uint8Array(8);\n    writeUInt32BE(buf, high, 0);\n    writeUInt32BE(buf, low, 4);\n    return buf;\n}\nexport function uint32be(value) {\n    const buf = new Uint8Array(4);\n    writeUInt32BE(buf, value);\n    return buf;\n}\nexport function lengthAndInput(input) {\n    return concat(uint32be(input.length), input);\n}\nexport async function concatKdf(secret, bits, value) {\n    const iterations = Math.ceil((bits >> 3) / 32);\n    const res = new Uint8Array(iterations * 32);\n    for (let iter = 0; iter < iterations; iter++) {\n        const buf = new Uint8Array(4 + secret.length + value.length);\n        buf.set(uint32be(iter + 1));\n        buf.set(secret, 4);\n        buf.set(value, 4 + secret.length);\n        res.set(await digest('sha256', buf), iter * 32);\n    }\n    return res.slice(0, bits >> 3);\n}\n", "import { encoder, decoder } from '../lib/buffer_utils.js';\nexport const encodeBase64 = (input) => {\n    let unencoded = input;\n    if (typeof unencoded === 'string') {\n        unencoded = encoder.encode(unencoded);\n    }\n    const CHUNK_SIZE = 0x8000;\n    const arr = [];\n    for (let i = 0; i < unencoded.length; i += CHUNK_SIZE) {\n        arr.push(String.fromCharCode.apply(null, unencoded.subarray(i, i + CHUNK_SIZE)));\n    }\n    return btoa(arr.join(''));\n};\nexport const encode = (input) => {\n    return encodeBase64(input).replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_');\n};\nexport const decodeBase64 = (encoded) => {\n    const binary = atob(encoded);\n    const bytes = new Uint8Array(binary.length);\n    for (let i = 0; i < binary.length; i++) {\n        bytes[i] = binary.charCodeAt(i);\n    }\n    return bytes;\n};\nexport const decode = (input) => {\n    let encoded = input;\n    if (encoded instanceof Uint8Array) {\n        encoded = decoder.decode(encoded);\n    }\n    encoded = encoded.replace(/-/g, '+').replace(/_/g, '/').replace(/\\s/g, '');\n    try {\n        return decodeBase64(encoded);\n    }\n    catch (_a) {\n        throw new TypeError('The input to be decoded is not correctly encoded.');\n    }\n};\n", "export class JOSEError extends Error {\n    static get code() {\n        return 'ERR_JOSE_GENERIC';\n    }\n    constructor(message) {\n        var _a;\n        super(message);\n        this.code = 'ERR_JOSE_GENERIC';\n        this.name = this.constructor.name;\n        (_a = Error.captureStackTrace) === null || _a === void 0 ? void 0 : _a.call(Error, this, this.constructor);\n    }\n}\nexport class JWTClaimValidationFailed extends JOSEError {\n    static get code() {\n        return 'ERR_JWT_CLAIM_VALIDATION_FAILED';\n    }\n    constructor(message, claim = 'unspecified', reason = 'unspecified') {\n        super(message);\n        this.code = 'ERR_JWT_CLAIM_VALIDATION_FAILED';\n        this.claim = claim;\n        this.reason = reason;\n    }\n}\nexport class JWTExpired extends JOSEError {\n    static get code() {\n        return 'ERR_JWT_EXPIRED';\n    }\n    constructor(message, claim = 'unspecified', reason = 'unspecified') {\n        super(message);\n        this.code = 'ERR_JWT_EXPIRED';\n        this.claim = claim;\n        this.reason = reason;\n    }\n}\nexport class JOSEAlgNotAllowed extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JOSE_ALG_NOT_ALLOWED';\n    }\n    static get code() {\n        return 'ERR_JOSE_ALG_NOT_ALLOWED';\n    }\n}\nexport class JOSENotSupported extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JOSE_NOT_SUPPORTED';\n    }\n    static get code() {\n        return 'ERR_JOSE_NOT_SUPPORTED';\n    }\n}\nexport class JWEDecryptionFailed extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWE_DECRYPTION_FAILED';\n        this.message = 'decryption operation failed';\n    }\n    static get code() {\n        return 'ERR_JWE_DECRYPTION_FAILED';\n    }\n}\nexport class JWEInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWE_INVALID';\n    }\n    static get code() {\n        return 'ERR_JWE_INVALID';\n    }\n}\nexport class JWSInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWS_INVALID';\n    }\n    static get code() {\n        return 'ERR_JWS_INVALID';\n    }\n}\nexport class JWTInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWT_INVALID';\n    }\n    static get code() {\n        return 'ERR_JWT_INVALID';\n    }\n}\nexport class JWKInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWK_INVALID';\n    }\n    static get code() {\n        return 'ERR_JWK_INVALID';\n    }\n}\nexport class JWKSInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWKS_INVALID';\n    }\n    static get code() {\n        return 'ERR_JWKS_INVALID';\n    }\n}\nexport class JWKSNoMatchingKey extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWKS_NO_MATCHING_KEY';\n        this.message = 'no applicable key found in the JSON Web Key Set';\n    }\n    static get code() {\n        return 'ERR_JWKS_NO_MATCHING_KEY';\n    }\n}\nexport class JWKSMultipleMatchingKeys extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWKS_MULTIPLE_MATCHING_KEYS';\n        this.message = 'multiple matching keys found in the JSON Web Key Set';\n    }\n    static get code() {\n        return 'ERR_JWKS_MULTIPLE_MATCHING_KEYS';\n    }\n}\nSymbol.asyncIterator;\nexport class JWKSTimeout extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWKS_TIMEOUT';\n        this.message = 'request timed out';\n    }\n    static get code() {\n        return 'ERR_JWKS_TIMEOUT';\n    }\n}\nexport class JWSSignatureVerificationFailed extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWS_SIGNATURE_VERIFICATION_FAILED';\n        this.message = 'signature verification failed';\n    }\n    static get code() {\n        return 'ERR_JWS_SIGNATURE_VERIFICATION_FAILED';\n    }\n}\n", "import crypto from './webcrypto.js';\nexport default crypto.getRandomValues.bind(crypto);\n", "import { JOSENotSupported } from '../util/errors.js';\nimport random from '../runtime/random.js';\nexport function bitLength(alg) {\n    switch (alg) {\n        case 'A128GCM':\n        case 'A128GCMKW':\n        case 'A192GCM':\n        case 'A192GCMKW':\n        case 'A256GCM':\n        case 'A256GCMKW':\n            return 96;\n        case 'A128CBC-HS256':\n        case 'A192CBC-HS384':\n        case 'A256CBC-HS512':\n            return 128;\n        default:\n            throw new JOSENotSupported(`Unsupported JWE Algorithm: ${alg}`);\n    }\n}\nexport default (alg) => random(new Uint8Array(bitLength(alg) >> 3));\n", "import { JWEInvalid } from '../util/errors.js';\nimport { bitLength } from './iv.js';\nconst checkIvLength = (enc, iv) => {\n    if (iv.length << 3 !== bitLength(enc)) {\n        throw new JWEInvalid('Invalid Initialization Vector length');\n    }\n};\nexport default checkIvLength;\n", "import { JWEInvalid } from '../util/errors.js';\nconst checkCekLength = (cek, expected) => {\n    const actual = cek.byteLength << 3;\n    if (actual !== expected) {\n        throw new JWEInvalid(`Invalid Content Encryption Key length. Expected ${expected} bits, got ${actual} bits`);\n    }\n};\nexport default checkCekLength;\n", "const timingSafeEqual = (a, b) => {\n    if (!(a instanceof Uint8Array)) {\n        throw new TypeError('First argument must be a buffer');\n    }\n    if (!(b instanceof Uint8Array)) {\n        throw new TypeError('Second argument must be a buffer');\n    }\n    if (a.length !== b.length) {\n        throw new TypeError('Input buffers must have the same length');\n    }\n    const len = a.length;\n    let out = 0;\n    let i = -1;\n    while (++i < len) {\n        out |= a[i] ^ b[i];\n    }\n    return out === 0;\n};\nexport default timingSafeEqual;\n", "function unusable(name, prop = 'algorithm.name') {\n    return new TypeError(`CryptoKey does not support this operation, its ${prop} must be ${name}`);\n}\nfunction isAlgorithm(algorithm, name) {\n    return algorithm.name === name;\n}\nfunction getHashLength(hash) {\n    return parseInt(hash.name.slice(4), 10);\n}\nfunction getNamedCurve(alg) {\n    switch (alg) {\n        case 'ES256':\n            return 'P-256';\n        case 'ES384':\n            return 'P-384';\n        case 'ES512':\n            return 'P-521';\n        default:\n            throw new Error('unreachable');\n    }\n}\nfunction checkUsage(key, usages) {\n    if (usages.length && !usages.some((expected) => key.usages.includes(expected))) {\n        let msg = 'CryptoKey does not support this operation, its usages must include ';\n        if (usages.length > 2) {\n            const last = usages.pop();\n            msg += `one of ${usages.join(', ')}, or ${last}.`;\n        }\n        else if (usages.length === 2) {\n            msg += `one of ${usages[0]} or ${usages[1]}.`;\n        }\n        else {\n            msg += `${usages[0]}.`;\n        }\n        throw new TypeError(msg);\n    }\n}\nexport function checkSigCryptoKey(key, alg, ...usages) {\n    switch (alg) {\n        case 'HS256':\n        case 'HS384':\n        case 'HS512': {\n            if (!isAlgorithm(key.algorithm, 'HMAC'))\n                throw unusable('HMAC');\n            const expected = parseInt(alg.slice(2), 10);\n            const actual = getHashLength(key.algorithm.hash);\n            if (actual !== expected)\n                throw unusable(`SHA-${expected}`, 'algorithm.hash');\n            break;\n        }\n        case 'RS256':\n        case 'RS384':\n        case 'RS512': {\n            if (!isAlgorithm(key.algorithm, 'RSASSA-PKCS1-v1_5'))\n                throw unusable('RSASSA-PKCS1-v1_5');\n            const expected = parseInt(alg.slice(2), 10);\n            const actual = getHashLength(key.algorithm.hash);\n            if (actual !== expected)\n                throw unusable(`SHA-${expected}`, 'algorithm.hash');\n            break;\n        }\n        case 'PS256':\n        case 'PS384':\n        case 'PS512': {\n            if (!isAlgorithm(key.algorithm, 'RSA-PSS'))\n                throw unusable('RSA-PSS');\n            const expected = parseInt(alg.slice(2), 10);\n            const actual = getHashLength(key.algorithm.hash);\n            if (actual !== expected)\n                throw unusable(`SHA-${expected}`, 'algorithm.hash');\n            break;\n        }\n        case 'EdDSA': {\n            if (key.algorithm.name !== 'Ed25519' && key.algorithm.name !== 'Ed448') {\n                throw unusable('Ed25519 or Ed448');\n            }\n            break;\n        }\n        case 'ES256':\n        case 'ES384':\n        case 'ES512': {\n            if (!isAlgorithm(key.algorithm, 'ECDSA'))\n                throw unusable('ECDSA');\n            const expected = getNamedCurve(alg);\n            const actual = key.algorithm.namedCurve;\n            if (actual !== expected)\n                throw unusable(expected, 'algorithm.namedCurve');\n            break;\n        }\n        default:\n            throw new TypeError('CryptoKey does not support this operation');\n    }\n    checkUsage(key, usages);\n}\nexport function checkEncCryptoKey(key, alg, ...usages) {\n    switch (alg) {\n        case 'A128GCM':\n        case 'A192GCM':\n        case 'A256GCM': {\n            if (!isAlgorithm(key.algorithm, 'AES-GCM'))\n                throw unusable('AES-GCM');\n            const expected = parseInt(alg.slice(1, 4), 10);\n            const actual = key.algorithm.length;\n            if (actual !== expected)\n                throw unusable(expected, 'algorithm.length');\n            break;\n        }\n        case 'A128KW':\n        case 'A192KW':\n        case 'A256KW': {\n            if (!isAlgorithm(key.algorithm, 'AES-KW'))\n                throw unusable('AES-KW');\n            const expected = parseInt(alg.slice(1, 4), 10);\n            const actual = key.algorithm.length;\n            if (actual !== expected)\n                throw unusable(expected, 'algorithm.length');\n            break;\n        }\n        case 'ECDH': {\n            switch (key.algorithm.name) {\n                case 'ECDH':\n                case 'X25519':\n                case 'X448':\n                    break;\n                default:\n                    throw unusable('ECDH, X25519, or X448');\n            }\n            break;\n        }\n        case 'PBES2-HS256+A128KW':\n        case 'PBES2-HS384+A192KW':\n        case 'PBES2-HS512+A256KW':\n            if (!isAlgorithm(key.algorithm, 'PBKDF2'))\n                throw unusable('PBKDF2');\n            break;\n        case 'RSA-OAEP':\n        case 'RSA-OAEP-256':\n        case 'RSA-OAEP-384':\n        case 'RSA-OAEP-512': {\n            if (!isAlgorithm(key.algorithm, 'RSA-OAEP'))\n                throw unusable('RSA-OAEP');\n            const expected = parseInt(alg.slice(9), 10) || 1;\n            const actual = getHashLength(key.algorithm.hash);\n            if (actual !== expected)\n                throw unusable(`SHA-${expected}`, 'algorithm.hash');\n            break;\n        }\n        default:\n            throw new TypeError('CryptoKey does not support this operation');\n    }\n    checkUsage(key, usages);\n}\n", "function message(msg, actual, ...types) {\n    if (types.length > 2) {\n        const last = types.pop();\n        msg += `one of type ${types.join(', ')}, or ${last}.`;\n    }\n    else if (types.length === 2) {\n        msg += `one of type ${types[0]} or ${types[1]}.`;\n    }\n    else {\n        msg += `of type ${types[0]}.`;\n    }\n    if (actual == null) {\n        msg += ` Received ${actual}`;\n    }\n    else if (typeof actual === 'function' && actual.name) {\n        msg += ` Received function ${actual.name}`;\n    }\n    else if (typeof actual === 'object' && actual != null) {\n        if (actual.constructor && actual.constructor.name) {\n            msg += ` Received an instance of ${actual.constructor.name}`;\n        }\n    }\n    return msg;\n}\nexport default (actual, ...types) => {\n    return message('Key must be ', actual, ...types);\n};\nexport function withAlg(alg, actual, ...types) {\n    return message(`Key for the ${alg} algorithm must be `, actual, ...types);\n}\n", "import { isCryptoKey } from './webcrypto.js';\nexport default (key) => {\n    return isCryptoKey(key);\n};\nexport const types = ['CryptoKey'];\n", "import { concat, uint64be } from '../lib/buffer_utils.js';\nimport checkIvLength from '../lib/check_iv_length.js';\nimport checkCekLength from './check_cek_length.js';\nimport timingSafeEqual from './timing_safe_equal.js';\nimport { JOSENotSupported, JWEDecryptionFailed } from '../util/errors.js';\nimport crypto, { isCryptoKey } from './webcrypto.js';\nimport { checkEncCryptoKey } from '../lib/crypto_key.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { types } from './is_key_like.js';\nasync function cbcDecrypt(enc, cek, ciphertext, iv, tag, aad) {\n    if (!(cek instanceof Uint8Array)) {\n        throw new TypeError(invalidKeyInput(cek, 'Uint8Array'));\n    }\n    const keySize = parseInt(enc.slice(1, 4), 10);\n    const encKey = await crypto.subtle.importKey('raw', cek.subarray(keySize >> 3), 'AES-CBC', false, ['decrypt']);\n    const macKey = await crypto.subtle.importKey('raw', cek.subarray(0, keySize >> 3), {\n        hash: `SHA-${keySize << 1}`,\n        name: 'HMAC',\n    }, false, ['sign']);\n    const macData = concat(aad, iv, ciphertext, uint64be(aad.length << 3));\n    const expectedTag = new Uint8Array((await crypto.subtle.sign('HMAC', macKey, macData)).slice(0, keySize >> 3));\n    let macCheckPassed;\n    try {\n        macCheckPassed = timingSafeEqual(tag, expectedTag);\n    }\n    catch (_a) {\n    }\n    if (!macCheckPassed) {\n        throw new JWEDecryptionFailed();\n    }\n    let plaintext;\n    try {\n        plaintext = new Uint8Array(await crypto.subtle.decrypt({ iv, name: 'AES-CBC' }, encKey, ciphertext));\n    }\n    catch (_b) {\n    }\n    if (!plaintext) {\n        throw new JWEDecryptionFailed();\n    }\n    return plaintext;\n}\nasync function gcmDecrypt(enc, cek, ciphertext, iv, tag, aad) {\n    let encKey;\n    if (cek instanceof Uint8Array) {\n        encKey = await crypto.subtle.importKey('raw', cek, 'AES-GCM', false, ['decrypt']);\n    }\n    else {\n        checkEncCryptoKey(cek, enc, 'decrypt');\n        encKey = cek;\n    }\n    try {\n        return new Uint8Array(await crypto.subtle.decrypt({\n            additionalData: aad,\n            iv,\n            name: 'AES-GCM',\n            tagLength: 128,\n        }, encKey, concat(ciphertext, tag)));\n    }\n    catch (_a) {\n        throw new JWEDecryptionFailed();\n    }\n}\nconst decrypt = async (enc, cek, ciphertext, iv, tag, aad) => {\n    if (!isCryptoKey(cek) && !(cek instanceof Uint8Array)) {\n        throw new TypeError(invalidKeyInput(cek, ...types, 'Uint8Array'));\n    }\n    checkIvLength(enc, iv);\n    switch (enc) {\n        case 'A128CBC-HS256':\n        case 'A192CBC-HS384':\n        case 'A256CBC-HS512':\n            if (cek instanceof Uint8Array)\n                checkCekLength(cek, parseInt(enc.slice(-3), 10));\n            return cbcDecrypt(enc, cek, ciphertext, iv, tag, aad);\n        case 'A128GCM':\n        case 'A192GCM':\n        case 'A256GCM':\n            if (cek instanceof Uint8Array)\n                checkCekLength(cek, parseInt(enc.slice(1, 4), 10));\n            return gcmDecrypt(enc, cek, ciphertext, iv, tag, aad);\n        default:\n            throw new JOSENotSupported('Unsupported JWE Content Encryption Algorithm');\n    }\n};\nexport default decrypt;\n", "import { JOSENotSupported } from '../util/errors.js';\nexport const inflate = async () => {\n    throw new JOSENotSupported('JWE \"zip\" (Compression Algorithm) Header Parameter is not supported by your javascript runtime. You need to use the `inflateRaw` decrypt option to provide Inflate Raw implementation.');\n};\nexport const deflate = async () => {\n    throw new JOSENotSupported('JWE \"zip\" (Compression Algorithm) Header Parameter is not supported by your javascript runtime. You need to use the `deflateRaw` encrypt option to provide Deflate Raw implementation.');\n};\n", "const isDisjoint = (...headers) => {\n    const sources = headers.filter(Boolean);\n    if (sources.length === 0 || sources.length === 1) {\n        return true;\n    }\n    let acc;\n    for (const header of sources) {\n        const parameters = Object.keys(header);\n        if (!acc || acc.size === 0) {\n            acc = new Set(parameters);\n            continue;\n        }\n        for (const parameter of parameters) {\n            if (acc.has(parameter)) {\n                return false;\n            }\n            acc.add(parameter);\n        }\n    }\n    return true;\n};\nexport default isDisjoint;\n", "function isObjectLike(value) {\n    return typeof value === 'object' && value !== null;\n}\nexport default function isObject(input) {\n    if (!isObjectLike(input) || Object.prototype.toString.call(input) !== '[object Object]') {\n        return false;\n    }\n    if (Object.getPrototypeOf(input) === null) {\n        return true;\n    }\n    let proto = input;\n    while (Object.getPrototypeOf(proto) !== null) {\n        proto = Object.getPrototypeOf(proto);\n    }\n    return Object.getPrototypeOf(input) === proto;\n}\n", "const bogusWebCrypto = [\n    { hash: 'SHA-256', name: 'HMAC' },\n    true,\n    ['sign'],\n];\nexport default bogusWebCrypto;\n", "import bogusWebCrypto from './bogus.js';\nimport crypto, { isCryptoKey } from './webcrypto.js';\nimport { checkEncCryptoKey } from '../lib/crypto_key.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { types } from './is_key_like.js';\nfunction checkKeySize(key, alg) {\n    if (key.algorithm.length !== parseInt(alg.slice(1, 4), 10)) {\n        throw new TypeError(`Invalid key size for alg: ${alg}`);\n    }\n}\nfunction getCryptoKey(key, alg, usage) {\n    if (isCryptoKey(key)) {\n        checkEncCryptoKey(key, alg, usage);\n        return key;\n    }\n    if (key instanceof Uint8Array) {\n        return crypto.subtle.importKey('raw', key, 'AES-KW', true, [usage]);\n    }\n    throw new TypeError(invalidKeyInput(key, ...types, 'Uint8Array'));\n}\nexport const wrap = async (alg, key, cek) => {\n    const cryptoKey = await getCryptoKey(key, alg, 'wrapKey');\n    checkKeySize(cryptoKey, alg);\n    const cryptoKeyCek = await crypto.subtle.importKey('raw', cek, ...bogusWebCrypto);\n    return new Uint8Array(await crypto.subtle.wrapKey('raw', cryptoKeyCek, cryptoKey, 'AES-KW'));\n};\nexport const unwrap = async (alg, key, encryptedKey) => {\n    const cryptoKey = await getCryptoKey(key, alg, 'unwrapKey');\n    checkKeySize(cryptoKey, alg);\n    const cryptoKeyCek = await crypto.subtle.unwrapKey('raw', encryptedKey, cryptoKey, 'AES-KW', ...bogusWebCrypto);\n    return new Uint8Array(await crypto.subtle.exportKey('raw', cryptoKeyCek));\n};\n", "import { encoder, concat, uint32be, lengthAndInput, concatKdf } from '../lib/buffer_utils.js';\nimport crypto, { isCryptoKey } from './webcrypto.js';\nimport { checkEncCryptoKey } from '../lib/crypto_key.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { types } from './is_key_like.js';\nexport async function deriveKey(publicKey, privateKey, algorithm, keyLength, apu = new Uint8Array(0), apv = new Uint8Array(0)) {\n    if (!isCryptoKey(publicKey)) {\n        throw new TypeError(invalidKeyInput(publicKey, ...types));\n    }\n    checkEncCryptoKey(publicKey, 'ECDH');\n    if (!isCryptoKey(privateKey)) {\n        throw new TypeError(invalidKeyInput(privateKey, ...types));\n    }\n    checkEncCryptoKey(privateKey, 'ECDH', 'deriveBits');\n    const value = concat(lengthAndInput(encoder.encode(algorithm)), lengthAndInput(apu), lengthAndInput(apv), uint32be(keyLength));\n    let length;\n    if (publicKey.algorithm.name === 'X25519') {\n        length = 256;\n    }\n    else if (publicKey.algorithm.name === 'X448') {\n        length = 448;\n    }\n    else {\n        length =\n            Math.ceil(parseInt(publicKey.algorithm.namedCurve.substr(-3), 10) / 8) << 3;\n    }\n    const sharedSecret = new Uint8Array(await crypto.subtle.deriveBits({\n        name: publicKey.algorithm.name,\n        public: publicKey,\n    }, privateKey, length));\n    return concatKdf(sharedSecret, keyLength, value);\n}\nexport async function generateEpk(key) {\n    if (!isCryptoKey(key)) {\n        throw new TypeError(invalidKeyInput(key, ...types));\n    }\n    return crypto.subtle.generateKey(key.algorithm, true, ['deriveBits']);\n}\nexport function ecdhAllowed(key) {\n    if (!isCryptoKey(key)) {\n        throw new TypeError(invalidKeyInput(key, ...types));\n    }\n    return (['P-256', 'P-384', 'P-521'].includes(key.algorithm.namedCurve) ||\n        key.algorithm.name === 'X25519' ||\n        key.algorithm.name === 'X448');\n}\n", "import { JWEInvalid } from '../util/errors.js';\nexport default function checkP2s(p2s) {\n    if (!(p2s instanceof Uint8Array) || p2s.length < 8) {\n        throw new JWEInvalid('PBES2 Salt Input must be 8 or more octets');\n    }\n}\n", "import random from './random.js';\nimport { p2s as concatSalt } from '../lib/buffer_utils.js';\nimport { encode as base64url } from './base64url.js';\nimport { wrap, unwrap } from './aeskw.js';\nimport checkP2s from '../lib/check_p2s.js';\nimport crypto, { isCryptoKey } from './webcrypto.js';\nimport { checkEncCryptoKey } from '../lib/crypto_key.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { types } from './is_key_like.js';\nfunction getCryptoKey(key, alg) {\n    if (key instanceof Uint8Array) {\n        return crypto.subtle.importKey('raw', key, 'PBKDF2', false, ['deriveBits']);\n    }\n    if (isCryptoKey(key)) {\n        checkEncCryptoKey(key, alg, 'deriveBits', 'deriveKey');\n        return key;\n    }\n    throw new TypeError(invalidKeyInput(key, ...types, 'Uint8Array'));\n}\nasync function deriveKey(p2s, alg, p2c, key) {\n    checkP2s(p2s);\n    const salt = concatSalt(alg, p2s);\n    const keylen = parseInt(alg.slice(13, 16), 10);\n    const subtleAlg = {\n        hash: `SHA-${alg.slice(8, 11)}`,\n        iterations: p2c,\n        name: 'PBKDF2',\n        salt,\n    };\n    const wrapAlg = {\n        length: keylen,\n        name: 'AES-KW',\n    };\n    const cryptoKey = await getCryptoKey(key, alg);\n    if (cryptoKey.usages.includes('deriveBits')) {\n        return new Uint8Array(await crypto.subtle.deriveBits(subtleAlg, cryptoKey, keylen));\n    }\n    if (cryptoKey.usages.includes('deriveKey')) {\n        return crypto.subtle.deriveKey(subtleAlg, cryptoKey, wrapAlg, false, ['wrapKey', 'unwrapKey']);\n    }\n    throw new TypeError('PBKDF2 key \"usages\" must include \"deriveBits\" or \"deriveKey\"');\n}\nexport const encrypt = async (alg, key, cek, p2c = 2048, p2s = random(new Uint8Array(16))) => {\n    const derived = await deriveKey(p2s, alg, p2c, key);\n    const encryptedKey = await wrap(alg.slice(-6), derived, cek);\n    return { encryptedKey, p2c, p2s: base64url(p2s) };\n};\nexport const decrypt = async (alg, key, encryptedKey, p2c, p2s) => {\n    const derived = await deriveKey(p2s, alg, p2c, key);\n    return unwrap(alg.slice(-6), derived, encryptedKey);\n};\n", "import { JOSENotSupported } from '../util/errors.js';\nexport default function subtleRsaEs(alg) {\n    switch (alg) {\n        case 'RSA-OAEP':\n        case 'RSA-OAEP-256':\n        case 'RSA-OAEP-384':\n        case 'RSA-OAEP-512':\n            return 'RSA-OAEP';\n        default:\n            throw new JOSENotSupported(`alg ${alg} is not supported either by JOSE or your javascript runtime`);\n    }\n}\n", "export default (alg, key) => {\n    if (alg.startsWith('RS') || alg.startsWith('PS')) {\n        const { modulusLength } = key.algorithm;\n        if (typeof modulusLength !== 'number' || modulusLength < 2048) {\n            throw new TypeError(`${alg} requires key modulusLength to be 2048 bits or larger`);\n        }\n    }\n};\n", "import subtleAlgorithm from './subtle_rsaes.js';\nimport bogusWebCrypto from './bogus.js';\nimport crypto, { isCryptoKey } from './webcrypto.js';\nimport { checkEncCryptoKey } from '../lib/crypto_key.js';\nimport checkKeyLength from './check_key_length.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { types } from './is_key_like.js';\nexport const encrypt = async (alg, key, cek) => {\n    if (!isCryptoKey(key)) {\n        throw new TypeError(invalidKeyInput(key, ...types));\n    }\n    checkEncCryptoKey(key, alg, 'encrypt', 'wrapKey');\n    checkKeyLength(alg, key);\n    if (key.usages.includes('encrypt')) {\n        return new Uint8Array(await crypto.subtle.encrypt(subtleAlgorithm(alg), key, cek));\n    }\n    if (key.usages.includes('wrapKey')) {\n        const cryptoKeyCek = await crypto.subtle.importKey('raw', cek, ...bogusWebCrypto);\n        return new Uint8Array(await crypto.subtle.wrapKey('raw', cryptoKeyCek, key, subtleAlgorithm(alg)));\n    }\n    throw new TypeError('RSA-OAEP key \"usages\" must include \"encrypt\" or \"wrapKey\" for this operation');\n};\nexport const decrypt = async (alg, key, encryptedKey) => {\n    if (!isCryptoKey(key)) {\n        throw new TypeError(invalidKeyInput(key, ...types));\n    }\n    checkEncCryptoKey(key, alg, 'decrypt', 'unwrapKey');\n    checkKeyLength(alg, key);\n    if (key.usages.includes('decrypt')) {\n        return new Uint8Array(await crypto.subtle.decrypt(subtleAlgorithm(alg), key, encryptedKey));\n    }\n    if (key.usages.includes('unwrapKey')) {\n        const cryptoKeyCek = await crypto.subtle.unwrapKey('raw', encryptedKey, key, subtleAlgorithm(alg), ...bogusWebCrypto);\n        return new Uint8Array(await crypto.subtle.exportKey('raw', cryptoKeyCek));\n    }\n    throw new TypeError('RSA-OAEP key \"usages\" must include \"decrypt\" or \"unwrapKey\" for this operation');\n};\n", "import { JOSENotSupported } from '../util/errors.js';\nimport random from '../runtime/random.js';\nexport function bitLength(alg) {\n    switch (alg) {\n        case 'A128GCM':\n            return 128;\n        case 'A192GCM':\n            return 192;\n        case 'A256GCM':\n        case 'A128CBC-HS256':\n            return 256;\n        case 'A192CBC-HS384':\n            return 384;\n        case 'A256CBC-HS512':\n            return 512;\n        default:\n            throw new JOSENotSupported(`Unsupported JWE Algorithm: ${alg}`);\n    }\n}\nexport default (alg) => random(new Uint8Array(bitLength(alg) >> 3));\n", "export default (b64, descriptor) => {\n    const newlined = (b64.match(/.{1,64}/g) || []).join('\\n');\n    return `-----BEGIN ${descriptor}-----\\n${newlined}\\n-----END ${descriptor}-----`;\n};\n", "import crypto, { isCryptoKey } from './webcrypto.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { encodeBase64, decodeBase64 } from './base64url.js';\nimport formatPEM from '../lib/format_pem.js';\nimport { JOSENotSupported } from '../util/errors.js';\nimport { types } from './is_key_like.js';\nconst genericExport = async (keyType, keyFormat, key) => {\n    if (!isCryptoKey(key)) {\n        throw new TypeError(invalidKeyInput(key, ...types));\n    }\n    if (!key.extractable) {\n        throw new TypeError('CryptoKey is not extractable');\n    }\n    if (key.type !== keyType) {\n        throw new TypeError(`key is not a ${keyType} key`);\n    }\n    return formatPEM(encodeBase64(new Uint8Array(await crypto.subtle.exportKey(keyFormat, key))), `${keyType.toUpperCase()} KEY`);\n};\nexport const toSPKI = (key) => {\n    return genericExport('public', 'spki', key);\n};\nexport const toPKCS8 = (key) => {\n    return genericExport('private', 'pkcs8', key);\n};\nconst findOid = (keyData, oid, from = 0) => {\n    if (from === 0) {\n        oid.unshift(oid.length);\n        oid.unshift(0x06);\n    }\n    let i = keyData.indexOf(oid[0], from);\n    if (i === -1)\n        return false;\n    const sub = keyData.subarray(i, i + oid.length);\n    if (sub.length !== oid.length)\n        return false;\n    return sub.every((value, index) => value === oid[index]) || findOid(keyData, oid, i + 1);\n};\nconst getNamedCurve = (keyData) => {\n    switch (true) {\n        case findOid(keyData, [0x2a, 0x86, 0x48, 0xce, 0x3d, 0x03, 0x01, 0x07]):\n            return 'P-256';\n        case findOid(keyData, [0x2b, 0x81, 0x04, 0x00, 0x22]):\n            return 'P-384';\n        case findOid(keyData, [0x2b, 0x81, 0x04, 0x00, 0x23]):\n            return 'P-521';\n        case findOid(keyData, [0x2b, 0x65, 0x6e]):\n            return 'X25519';\n        case findOid(keyData, [0x2b, 0x65, 0x6f]):\n            return 'X448';\n        case findOid(keyData, [0x2b, 0x65, 0x70]):\n            return 'Ed25519';\n        case findOid(keyData, [0x2b, 0x65, 0x71]):\n            return 'Ed448';\n        default:\n            throw new JOSENotSupported('Invalid or unsupported EC Key Curve or OKP Key Sub Type');\n    }\n};\nconst genericImport = async (replace, keyFormat, pem, alg, options) => {\n    var _a;\n    let algorithm;\n    let keyUsages;\n    const keyData = new Uint8Array(atob(pem.replace(replace, ''))\n        .split('')\n        .map((c) => c.charCodeAt(0)));\n    const isPublic = keyFormat === 'spki';\n    switch (alg) {\n        case 'PS256':\n        case 'PS384':\n        case 'PS512':\n            algorithm = { name: 'RSA-PSS', hash: `SHA-${alg.slice(-3)}` };\n            keyUsages = isPublic ? ['verify'] : ['sign'];\n            break;\n        case 'RS256':\n        case 'RS384':\n        case 'RS512':\n            algorithm = { name: 'RSASSA-PKCS1-v1_5', hash: `SHA-${alg.slice(-3)}` };\n            keyUsages = isPublic ? ['verify'] : ['sign'];\n            break;\n        case 'RSA-OAEP':\n        case 'RSA-OAEP-256':\n        case 'RSA-OAEP-384':\n        case 'RSA-OAEP-512':\n            algorithm = {\n                name: 'RSA-OAEP',\n                hash: `SHA-${parseInt(alg.slice(-3), 10) || 1}`,\n            };\n            keyUsages = isPublic ? ['encrypt', 'wrapKey'] : ['decrypt', 'unwrapKey'];\n            break;\n        case 'ES256':\n            algorithm = { name: 'ECDSA', namedCurve: 'P-256' };\n            keyUsages = isPublic ? ['verify'] : ['sign'];\n            break;\n        case 'ES384':\n            algorithm = { name: 'ECDSA', namedCurve: 'P-384' };\n            keyUsages = isPublic ? ['verify'] : ['sign'];\n            break;\n        case 'ES512':\n            algorithm = { name: 'ECDSA', namedCurve: 'P-521' };\n            keyUsages = isPublic ? ['verify'] : ['sign'];\n            break;\n        case 'ECDH-ES':\n        case 'ECDH-ES+A128KW':\n        case 'ECDH-ES+A192KW':\n        case 'ECDH-ES+A256KW': {\n            const namedCurve = getNamedCurve(keyData);\n            algorithm = namedCurve.startsWith('P-') ? { name: 'ECDH', namedCurve } : { name: namedCurve };\n            keyUsages = isPublic ? [] : ['deriveBits'];\n            break;\n        }\n        case 'EdDSA':\n            algorithm = { name: getNamedCurve(keyData) };\n            keyUsages = isPublic ? ['verify'] : ['sign'];\n            break;\n        default:\n            throw new JOSENotSupported('Invalid or unsupported \"alg\" (Algorithm) value');\n    }\n    return crypto.subtle.importKey(keyFormat, keyData, algorithm, (_a = options === null || options === void 0 ? void 0 : options.extractable) !== null && _a !== void 0 ? _a : false, keyUsages);\n};\nexport const fromPKCS8 = (pem, alg, options) => {\n    return genericImport(/(?:-----(?:BEGIN|END) PRIVATE KEY-----|\\s)/g, 'pkcs8', pem, alg, options);\n};\nexport const fromSPKI = (pem, alg, options) => {\n    return genericImport(/(?:-----(?:BEGIN|END) PUBLIC KEY-----|\\s)/g, 'spki', pem, alg, options);\n};\nfunction getElement(seq) {\n    let result = [];\n    let next = 0;\n    while (next < seq.length) {\n        let nextPart = parseElement(seq.subarray(next));\n        result.push(nextPart);\n        next += nextPart.byteLength;\n    }\n    return result;\n}\nfunction parseElement(bytes) {\n    let position = 0;\n    let tag = bytes[0] & 0x1f;\n    position++;\n    if (tag === 0x1f) {\n        tag = 0;\n        while (bytes[position] >= 0x80) {\n            tag = tag * 128 + bytes[position] - 0x80;\n            position++;\n        }\n        tag = tag * 128 + bytes[position] - 0x80;\n        position++;\n    }\n    let length = 0;\n    if (bytes[position] < 0x80) {\n        length = bytes[position];\n        position++;\n    }\n    else if (length === 0x80) {\n        length = 0;\n        while (bytes[position + length] !== 0 || bytes[position + length + 1] !== 0) {\n            if (length > bytes.byteLength) {\n                throw new TypeError('invalid indefinite form length');\n            }\n            length++;\n        }\n        const byteLength = position + length + 2;\n        return {\n            byteLength,\n            contents: bytes.subarray(position, position + length),\n            raw: bytes.subarray(0, byteLength),\n        };\n    }\n    else {\n        let numberOfDigits = bytes[position] & 0x7f;\n        position++;\n        length = 0;\n        for (let i = 0; i < numberOfDigits; i++) {\n            length = length * 256 + bytes[position];\n            position++;\n        }\n    }\n    const byteLength = position + length;\n    return {\n        byteLength,\n        contents: bytes.subarray(position, byteLength),\n        raw: bytes.subarray(0, byteLength),\n    };\n}\nfunction spkiFromX509(buf) {\n    const tbsCertificate = getElement(getElement(parseElement(buf).contents)[0].contents);\n    return encodeBase64(tbsCertificate[tbsCertificate[0].raw[0] === 0xa0 ? 6 : 5].raw);\n}\nfunction getSPKI(x509) {\n    const pem = x509.replace(/(?:-----(?:BEGIN|END) CERTIFICATE-----|\\s)/g, '');\n    const raw = decodeBase64(pem);\n    return formatPEM(spkiFromX509(raw), 'PUBLIC KEY');\n}\nexport const fromX509 = (pem, alg, options) => {\n    let spki;\n    try {\n        spki = getSPKI(pem);\n    }\n    catch (cause) {\n        throw new TypeError('Failed to parse the X.509 certificate', { cause });\n    }\n    return fromSPKI(spki, alg, options);\n};\n", "import crypto from './webcrypto.js';\nimport { JOSENotSupported } from '../util/errors.js';\nimport { decode as base64url } from './base64url.js';\nfunction subtleMapping(jwk) {\n    let algorithm;\n    let keyUsages;\n    switch (jwk.kty) {\n        case 'oct': {\n            switch (jwk.alg) {\n                case 'HS256':\n                case 'HS384':\n                case 'HS512':\n                    algorithm = { name: 'HMAC', hash: `SHA-${jwk.alg.slice(-3)}` };\n                    keyUsages = ['sign', 'verify'];\n                    break;\n                case 'A128CBC-HS256':\n                case 'A192CBC-HS384':\n                case 'A256CBC-HS512':\n                    throw new JOSENotSupported(`${jwk.alg} keys cannot be imported as CryptoKey instances`);\n                case 'A128GCM':\n                case 'A192GCM':\n                case 'A256GCM':\n                case 'A128GCMKW':\n                case 'A192GCMKW':\n                case 'A256GCMKW':\n                    algorithm = { name: 'AES-GCM' };\n                    keyUsages = ['encrypt', 'decrypt'];\n                    break;\n                case 'A128KW':\n                case 'A192KW':\n                case 'A256KW':\n                    algorithm = { name: 'AES-KW' };\n                    keyUsages = ['wrapKey', 'unwrapKey'];\n                    break;\n                case 'PBES2-HS256+A128KW':\n                case 'PBES2-HS384+A192KW':\n                case 'PBES2-HS512+A256KW':\n                    algorithm = { name: 'PBKDF2' };\n                    keyUsages = ['deriveBits'];\n                    break;\n                default:\n                    throw new JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n            }\n            break;\n        }\n        case 'RSA': {\n            switch (jwk.alg) {\n                case 'PS256':\n                case 'PS384':\n                case 'PS512':\n                    algorithm = { name: 'RSA-PSS', hash: `SHA-${jwk.alg.slice(-3)}` };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'RS256':\n                case 'RS384':\n                case 'RS512':\n                    algorithm = { name: 'RSASSA-PKCS1-v1_5', hash: `SHA-${jwk.alg.slice(-3)}` };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'RSA-OAEP':\n                case 'RSA-OAEP-256':\n                case 'RSA-OAEP-384':\n                case 'RSA-OAEP-512':\n                    algorithm = {\n                        name: 'RSA-OAEP',\n                        hash: `SHA-${parseInt(jwk.alg.slice(-3), 10) || 1}`,\n                    };\n                    keyUsages = jwk.d ? ['decrypt', 'unwrapKey'] : ['encrypt', 'wrapKey'];\n                    break;\n                default:\n                    throw new JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n            }\n            break;\n        }\n        case 'EC': {\n            switch (jwk.alg) {\n                case 'ES256':\n                    algorithm = { name: 'ECDSA', namedCurve: 'P-256' };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'ES384':\n                    algorithm = { name: 'ECDSA', namedCurve: 'P-384' };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'ES512':\n                    algorithm = { name: 'ECDSA', namedCurve: 'P-521' };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'ECDH-ES':\n                case 'ECDH-ES+A128KW':\n                case 'ECDH-ES+A192KW':\n                case 'ECDH-ES+A256KW':\n                    algorithm = { name: 'ECDH', namedCurve: jwk.crv };\n                    keyUsages = jwk.d ? ['deriveBits'] : [];\n                    break;\n                default:\n                    throw new JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n            }\n            break;\n        }\n        case 'OKP': {\n            switch (jwk.alg) {\n                case 'EdDSA':\n                    algorithm = { name: jwk.crv };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'ECDH-ES':\n                case 'ECDH-ES+A128KW':\n                case 'ECDH-ES+A192KW':\n                case 'ECDH-ES+A256KW':\n                    algorithm = { name: jwk.crv };\n                    keyUsages = jwk.d ? ['deriveBits'] : [];\n                    break;\n                default:\n                    throw new JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n            }\n            break;\n        }\n        default:\n            throw new JOSENotSupported('Invalid or unsupported JWK \"kty\" (Key Type) Parameter value');\n    }\n    return { algorithm, keyUsages };\n}\nconst parse = async (jwk) => {\n    var _a, _b;\n    if (!jwk.alg) {\n        throw new TypeError('\"alg\" argument is required when \"jwk.alg\" is not present');\n    }\n    const { algorithm, keyUsages } = subtleMapping(jwk);\n    const rest = [\n        algorithm,\n        (_a = jwk.ext) !== null && _a !== void 0 ? _a : false,\n        (_b = jwk.key_ops) !== null && _b !== void 0 ? _b : keyUsages,\n    ];\n    if (algorithm.name === 'PBKDF2') {\n        return crypto.subtle.importKey('raw', base64url(jwk.k), ...rest);\n    }\n    const keyData = { ...jwk };\n    delete keyData.alg;\n    delete keyData.use;\n    return crypto.subtle.importKey('jwk', keyData, ...rest);\n};\nexport default parse;\n", "import { decode as decodeBase64URL } from '../runtime/base64url.js';\nimport { fromSPKI, fromPKCS8, fromX509 } from '../runtime/asn1.js';\nimport asKeyObject from '../runtime/jwk_to_key.js';\nimport { JOSENotSupported } from '../util/errors.js';\nimport isObject from '../lib/is_object.js';\nexport async function importSPKI(spki, alg, options) {\n    if (typeof spki !== 'string' || spki.indexOf('-----BEGIN PUBLIC KEY-----') !== 0) {\n        throw new TypeError('\"spki\" must be SPKI formatted string');\n    }\n    return fromSPKI(spki, alg, options);\n}\nexport async function importX509(x509, alg, options) {\n    if (typeof x509 !== 'string' || x509.indexOf('-----BEGIN CERTIFICATE-----') !== 0) {\n        throw new TypeError('\"x509\" must be X.509 formatted string');\n    }\n    return fromX509(x509, alg, options);\n}\nexport async function importPKCS8(pkcs8, alg, options) {\n    if (typeof pkcs8 !== 'string' || pkcs8.indexOf('-----BEGIN PRIVATE KEY-----') !== 0) {\n        throw new TypeError('\"pkcs8\" must be PKCS#8 formatted string');\n    }\n    return fromPKCS8(pkcs8, alg, options);\n}\nexport async function importJWK(jwk, alg, octAsKeyObject) {\n    var _a;\n    if (!isObject(jwk)) {\n        throw new TypeError('JWK must be an object');\n    }\n    alg || (alg = jwk.alg);\n    switch (jwk.kty) {\n        case 'oct':\n            if (typeof jwk.k !== 'string' || !jwk.k) {\n                throw new TypeError('missing \"k\" (Key Value) Parameter value');\n            }\n            octAsKeyObject !== null && octAsKeyObject !== void 0 ? octAsKeyObject : (octAsKeyObject = jwk.ext !== true);\n            if (octAsKeyObject) {\n                return asKeyObject({ ...jwk, alg, ext: (_a = jwk.ext) !== null && _a !== void 0 ? _a : false });\n            }\n            return decodeBase64URL(jwk.k);\n        case 'RSA':\n            if (jwk.oth !== undefined) {\n                throw new JOSENotSupported('RSA JWK \"oth\" (Other Primes Info) Parameter value is not supported');\n            }\n        case 'EC':\n        case 'OKP':\n            return asKeyObject({ ...jwk, alg });\n        default:\n            throw new JOSENotSupported('Unsupported \"kty\" (Key Type) Parameter value');\n    }\n}\n", "import { withAlg as invalidKeyInput } from './invalid_key_input.js';\nimport isKeyLike, { types } from '../runtime/is_key_like.js';\nconst symmetricTypeCheck = (alg, key) => {\n    if (key instanceof Uint8Array)\n        return;\n    if (!isKeyLike(key)) {\n        throw new TypeError(invalidKeyInput(alg, key, ...types, 'Uint8Array'));\n    }\n    if (key.type !== 'secret') {\n        throw new TypeError(`${types.join(' or ')} instances for symmetric algorithms must be of type \"secret\"`);\n    }\n};\nconst asymmetricTypeCheck = (alg, key, usage) => {\n    if (!isKeyLike(key)) {\n        throw new TypeError(invalidKeyInput(alg, key, ...types));\n    }\n    if (key.type === 'secret') {\n        throw new TypeError(`${types.join(' or ')} instances for asymmetric algorithms must not be of type \"secret\"`);\n    }\n    if (usage === 'sign' && key.type === 'public') {\n        throw new TypeError(`${types.join(' or ')} instances for asymmetric algorithm signing must be of type \"private\"`);\n    }\n    if (usage === 'decrypt' && key.type === 'public') {\n        throw new TypeError(`${types.join(' or ')} instances for asymmetric algorithm decryption must be of type \"private\"`);\n    }\n    if (key.algorithm && usage === 'verify' && key.type === 'private') {\n        throw new TypeError(`${types.join(' or ')} instances for asymmetric algorithm verifying must be of type \"public\"`);\n    }\n    if (key.algorithm && usage === 'encrypt' && key.type === 'private') {\n        throw new TypeError(`${types.join(' or ')} instances for asymmetric algorithm encryption must be of type \"public\"`);\n    }\n};\nconst checkKeyType = (alg, key, usage) => {\n    const symmetric = alg.startsWith('HS') ||\n        alg === 'dir' ||\n        alg.startsWith('PBES2') ||\n        /^A\\d{3}(?:GCM)?KW$/.test(alg);\n    if (symmetric) {\n        symmetricTypeCheck(alg, key);\n    }\n    else {\n        asymmetricTypeCheck(alg, key, usage);\n    }\n};\nexport default checkKeyType;\n", "import { concat, uint64be } from '../lib/buffer_utils.js';\nimport checkIvLength from '../lib/check_iv_length.js';\nimport checkCekLength from './check_cek_length.js';\nimport crypto, { isCryptoKey } from './webcrypto.js';\nimport { checkEncCryptoKey } from '../lib/crypto_key.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { JOSENotSupported } from '../util/errors.js';\nimport { types } from './is_key_like.js';\nasync function cbcEncrypt(enc, plaintext, cek, iv, aad) {\n    if (!(cek instanceof Uint8Array)) {\n        throw new TypeError(invalidKeyInput(cek, 'Uint8Array'));\n    }\n    const keySize = parseInt(enc.slice(1, 4), 10);\n    const encKey = await crypto.subtle.importKey('raw', cek.subarray(keySize >> 3), 'AES-CBC', false, ['encrypt']);\n    const macKey = await crypto.subtle.importKey('raw', cek.subarray(0, keySize >> 3), {\n        hash: `SHA-${keySize << 1}`,\n        name: 'HMAC',\n    }, false, ['sign']);\n    const ciphertext = new Uint8Array(await crypto.subtle.encrypt({\n        iv,\n        name: 'AES-CBC',\n    }, encKey, plaintext));\n    const macData = concat(aad, iv, ciphertext, uint64be(aad.length << 3));\n    const tag = new Uint8Array((await crypto.subtle.sign('HMAC', macKey, macData)).slice(0, keySize >> 3));\n    return { ciphertext, tag };\n}\nasync function gcmEncrypt(enc, plaintext, cek, iv, aad) {\n    let encKey;\n    if (cek instanceof Uint8Array) {\n        encKey = await crypto.subtle.importKey('raw', cek, 'AES-GCM', false, ['encrypt']);\n    }\n    else {\n        checkEncCryptoKey(cek, enc, 'encrypt');\n        encKey = cek;\n    }\n    const encrypted = new Uint8Array(await crypto.subtle.encrypt({\n        additionalData: aad,\n        iv,\n        name: 'AES-GCM',\n        tagLength: 128,\n    }, encKey, plaintext));\n    const tag = encrypted.slice(-16);\n    const ciphertext = encrypted.slice(0, -16);\n    return { ciphertext, tag };\n}\nconst encrypt = async (enc, plaintext, cek, iv, aad) => {\n    if (!isCryptoKey(cek) && !(cek instanceof Uint8Array)) {\n        throw new TypeError(invalidKeyInput(cek, ...types, 'Uint8Array'));\n    }\n    checkIvLength(enc, iv);\n    switch (enc) {\n        case 'A128CBC-HS256':\n        case 'A192CBC-HS384':\n        case 'A256CBC-HS512':\n            if (cek instanceof Uint8Array)\n                checkCekLength(cek, parseInt(enc.slice(-3), 10));\n            return cbcEncrypt(enc, plaintext, cek, iv, aad);\n        case 'A128GCM':\n        case 'A192GCM':\n        case 'A256GCM':\n            if (cek instanceof Uint8Array)\n                checkCekLength(cek, parseInt(enc.slice(1, 4), 10));\n            return gcmEncrypt(enc, plaintext, cek, iv, aad);\n        default:\n            throw new JOSENotSupported('Unsupported JWE Content Encryption Algorithm');\n    }\n};\nexport default encrypt;\n", "import encrypt from '../runtime/encrypt.js';\nimport decrypt from '../runtime/decrypt.js';\nimport generateIv from './iv.js';\nimport { encode as base64url } from '../runtime/base64url.js';\nexport async function wrap(alg, key, cek, iv) {\n    const jweAlgorithm = alg.slice(0, 7);\n    iv || (iv = generateIv(jweAlgorithm));\n    const { ciphertext: encryptedKey, tag } = await encrypt(jweAlgorithm, cek, key, iv, new Uint8Array(0));\n    return { encryptedKey, iv: base64url(iv), tag: base64url(tag) };\n}\nexport async function unwrap(alg, key, encryptedKey, iv, tag) {\n    const jweAlgorithm = alg.slice(0, 7);\n    return decrypt(jweAlgorithm, key, encryptedKey, iv, tag, new Uint8Array(0));\n}\n", "import { unwrap as aesKw } from '../runtime/aeskw.js';\nimport * as ECDH from '../runtime/ecdhes.js';\nimport { decrypt as pbes2Kw } from '../runtime/pbes2kw.js';\nimport { decrypt as rsaEs } from '../runtime/rsaes.js';\nimport { decode as base64url } from '../runtime/base64url.js';\nimport { JOSENotSupported, JWEInvalid } from '../util/errors.js';\nimport { bitLength as cekLength } from '../lib/cek.js';\nimport { importJWK } from '../key/import.js';\nimport checkKeyType from './check_key_type.js';\nimport isObject from './is_object.js';\nimport { unwrap as aesGcmKw } from './aesgcmkw.js';\nasync function decryptKeyManagement(alg, key, encryptedKey, joseHeader, options) {\n    checkKeyType(alg, key, 'decrypt');\n    switch (alg) {\n        case 'dir': {\n            if (encryptedKey !== undefined)\n                throw new JWEInvalid('Encountered unexpected JWE Encrypted Key');\n            return key;\n        }\n        case 'ECDH-ES':\n            if (encryptedKey !== undefined)\n                throw new JWEInvalid('Encountered unexpected JWE Encrypted Key');\n        case 'ECDH-ES+A128KW':\n        case 'ECDH-ES+A192KW':\n        case 'ECDH-ES+A256KW': {\n            if (!isObject(joseHeader.epk))\n                throw new JWEInvalid(`JOSE Header \"epk\" (Ephemeral Public Key) missing or invalid`);\n            if (!ECDH.ecdhAllowed(key))\n                throw new JOSENotSupported('ECDH with the provided key is not allowed or not supported by your javascript runtime');\n            const epk = await importJWK(joseHeader.epk, alg);\n            let partyUInfo;\n            let partyVInfo;\n            if (joseHeader.apu !== undefined) {\n                if (typeof joseHeader.apu !== 'string')\n                    throw new JWEInvalid(`JOSE Header \"apu\" (Agreement PartyUInfo) invalid`);\n                try {\n                    partyUInfo = base64url(joseHeader.apu);\n                }\n                catch (_a) {\n                    throw new JWEInvalid('Failed to base64url decode the apu');\n                }\n            }\n            if (joseHeader.apv !== undefined) {\n                if (typeof joseHeader.apv !== 'string')\n                    throw new JWEInvalid(`JOSE Header \"apv\" (Agreement PartyVInfo) invalid`);\n                try {\n                    partyVInfo = base64url(joseHeader.apv);\n                }\n                catch (_b) {\n                    throw new JWEInvalid('Failed to base64url decode the apv');\n                }\n            }\n            const sharedSecret = await ECDH.deriveKey(epk, key, alg === 'ECDH-ES' ? joseHeader.enc : alg, alg === 'ECDH-ES' ? cekLength(joseHeader.enc) : parseInt(alg.slice(-5, -2), 10), partyUInfo, partyVInfo);\n            if (alg === 'ECDH-ES')\n                return sharedSecret;\n            if (encryptedKey === undefined)\n                throw new JWEInvalid('JWE Encrypted Key missing');\n            return aesKw(alg.slice(-6), sharedSecret, encryptedKey);\n        }\n        case 'RSA1_5':\n        case 'RSA-OAEP':\n        case 'RSA-OAEP-256':\n        case 'RSA-OAEP-384':\n        case 'RSA-OAEP-512': {\n            if (encryptedKey === undefined)\n                throw new JWEInvalid('JWE Encrypted Key missing');\n            return rsaEs(alg, key, encryptedKey);\n        }\n        case 'PBES2-HS256+A128KW':\n        case 'PBES2-HS384+A192KW':\n        case 'PBES2-HS512+A256KW': {\n            if (encryptedKey === undefined)\n                throw new JWEInvalid('JWE Encrypted Key missing');\n            if (typeof joseHeader.p2c !== 'number')\n                throw new JWEInvalid(`JOSE Header \"p2c\" (PBES2 Count) missing or invalid`);\n            const p2cLimit = (options === null || options === void 0 ? void 0 : options.maxPBES2Count) || 10000;\n            if (joseHeader.p2c > p2cLimit)\n                throw new JWEInvalid(`JOSE Header \"p2c\" (PBES2 Count) out is of acceptable bounds`);\n            if (typeof joseHeader.p2s !== 'string')\n                throw new JWEInvalid(`JOSE Header \"p2s\" (PBES2 Salt) missing or invalid`);\n            let p2s;\n            try {\n                p2s = base64url(joseHeader.p2s);\n            }\n            catch (_c) {\n                throw new JWEInvalid('Failed to base64url decode the p2s');\n            }\n            return pbes2Kw(alg, key, encryptedKey, joseHeader.p2c, p2s);\n        }\n        case 'A128KW':\n        case 'A192KW':\n        case 'A256KW': {\n            if (encryptedKey === undefined)\n                throw new JWEInvalid('JWE Encrypted Key missing');\n            return aesKw(alg, key, encryptedKey);\n        }\n        case 'A128GCMKW':\n        case 'A192GCMKW':\n        case 'A256GCMKW': {\n            if (encryptedKey === undefined)\n                throw new JWEInvalid('JWE Encrypted Key missing');\n            if (typeof joseHeader.iv !== 'string')\n                throw new JWEInvalid(`JOSE Header \"iv\" (Initialization Vector) missing or invalid`);\n            if (typeof joseHeader.tag !== 'string')\n                throw new JWEInvalid(`JOSE Header \"tag\" (Authentication Tag) missing or invalid`);\n            let iv;\n            try {\n                iv = base64url(joseHeader.iv);\n            }\n            catch (_d) {\n                throw new JWEInvalid('Failed to base64url decode the iv');\n            }\n            let tag;\n            try {\n                tag = base64url(joseHeader.tag);\n            }\n            catch (_e) {\n                throw new JWEInvalid('Failed to base64url decode the tag');\n            }\n            return aesGcmKw(alg, key, encryptedKey, iv, tag);\n        }\n        default: {\n            throw new JOSENotSupported('Invalid or unsupported \"alg\" (JWE Algorithm) header value');\n        }\n    }\n}\nexport default decryptKeyManagement;\n", "import { JOSENotSupported } from '../util/errors.js';\nfunction validateCrit(Err, recognizedDefault, recognizedOption, protectedHeader, joseHeader) {\n    if (joseHeader.crit !== undefined && protectedHeader.crit === undefined) {\n        throw new Err('\"crit\" (Critical) Header Parameter MUST be integrity protected');\n    }\n    if (!protectedHeader || protectedHeader.crit === undefined) {\n        return new Set();\n    }\n    if (!Array.isArray(protectedHeader.crit) ||\n        protectedHeader.crit.length === 0 ||\n        protectedHeader.crit.some((input) => typeof input !== 'string' || input.length === 0)) {\n        throw new Err('\"crit\" (Critical) Header Parameter MUST be an array of non-empty strings when present');\n    }\n    let recognized;\n    if (recognizedOption !== undefined) {\n        recognized = new Map([...Object.entries(recognizedOption), ...recognizedDefault.entries()]);\n    }\n    else {\n        recognized = recognizedDefault;\n    }\n    for (const parameter of protectedHeader.crit) {\n        if (!recognized.has(parameter)) {\n            throw new JOSENotSupported(`Extension Header Parameter \"${parameter}\" is not recognized`);\n        }\n        if (joseHeader[parameter] === undefined) {\n            throw new Err(`Extension Header Parameter \"${parameter}\" is missing`);\n        }\n        else if (recognized.get(parameter) && protectedHeader[parameter] === undefined) {\n            throw new Err(`Extension Header Parameter \"${parameter}\" MUST be integrity protected`);\n        }\n    }\n    return new Set(protectedHeader.crit);\n}\nexport default validateCrit;\n", "const validateAlgorithms = (option, algorithms) => {\n    if (algorithms !== undefined &&\n        (!Array.isArray(algorithms) || algorithms.some((s) => typeof s !== 'string'))) {\n        throw new TypeError(`\"${option}\" option must be an array of strings`);\n    }\n    if (!algorithms) {\n        return undefined;\n    }\n    return new Set(algorithms);\n};\nexport default validateAlgorithms;\n", "import { decode as base64url } from '../../runtime/base64url.js';\nimport decrypt from '../../runtime/decrypt.js';\nimport { inflate } from '../../runtime/zlib.js';\nimport { JOSEAlgNotAllowed, JOSENotSupported, JWEInvalid } from '../../util/errors.js';\nimport isDisjoint from '../../lib/is_disjoint.js';\nimport isObject from '../../lib/is_object.js';\nimport decryptKeyManagement from '../../lib/decrypt_key_management.js';\nimport { encoder, decoder, concat } from '../../lib/buffer_utils.js';\nimport generateCek from '../../lib/cek.js';\nimport validateCrit from '../../lib/validate_crit.js';\nimport validateAlgorithms from '../../lib/validate_algorithms.js';\nexport async function flattenedDecrypt(jwe, key, options) {\n    var _a;\n    if (!isObject(jwe)) {\n        throw new JWEInvalid('Flattened JWE must be an object');\n    }\n    if (jwe.protected === undefined && jwe.header === undefined && jwe.unprotected === undefined) {\n        throw new JWEInvalid('JOSE Header missing');\n    }\n    if (typeof jwe.iv !== 'string') {\n        throw new JWEInvalid('JWE Initialization Vector missing or incorrect type');\n    }\n    if (typeof jwe.ciphertext !== 'string') {\n        throw new JWEInvalid('JWE Ciphertext missing or incorrect type');\n    }\n    if (typeof jwe.tag !== 'string') {\n        throw new JWEInvalid('JWE Authentication Tag missing or incorrect type');\n    }\n    if (jwe.protected !== undefined && typeof jwe.protected !== 'string') {\n        throw new JWEInvalid('JWE Protected Header incorrect type');\n    }\n    if (jwe.encrypted_key !== undefined && typeof jwe.encrypted_key !== 'string') {\n        throw new JWEInvalid('JWE Encrypted Key incorrect type');\n    }\n    if (jwe.aad !== undefined && typeof jwe.aad !== 'string') {\n        throw new JWEInvalid('JWE AAD incorrect type');\n    }\n    if (jwe.header !== undefined && !isObject(jwe.header)) {\n        throw new JWEInvalid('JWE Shared Unprotected Header incorrect type');\n    }\n    if (jwe.unprotected !== undefined && !isObject(jwe.unprotected)) {\n        throw new JWEInvalid('JWE Per-Recipient Unprotected Header incorrect type');\n    }\n    let parsedProt;\n    if (jwe.protected) {\n        try {\n            const protectedHeader = base64url(jwe.protected);\n            parsedProt = JSON.parse(decoder.decode(protectedHeader));\n        }\n        catch (_b) {\n            throw new JWEInvalid('JWE Protected Header is invalid');\n        }\n    }\n    if (!isDisjoint(parsedProt, jwe.header, jwe.unprotected)) {\n        throw new JWEInvalid('JWE Protected, JWE Unprotected Header, and JWE Per-Recipient Unprotected Header Parameter names must be disjoint');\n    }\n    const joseHeader = {\n        ...parsedProt,\n        ...jwe.header,\n        ...jwe.unprotected,\n    };\n    validateCrit(JWEInvalid, new Map(), options === null || options === void 0 ? void 0 : options.crit, parsedProt, joseHeader);\n    if (joseHeader.zip !== undefined) {\n        if (!parsedProt || !parsedProt.zip) {\n            throw new JWEInvalid('JWE \"zip\" (Compression Algorithm) Header MUST be integrity protected');\n        }\n        if (joseHeader.zip !== 'DEF') {\n            throw new JOSENotSupported('Unsupported JWE \"zip\" (Compression Algorithm) Header Parameter value');\n        }\n    }\n    const { alg, enc } = joseHeader;\n    if (typeof alg !== 'string' || !alg) {\n        throw new JWEInvalid('missing JWE Algorithm (alg) in JWE Header');\n    }\n    if (typeof enc !== 'string' || !enc) {\n        throw new JWEInvalid('missing JWE Encryption Algorithm (enc) in JWE Header');\n    }\n    const keyManagementAlgorithms = options && validateAlgorithms('keyManagementAlgorithms', options.keyManagementAlgorithms);\n    const contentEncryptionAlgorithms = options &&\n        validateAlgorithms('contentEncryptionAlgorithms', options.contentEncryptionAlgorithms);\n    if (keyManagementAlgorithms && !keyManagementAlgorithms.has(alg)) {\n        throw new JOSEAlgNotAllowed('\"alg\" (Algorithm) Header Parameter not allowed');\n    }\n    if (contentEncryptionAlgorithms && !contentEncryptionAlgorithms.has(enc)) {\n        throw new JOSEAlgNotAllowed('\"enc\" (Encryption Algorithm) Header Parameter not allowed');\n    }\n    let encryptedKey;\n    if (jwe.encrypted_key !== undefined) {\n        try {\n            encryptedKey = base64url(jwe.encrypted_key);\n        }\n        catch (_c) {\n            throw new JWEInvalid('Failed to base64url decode the encrypted_key');\n        }\n    }\n    let resolvedKey = false;\n    if (typeof key === 'function') {\n        key = await key(parsedProt, jwe);\n        resolvedKey = true;\n    }\n    let cek;\n    try {\n        cek = await decryptKeyManagement(alg, key, encryptedKey, joseHeader, options);\n    }\n    catch (err) {\n        if (err instanceof TypeError || err instanceof JWEInvalid || err instanceof JOSENotSupported) {\n            throw err;\n        }\n        cek = generateCek(enc);\n    }\n    let iv;\n    let tag;\n    try {\n        iv = base64url(jwe.iv);\n    }\n    catch (_d) {\n        throw new JWEInvalid('Failed to base64url decode the iv');\n    }\n    try {\n        tag = base64url(jwe.tag);\n    }\n    catch (_e) {\n        throw new JWEInvalid('Failed to base64url decode the tag');\n    }\n    const protectedHeader = encoder.encode((_a = jwe.protected) !== null && _a !== void 0 ? _a : '');\n    let additionalData;\n    if (jwe.aad !== undefined) {\n        additionalData = concat(protectedHeader, encoder.encode('.'), encoder.encode(jwe.aad));\n    }\n    else {\n        additionalData = protectedHeader;\n    }\n    let ciphertext;\n    try {\n        ciphertext = base64url(jwe.ciphertext);\n    }\n    catch (_f) {\n        throw new JWEInvalid('Failed to base64url decode the ciphertext');\n    }\n    let plaintext = await decrypt(enc, cek, ciphertext, iv, tag, additionalData);\n    if (joseHeader.zip === 'DEF') {\n        plaintext = await ((options === null || options === void 0 ? void 0 : options.inflateRaw) || inflate)(plaintext);\n    }\n    const result = { plaintext };\n    if (jwe.protected !== undefined) {\n        result.protectedHeader = parsedProt;\n    }\n    if (jwe.aad !== undefined) {\n        try {\n            result.additionalAuthenticatedData = base64url(jwe.aad);\n        }\n        catch (_g) {\n            throw new JWEInvalid('Failed to base64url decode the aad');\n        }\n    }\n    if (jwe.unprotected !== undefined) {\n        result.sharedUnprotectedHeader = jwe.unprotected;\n    }\n    if (jwe.header !== undefined) {\n        result.unprotectedHeader = jwe.header;\n    }\n    if (resolvedKey) {\n        return { ...result, key };\n    }\n    return result;\n}\n", "import { flattenedDecrypt } from '../flattened/decrypt.js';\nimport { JWEInvalid } from '../../util/errors.js';\nimport { decoder } from '../../lib/buffer_utils.js';\nexport async function compactDecrypt(jwe, key, options) {\n    if (jwe instanceof Uint8Array) {\n        jwe = decoder.decode(jwe);\n    }\n    if (typeof jwe !== 'string') {\n        throw new JWEInvalid('Compact JWE must be a string or Uint8Array');\n    }\n    const { 0: protectedHeader, 1: encryptedKey, 2: iv, 3: ciphertext, 4: tag, length, } = jwe.split('.');\n    if (length !== 5) {\n        throw new JWEInvalid('Invalid Compact JWE');\n    }\n    const decrypted = await flattenedDecrypt({\n        ciphertext,\n        iv: (iv || undefined),\n        protected: protectedHeader || undefined,\n        tag: (tag || undefined),\n        encrypted_key: encryptedKey || undefined,\n    }, key, options);\n    const result = { plaintext: decrypted.plaintext, protectedHeader: decrypted.protectedHeader };\n    if (typeof key === 'function') {\n        return { ...result, key: decrypted.key };\n    }\n    return result;\n}\n", "import { flattenedDecrypt } from '../flattened/decrypt.js';\nimport { JWEDecryptionFailed, JWEInvalid } from '../../util/errors.js';\nimport isObject from '../../lib/is_object.js';\nexport async function generalDecrypt(jwe, key, options) {\n    if (!isObject(jwe)) {\n        throw new JWEInvalid('General JWE must be an object');\n    }\n    if (!Array.isArray(jwe.recipients) || !jwe.recipients.every(isObject)) {\n        throw new JWEInvalid('JWE Recipients missing or incorrect type');\n    }\n    if (!jwe.recipients.length) {\n        throw new JWEInvalid('JWE Recipients has no members');\n    }\n    for (const recipient of jwe.recipients) {\n        try {\n            return await flattenedDecrypt({\n                aad: jwe.aad,\n                ciphertext: jwe.ciphertext,\n                encrypted_key: recipient.encrypted_key,\n                header: recipient.header,\n                iv: jwe.iv,\n                protected: jwe.protected,\n                tag: jwe.tag,\n                unprotected: jwe.unprotected,\n            }, key, options);\n        }\n        catch (_a) {\n        }\n    }\n    throw new JWEDecryptionFailed();\n}\n", "import crypto, { isCryptoKey } from './webcrypto.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { encode as base64url } from './base64url.js';\nimport { types } from './is_key_like.js';\nconst keyToJWK = async (key) => {\n    if (key instanceof Uint8Array) {\n        return {\n            kty: 'oct',\n            k: base64url(key),\n        };\n    }\n    if (!isCryptoKey(key)) {\n        throw new TypeError(invalidKeyInput(key, ...types, 'Uint8Array'));\n    }\n    if (!key.extractable) {\n        throw new TypeError('non-extractable CryptoKey cannot be exported as a JWK');\n    }\n    const { ext, key_ops, alg, use, ...jwk } = await crypto.subtle.exportKey('jwk', key);\n    return jwk;\n};\nexport default keyToJWK;\n", "import { toSPKI as exportPublic } from '../runtime/asn1.js';\nimport { toPKCS8 as exportPrivate } from '../runtime/asn1.js';\nimport keyToJWK from '../runtime/key_to_jwk.js';\nexport async function exportSPKI(key) {\n    return exportPublic(key);\n}\nexport async function exportPKCS8(key) {\n    return exportPrivate(key);\n}\nexport async function exportJWK(key) {\n    return keyToJWK(key);\n}\n", "import { wrap as aesKw } from '../runtime/aeskw.js';\nimport * as ECDH from '../runtime/ecdhes.js';\nimport { encrypt as pbes2Kw } from '../runtime/pbes2kw.js';\nimport { encrypt as rsaEs } from '../runtime/rsaes.js';\nimport { encode as base64url } from '../runtime/base64url.js';\nimport generateCek, { bitLength as cekLength } from '../lib/cek.js';\nimport { JOSENotSupported } from '../util/errors.js';\nimport { exportJWK } from '../key/export.js';\nimport checkKeyType from './check_key_type.js';\nimport { wrap as aesGcmKw } from './aesgcmkw.js';\nasync function encryptKeyManagement(alg, enc, key, providedCek, providedParameters = {}) {\n    let encryptedKey;\n    let parameters;\n    let cek;\n    checkKeyType(alg, key, 'encrypt');\n    switch (alg) {\n        case 'dir': {\n            cek = key;\n            break;\n        }\n        case 'ECDH-ES':\n        case 'ECDH-ES+A128KW':\n        case 'ECDH-ES+A192KW':\n        case 'ECDH-ES+A256KW': {\n            if (!ECDH.ecdhAllowed(key)) {\n                throw new JOSENotSupported('ECDH with the provided key is not allowed or not supported by your javascript runtime');\n            }\n            const { apu, apv } = providedParameters;\n            let { epk: ephemeralKey } = providedParameters;\n            ephemeralKey || (ephemeralKey = (await ECDH.generateEpk(key)).privateKey);\n            const { x, y, crv, kty } = await exportJWK(ephemeralKey);\n            const sharedSecret = await ECDH.deriveKey(key, ephemeralKey, alg === 'ECDH-ES' ? enc : alg, alg === 'ECDH-ES' ? cekLength(enc) : parseInt(alg.slice(-5, -2), 10), apu, apv);\n            parameters = { epk: { x, crv, kty } };\n            if (kty === 'EC')\n                parameters.epk.y = y;\n            if (apu)\n                parameters.apu = base64url(apu);\n            if (apv)\n                parameters.apv = base64url(apv);\n            if (alg === 'ECDH-ES') {\n                cek = sharedSecret;\n                break;\n            }\n            cek = providedCek || generateCek(enc);\n            const kwAlg = alg.slice(-6);\n            encryptedKey = await aesKw(kwAlg, sharedSecret, cek);\n            break;\n        }\n        case 'RSA1_5':\n        case 'RSA-OAEP':\n        case 'RSA-OAEP-256':\n        case 'RSA-OAEP-384':\n        case 'RSA-OAEP-512': {\n            cek = providedCek || generateCek(enc);\n            encryptedKey = await rsaEs(alg, key, cek);\n            break;\n        }\n        case 'PBES2-HS256+A128KW':\n        case 'PBES2-HS384+A192KW':\n        case 'PBES2-HS512+A256KW': {\n            cek = providedCek || generateCek(enc);\n            const { p2c, p2s } = providedParameters;\n            ({ encryptedKey, ...parameters } = await pbes2Kw(alg, key, cek, p2c, p2s));\n            break;\n        }\n        case 'A128KW':\n        case 'A192KW':\n        case 'A256KW': {\n            cek = providedCek || generateCek(enc);\n            encryptedKey = await aesKw(alg, key, cek);\n            break;\n        }\n        case 'A128GCMKW':\n        case 'A192GCMKW':\n        case 'A256GCMKW': {\n            cek = providedCek || generateCek(enc);\n            const { iv } = providedParameters;\n            ({ encryptedKey, ...parameters } = await aesGcmKw(alg, key, cek, iv));\n            break;\n        }\n        default: {\n            throw new JOSENotSupported('Invalid or unsupported \"alg\" (JWE Algorithm) header value');\n        }\n    }\n    return { cek, encryptedKey, parameters };\n}\nexport default encryptKeyManagement;\n", "import { encode as base64url } from '../../runtime/base64url.js';\nimport encrypt from '../../runtime/encrypt.js';\nimport { deflate } from '../../runtime/zlib.js';\nimport generateIv from '../../lib/iv.js';\nimport encryptKeyManagement from '../../lib/encrypt_key_management.js';\nimport { JOSENotSupported, JWEInvalid } from '../../util/errors.js';\nimport isDisjoint from '../../lib/is_disjoint.js';\nimport { encoder, decoder, concat } from '../../lib/buffer_utils.js';\nimport validateCrit from '../../lib/validate_crit.js';\nexport const unprotected = Symbol();\nexport class FlattenedEncrypt {\n    constructor(plaintext) {\n        if (!(plaintext instanceof Uint8Array)) {\n            throw new TypeError('plaintext must be an instance of Uint8Array');\n        }\n        this._plaintext = plaintext;\n    }\n    setKeyManagementParameters(parameters) {\n        if (this._keyManagementParameters) {\n            throw new TypeError('setKeyManagementParameters can only be called once');\n        }\n        this._keyManagementParameters = parameters;\n        return this;\n    }\n    setProtectedHeader(protectedHeader) {\n        if (this._protectedHeader) {\n            throw new TypeError('setProtectedHeader can only be called once');\n        }\n        this._protectedHeader = protectedHeader;\n        return this;\n    }\n    setSharedUnprotectedHeader(sharedUnprotectedHeader) {\n        if (this._sharedUnprotectedHeader) {\n            throw new TypeError('setSharedUnprotectedHeader can only be called once');\n        }\n        this._sharedUnprotectedHeader = sharedUnprotectedHeader;\n        return this;\n    }\n    setUnprotectedHeader(unprotectedHeader) {\n        if (this._unprotectedHeader) {\n            throw new TypeError('setUnprotectedHeader can only be called once');\n        }\n        this._unprotectedHeader = unprotectedHeader;\n        return this;\n    }\n    setAdditionalAuthenticatedData(aad) {\n        this._aad = aad;\n        return this;\n    }\n    setContentEncryptionKey(cek) {\n        if (this._cek) {\n            throw new TypeError('setContentEncryptionKey can only be called once');\n        }\n        this._cek = cek;\n        return this;\n    }\n    setInitializationVector(iv) {\n        if (this._iv) {\n            throw new TypeError('setInitializationVector can only be called once');\n        }\n        this._iv = iv;\n        return this;\n    }\n    async encrypt(key, options) {\n        if (!this._protectedHeader && !this._unprotectedHeader && !this._sharedUnprotectedHeader) {\n            throw new JWEInvalid('either setProtectedHeader, setUnprotectedHeader, or sharedUnprotectedHeader must be called before #encrypt()');\n        }\n        if (!isDisjoint(this._protectedHeader, this._unprotectedHeader, this._sharedUnprotectedHeader)) {\n            throw new JWEInvalid('JWE Protected, JWE Shared Unprotected and JWE Per-Recipient Header Parameter names must be disjoint');\n        }\n        const joseHeader = {\n            ...this._protectedHeader,\n            ...this._unprotectedHeader,\n            ...this._sharedUnprotectedHeader,\n        };\n        validateCrit(JWEInvalid, new Map(), options === null || options === void 0 ? void 0 : options.crit, this._protectedHeader, joseHeader);\n        if (joseHeader.zip !== undefined) {\n            if (!this._protectedHeader || !this._protectedHeader.zip) {\n                throw new JWEInvalid('JWE \"zip\" (Compression Algorithm) Header MUST be integrity protected');\n            }\n            if (joseHeader.zip !== 'DEF') {\n                throw new JOSENotSupported('Unsupported JWE \"zip\" (Compression Algorithm) Header Parameter value');\n            }\n        }\n        const { alg, enc } = joseHeader;\n        if (typeof alg !== 'string' || !alg) {\n            throw new JWEInvalid('JWE \"alg\" (Algorithm) Header Parameter missing or invalid');\n        }\n        if (typeof enc !== 'string' || !enc) {\n            throw new JWEInvalid('JWE \"enc\" (Encryption Algorithm) Header Parameter missing or invalid');\n        }\n        let encryptedKey;\n        if (alg === 'dir') {\n            if (this._cek) {\n                throw new TypeError('setContentEncryptionKey cannot be called when using Direct Encryption');\n            }\n        }\n        else if (alg === 'ECDH-ES') {\n            if (this._cek) {\n                throw new TypeError('setContentEncryptionKey cannot be called when using Direct Key Agreement');\n            }\n        }\n        let cek;\n        {\n            let parameters;\n            ({ cek, encryptedKey, parameters } = await encryptKeyManagement(alg, enc, key, this._cek, this._keyManagementParameters));\n            if (parameters) {\n                if (options && unprotected in options) {\n                    if (!this._unprotectedHeader) {\n                        this.setUnprotectedHeader(parameters);\n                    }\n                    else {\n                        this._unprotectedHeader = { ...this._unprotectedHeader, ...parameters };\n                    }\n                }\n                else {\n                    if (!this._protectedHeader) {\n                        this.setProtectedHeader(parameters);\n                    }\n                    else {\n                        this._protectedHeader = { ...this._protectedHeader, ...parameters };\n                    }\n                }\n            }\n        }\n        this._iv || (this._iv = generateIv(enc));\n        let additionalData;\n        let protectedHeader;\n        let aadMember;\n        if (this._protectedHeader) {\n            protectedHeader = encoder.encode(base64url(JSON.stringify(this._protectedHeader)));\n        }\n        else {\n            protectedHeader = encoder.encode('');\n        }\n        if (this._aad) {\n            aadMember = base64url(this._aad);\n            additionalData = concat(protectedHeader, encoder.encode('.'), encoder.encode(aadMember));\n        }\n        else {\n            additionalData = protectedHeader;\n        }\n        let ciphertext;\n        let tag;\n        if (joseHeader.zip === 'DEF') {\n            const deflated = await ((options === null || options === void 0 ? void 0 : options.deflateRaw) || deflate)(this._plaintext);\n            ({ ciphertext, tag } = await encrypt(enc, deflated, cek, this._iv, additionalData));\n        }\n        else {\n            ;\n            ({ ciphertext, tag } = await encrypt(enc, this._plaintext, cek, this._iv, additionalData));\n        }\n        const jwe = {\n            ciphertext: base64url(ciphertext),\n            iv: base64url(this._iv),\n            tag: base64url(tag),\n        };\n        if (encryptedKey) {\n            jwe.encrypted_key = base64url(encryptedKey);\n        }\n        if (aadMember) {\n            jwe.aad = aadMember;\n        }\n        if (this._protectedHeader) {\n            jwe.protected = decoder.decode(protectedHeader);\n        }\n        if (this._sharedUnprotectedHeader) {\n            jwe.unprotected = this._sharedUnprotectedHeader;\n        }\n        if (this._unprotectedHeader) {\n            jwe.header = this._unprotectedHeader;\n        }\n        return jwe;\n    }\n}\n", "import { FlattenedEncrypt, unprotected } from '../flattened/encrypt.js';\nimport { JWEInvalid } from '../../util/errors.js';\nimport generateCek from '../../lib/cek.js';\nimport isDisjoint from '../../lib/is_disjoint.js';\nimport encryptKeyManagement from '../../lib/encrypt_key_management.js';\nimport { encode as base64url } from '../../runtime/base64url.js';\nimport validateCrit from '../../lib/validate_crit.js';\nclass IndividualRecipient {\n    constructor(enc, key, options) {\n        this.parent = enc;\n        this.key = key;\n        this.options = options;\n    }\n    setUnprotectedHeader(unprotectedHeader) {\n        if (this.unprotectedHeader) {\n            throw new TypeError('setUnprotectedHeader can only be called once');\n        }\n        this.unprotectedHeader = unprotectedHeader;\n        return this;\n    }\n    addRecipient(...args) {\n        return this.parent.addRecipient(...args);\n    }\n    encrypt(...args) {\n        return this.parent.encrypt(...args);\n    }\n    done() {\n        return this.parent;\n    }\n}\nexport class GeneralEncrypt {\n    constructor(plaintext) {\n        this._recipients = [];\n        this._plaintext = plaintext;\n    }\n    addRecipient(key, options) {\n        const recipient = new IndividualRecipient(this, key, { crit: options === null || options === void 0 ? void 0 : options.crit });\n        this._recipients.push(recipient);\n        return recipient;\n    }\n    setProtectedHeader(protectedHeader) {\n        if (this._protectedHeader) {\n            throw new TypeError('setProtectedHeader can only be called once');\n        }\n        this._protectedHeader = protectedHeader;\n        return this;\n    }\n    setSharedUnprotectedHeader(sharedUnprotectedHeader) {\n        if (this._unprotectedHeader) {\n            throw new TypeError('setSharedUnprotectedHeader can only be called once');\n        }\n        this._unprotectedHeader = sharedUnprotectedHeader;\n        return this;\n    }\n    setAdditionalAuthenticatedData(aad) {\n        this._aad = aad;\n        return this;\n    }\n    async encrypt(options) {\n        var _a, _b, _c;\n        if (!this._recipients.length) {\n            throw new JWEInvalid('at least one recipient must be added');\n        }\n        options = { deflateRaw: options === null || options === void 0 ? void 0 : options.deflateRaw };\n        if (this._recipients.length === 1) {\n            const [recipient] = this._recipients;\n            const flattened = await new FlattenedEncrypt(this._plaintext)\n                .setAdditionalAuthenticatedData(this._aad)\n                .setProtectedHeader(this._protectedHeader)\n                .setSharedUnprotectedHeader(this._unprotectedHeader)\n                .setUnprotectedHeader(recipient.unprotectedHeader)\n                .encrypt(recipient.key, { ...recipient.options, ...options });\n            let jwe = {\n                ciphertext: flattened.ciphertext,\n                iv: flattened.iv,\n                recipients: [{}],\n                tag: flattened.tag,\n            };\n            if (flattened.aad)\n                jwe.aad = flattened.aad;\n            if (flattened.protected)\n                jwe.protected = flattened.protected;\n            if (flattened.unprotected)\n                jwe.unprotected = flattened.unprotected;\n            if (flattened.encrypted_key)\n                jwe.recipients[0].encrypted_key = flattened.encrypted_key;\n            if (flattened.header)\n                jwe.recipients[0].header = flattened.header;\n            return jwe;\n        }\n        let enc;\n        for (let i = 0; i < this._recipients.length; i++) {\n            const recipient = this._recipients[i];\n            if (!isDisjoint(this._protectedHeader, this._unprotectedHeader, recipient.unprotectedHeader)) {\n                throw new JWEInvalid('JWE Protected, JWE Shared Unprotected and JWE Per-Recipient Header Parameter names must be disjoint');\n            }\n            const joseHeader = {\n                ...this._protectedHeader,\n                ...this._unprotectedHeader,\n                ...recipient.unprotectedHeader,\n            };\n            const { alg } = joseHeader;\n            if (typeof alg !== 'string' || !alg) {\n                throw new JWEInvalid('JWE \"alg\" (Algorithm) Header Parameter missing or invalid');\n            }\n            if (alg === 'dir' || alg === 'ECDH-ES') {\n                throw new JWEInvalid('\"dir\" and \"ECDH-ES\" alg may only be used with a single recipient');\n            }\n            if (typeof joseHeader.enc !== 'string' || !joseHeader.enc) {\n                throw new JWEInvalid('JWE \"enc\" (Encryption Algorithm) Header Parameter missing or invalid');\n            }\n            if (!enc) {\n                enc = joseHeader.enc;\n            }\n            else if (enc !== joseHeader.enc) {\n                throw new JWEInvalid('JWE \"enc\" (Encryption Algorithm) Header Parameter must be the same for all recipients');\n            }\n            validateCrit(JWEInvalid, new Map(), recipient.options.crit, this._protectedHeader, joseHeader);\n            if (joseHeader.zip !== undefined) {\n                if (!this._protectedHeader || !this._protectedHeader.zip) {\n                    throw new JWEInvalid('JWE \"zip\" (Compression Algorithm) Header MUST be integrity protected');\n                }\n            }\n        }\n        const cek = generateCek(enc);\n        let jwe = {\n            ciphertext: '',\n            iv: '',\n            recipients: [],\n            tag: '',\n        };\n        for (let i = 0; i < this._recipients.length; i++) {\n            const recipient = this._recipients[i];\n            const target = {};\n            jwe.recipients.push(target);\n            const joseHeader = {\n                ...this._protectedHeader,\n                ...this._unprotectedHeader,\n                ...recipient.unprotectedHeader,\n            };\n            const p2c = joseHeader.alg.startsWith('PBES2') ? 2048 + i : undefined;\n            if (i === 0) {\n                const flattened = await new FlattenedEncrypt(this._plaintext)\n                    .setAdditionalAuthenticatedData(this._aad)\n                    .setContentEncryptionKey(cek)\n                    .setProtectedHeader(this._protectedHeader)\n                    .setSharedUnprotectedHeader(this._unprotectedHeader)\n                    .setUnprotectedHeader(recipient.unprotectedHeader)\n                    .setKeyManagementParameters({ p2c })\n                    .encrypt(recipient.key, {\n                    ...recipient.options,\n                    ...options,\n                    [unprotected]: true,\n                });\n                jwe.ciphertext = flattened.ciphertext;\n                jwe.iv = flattened.iv;\n                jwe.tag = flattened.tag;\n                if (flattened.aad)\n                    jwe.aad = flattened.aad;\n                if (flattened.protected)\n                    jwe.protected = flattened.protected;\n                if (flattened.unprotected)\n                    jwe.unprotected = flattened.unprotected;\n                target.encrypted_key = flattened.encrypted_key;\n                if (flattened.header)\n                    target.header = flattened.header;\n                continue;\n            }\n            const { encryptedKey, parameters } = await encryptKeyManagement(((_a = recipient.unprotectedHeader) === null || _a === void 0 ? void 0 : _a.alg) ||\n                ((_b = this._protectedHeader) === null || _b === void 0 ? void 0 : _b.alg) ||\n                ((_c = this._unprotectedHeader) === null || _c === void 0 ? void 0 : _c.alg), enc, recipient.key, cek, { p2c });\n            target.encrypted_key = base64url(encryptedKey);\n            if (recipient.unprotectedHeader || parameters)\n                target.header = { ...recipient.unprotectedHeader, ...parameters };\n        }\n        return jwe;\n    }\n}\n", "import { JOSENotSupported } from '../util/errors.js';\nexport default function subtleDsa(alg, algorithm) {\n    const hash = `SHA-${alg.slice(-3)}`;\n    switch (alg) {\n        case 'HS256':\n        case 'HS384':\n        case 'HS512':\n            return { hash, name: 'HMAC' };\n        case 'PS256':\n        case 'PS384':\n        case 'PS512':\n            return { hash, name: 'RSA-PSS', saltLength: alg.slice(-3) >> 3 };\n        case 'RS256':\n        case 'RS384':\n        case 'RS512':\n            return { hash, name: 'RSASSA-PKCS1-v1_5' };\n        case 'ES256':\n        case 'ES384':\n        case 'ES512':\n            return { hash, name: 'ECDSA', namedCurve: algorithm.namedCurve };\n        case 'EdDSA':\n            return { name: algorithm.name };\n        default:\n            throw new JOSENotSupported(`alg ${alg} is not supported either by JOSE or your javascript runtime`);\n    }\n}\n", "import crypto, { isCryptoKey } from './webcrypto.js';\nimport { checkSigCryptoKey } from '../lib/crypto_key.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { types } from './is_key_like.js';\nexport default function getCryptoKey(alg, key, usage) {\n    if (isCryptoKey(key)) {\n        checkSigCryptoKey(key, alg, usage);\n        return key;\n    }\n    if (key instanceof Uint8Array) {\n        if (!alg.startsWith('HS')) {\n            throw new TypeError(invalidKeyInput(key, ...types));\n        }\n        return crypto.subtle.importKey('raw', key, { hash: `SHA-${alg.slice(-3)}`, name: 'HMAC' }, false, [usage]);\n    }\n    throw new TypeError(invalidKeyInput(key, ...types, 'Uint8Array'));\n}\n", "import subtleAlgorithm from './subtle_dsa.js';\nimport crypto from './webcrypto.js';\nimport checkKeyLength from './check_key_length.js';\nimport getVerifyKey from './get_sign_verify_key.js';\nconst verify = async (alg, key, signature, data) => {\n    const cryptoKey = await getVerifyKey(alg, key, 'verify');\n    checkKeyLength(alg, cryptoKey);\n    const algorithm = subtleAlgorithm(alg, cryptoKey.algorithm);\n    try {\n        return await crypto.subtle.verify(algorithm, cryptoKey, signature, data);\n    }\n    catch (_a) {\n        return false;\n    }\n};\nexport default verify;\n", "import { decode as base64url } from '../../runtime/base64url.js';\nimport verify from '../../runtime/verify.js';\nimport { JOSEAlgNotAllowed, JWSInvalid, JWSSignatureVerificationFailed } from '../../util/errors.js';\nimport { concat, encoder, decoder } from '../../lib/buffer_utils.js';\nimport isDisjoint from '../../lib/is_disjoint.js';\nimport isObject from '../../lib/is_object.js';\nimport checkKeyType from '../../lib/check_key_type.js';\nimport validateCrit from '../../lib/validate_crit.js';\nimport validateAlgorithms from '../../lib/validate_algorithms.js';\nexport async function flattenedVerify(jws, key, options) {\n    var _a;\n    if (!isObject(jws)) {\n        throw new JWSInvalid('Flattened JWS must be an object');\n    }\n    if (jws.protected === undefined && jws.header === undefined) {\n        throw new JWSInvalid('Flattened JWS must have either of the \"protected\" or \"header\" members');\n    }\n    if (jws.protected !== undefined && typeof jws.protected !== 'string') {\n        throw new JWSInvalid('JWS Protected Header incorrect type');\n    }\n    if (jws.payload === undefined) {\n        throw new JWSInvalid('JWS Payload missing');\n    }\n    if (typeof jws.signature !== 'string') {\n        throw new JWSInvalid('JWS Signature missing or incorrect type');\n    }\n    if (jws.header !== undefined && !isObject(jws.header)) {\n        throw new JWSInvalid('JWS Unprotected Header incorrect type');\n    }\n    let parsedProt = {};\n    if (jws.protected) {\n        try {\n            const protectedHeader = base64url(jws.protected);\n            parsedProt = JSON.parse(decoder.decode(protectedHeader));\n        }\n        catch (_b) {\n            throw new JWSInvalid('JWS Protected Header is invalid');\n        }\n    }\n    if (!isDisjoint(parsedProt, jws.header)) {\n        throw new JWSInvalid('JWS Protected and JWS Unprotected Header Parameter names must be disjoint');\n    }\n    const joseHeader = {\n        ...parsedProt,\n        ...jws.header,\n    };\n    const extensions = validateCrit(JWSInvalid, new Map([['b64', true]]), options === null || options === void 0 ? void 0 : options.crit, parsedProt, joseHeader);\n    let b64 = true;\n    if (extensions.has('b64')) {\n        b64 = parsedProt.b64;\n        if (typeof b64 !== 'boolean') {\n            throw new JWSInvalid('The \"b64\" (base64url-encode payload) Header Parameter must be a boolean');\n        }\n    }\n    const { alg } = joseHeader;\n    if (typeof alg !== 'string' || !alg) {\n        throw new JWSInvalid('JWS \"alg\" (Algorithm) Header Parameter missing or invalid');\n    }\n    const algorithms = options && validateAlgorithms('algorithms', options.algorithms);\n    if (algorithms && !algorithms.has(alg)) {\n        throw new JOSEAlgNotAllowed('\"alg\" (Algorithm) Header Parameter not allowed');\n    }\n    if (b64) {\n        if (typeof jws.payload !== 'string') {\n            throw new JWSInvalid('JWS Payload must be a string');\n        }\n    }\n    else if (typeof jws.payload !== 'string' && !(jws.payload instanceof Uint8Array)) {\n        throw new JWSInvalid('JWS Payload must be a string or an Uint8Array instance');\n    }\n    let resolvedKey = false;\n    if (typeof key === 'function') {\n        key = await key(parsedProt, jws);\n        resolvedKey = true;\n    }\n    checkKeyType(alg, key, 'verify');\n    const data = concat(encoder.encode((_a = jws.protected) !== null && _a !== void 0 ? _a : ''), encoder.encode('.'), typeof jws.payload === 'string' ? encoder.encode(jws.payload) : jws.payload);\n    let signature;\n    try {\n        signature = base64url(jws.signature);\n    }\n    catch (_c) {\n        throw new JWSInvalid('Failed to base64url decode the signature');\n    }\n    const verified = await verify(alg, key, signature, data);\n    if (!verified) {\n        throw new JWSSignatureVerificationFailed();\n    }\n    let payload;\n    if (b64) {\n        try {\n            payload = base64url(jws.payload);\n        }\n        catch (_d) {\n            throw new JWSInvalid('Failed to base64url decode the payload');\n        }\n    }\n    else if (typeof jws.payload === 'string') {\n        payload = encoder.encode(jws.payload);\n    }\n    else {\n        payload = jws.payload;\n    }\n    const result = { payload };\n    if (jws.protected !== undefined) {\n        result.protectedHeader = parsedProt;\n    }\n    if (jws.header !== undefined) {\n        result.unprotectedHeader = jws.header;\n    }\n    if (resolvedKey) {\n        return { ...result, key };\n    }\n    return result;\n}\n", "import { flattenedVerify } from '../flattened/verify.js';\nimport { JWSInvalid } from '../../util/errors.js';\nimport { decoder } from '../../lib/buffer_utils.js';\nexport async function compactVerify(jws, key, options) {\n    if (jws instanceof Uint8Array) {\n        jws = decoder.decode(jws);\n    }\n    if (typeof jws !== 'string') {\n        throw new JWSInvalid('Compact JWS must be a string or Uint8Array');\n    }\n    const { 0: protectedHeader, 1: payload, 2: signature, length } = jws.split('.');\n    if (length !== 3) {\n        throw new JWSInvalid('Invalid Compact JWS');\n    }\n    const verified = await flattenedVerify({ payload, protected: protectedHeader, signature }, key, options);\n    const result = { payload: verified.payload, protectedHeader: verified.protectedHeader };\n    if (typeof key === 'function') {\n        return { ...result, key: verified.key };\n    }\n    return result;\n}\n", "import { flattenedVerify } from '../flattened/verify.js';\nimport { JWSInvalid, JWSSignatureVerificationFailed } from '../../util/errors.js';\nimport isObject from '../../lib/is_object.js';\nexport async function generalVerify(jws, key, options) {\n    if (!isObject(jws)) {\n        throw new JWSInvalid('General JWS must be an object');\n    }\n    if (!Array.isArray(jws.signatures) || !jws.signatures.every(isObject)) {\n        throw new JWSInvalid('JWS Signatures missing or incorrect type');\n    }\n    for (const signature of jws.signatures) {\n        try {\n            return await flattenedVerify({\n                header: signature.header,\n                payload: jws.payload,\n                protected: signature.protected,\n                signature: signature.signature,\n            }, key, options);\n        }\n        catch (_a) {\n        }\n    }\n    throw new JWSSignatureVerificationFailed();\n}\n", "export default (date) => Math.floor(date.getTime() / 1000);\n", "const minute = 60;\nconst hour = minute * 60;\nconst day = hour * 24;\nconst week = day * 7;\nconst year = day * 365.25;\nconst REGEX = /^(\\d+|\\d+\\.\\d+) ?(seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)$/i;\nexport default (str) => {\n    const matched = REGEX.exec(str);\n    if (!matched) {\n        throw new TypeError('Invalid time period format');\n    }\n    const value = parseFloat(matched[1]);\n    const unit = matched[2].toLowerCase();\n    switch (unit) {\n        case 'sec':\n        case 'secs':\n        case 'second':\n        case 'seconds':\n        case 's':\n            return Math.round(value);\n        case 'minute':\n        case 'minutes':\n        case 'min':\n        case 'mins':\n        case 'm':\n            return Math.round(value * minute);\n        case 'hour':\n        case 'hours':\n        case 'hr':\n        case 'hrs':\n        case 'h':\n            return Math.round(value * hour);\n        case 'day':\n        case 'days':\n        case 'd':\n            return Math.round(value * day);\n        case 'week':\n        case 'weeks':\n        case 'w':\n            return Math.round(value * week);\n        default:\n            return Math.round(value * year);\n    }\n};\n", "import { JWTClaimValidationFailed, JWTExpired, JWTInvalid } from '../util/errors.js';\nimport { decoder } from './buffer_utils.js';\nimport epoch from './epoch.js';\nimport secs from './secs.js';\nimport isObject from './is_object.js';\nconst normalizeTyp = (value) => value.toLowerCase().replace(/^application\\//, '');\nconst checkAudiencePresence = (audPayload, audOption) => {\n    if (typeof audPayload === 'string') {\n        return audOption.includes(audPayload);\n    }\n    if (Array.isArray(audPayload)) {\n        return audOption.some(Set.prototype.has.bind(new Set(audPayload)));\n    }\n    return false;\n};\nexport default (protectedHeader, encodedPayload, options = {}) => {\n    const { typ } = options;\n    if (typ &&\n        (typeof protectedHeader.typ !== 'string' ||\n            normalizeTyp(protectedHeader.typ) !== normalizeTyp(typ))) {\n        throw new JWTClaimValidationFailed('unexpected \"typ\" JWT header value', 'typ', 'check_failed');\n    }\n    let payload;\n    try {\n        payload = JSON.parse(decoder.decode(encodedPayload));\n    }\n    catch (_a) {\n    }\n    if (!isObject(payload)) {\n        throw new JWTInvalid('JWT Claims Set must be a top-level JSON object');\n    }\n    const { requiredClaims = [], issuer, subject, audience, maxTokenAge } = options;\n    if (maxTokenAge !== undefined)\n        requiredClaims.push('iat');\n    if (audience !== undefined)\n        requiredClaims.push('aud');\n    if (subject !== undefined)\n        requiredClaims.push('sub');\n    if (issuer !== undefined)\n        requiredClaims.push('iss');\n    for (const claim of new Set(requiredClaims.reverse())) {\n        if (!(claim in payload)) {\n            throw new JWTClaimValidationFailed(`missing required \"${claim}\" claim`, claim, 'missing');\n        }\n    }\n    if (issuer && !(Array.isArray(issuer) ? issuer : [issuer]).includes(payload.iss)) {\n        throw new JWTClaimValidationFailed('unexpected \"iss\" claim value', 'iss', 'check_failed');\n    }\n    if (subject && payload.sub !== subject) {\n        throw new JWTClaimValidationFailed('unexpected \"sub\" claim value', 'sub', 'check_failed');\n    }\n    if (audience &&\n        !checkAudiencePresence(payload.aud, typeof audience === 'string' ? [audience] : audience)) {\n        throw new JWTClaimValidationFailed('unexpected \"aud\" claim value', 'aud', 'check_failed');\n    }\n    let tolerance;\n    switch (typeof options.clockTolerance) {\n        case 'string':\n            tolerance = secs(options.clockTolerance);\n            break;\n        case 'number':\n            tolerance = options.clockTolerance;\n            break;\n        case 'undefined':\n            tolerance = 0;\n            break;\n        default:\n            throw new TypeError('Invalid clockTolerance option type');\n    }\n    const { currentDate } = options;\n    const now = epoch(currentDate || new Date());\n    if ((payload.iat !== undefined || maxTokenAge) && typeof payload.iat !== 'number') {\n        throw new JWTClaimValidationFailed('\"iat\" claim must be a number', 'iat', 'invalid');\n    }\n    if (payload.nbf !== undefined) {\n        if (typeof payload.nbf !== 'number') {\n            throw new JWTClaimValidationFailed('\"nbf\" claim must be a number', 'nbf', 'invalid');\n        }\n        if (payload.nbf > now + tolerance) {\n            throw new JWTClaimValidationFailed('\"nbf\" claim timestamp check failed', 'nbf', 'check_failed');\n        }\n    }\n    if (payload.exp !== undefined) {\n        if (typeof payload.exp !== 'number') {\n            throw new JWTClaimValidationFailed('\"exp\" claim must be a number', 'exp', 'invalid');\n        }\n        if (payload.exp <= now - tolerance) {\n            throw new JWTExpired('\"exp\" claim timestamp check failed', 'exp', 'check_failed');\n        }\n    }\n    if (maxTokenAge) {\n        const age = now - payload.iat;\n        const max = typeof maxTokenAge === 'number' ? maxTokenAge : secs(maxTokenAge);\n        if (age - tolerance > max) {\n            throw new JWTExpired('\"iat\" claim timestamp check failed (too far in the past)', 'iat', 'check_failed');\n        }\n        if (age < 0 - tolerance) {\n            throw new JWTClaimValidationFailed('\"iat\" claim timestamp check failed (it should be in the past)', 'iat', 'check_failed');\n        }\n    }\n    return payload;\n};\n", "import { compactVerify } from '../jws/compact/verify.js';\nimport jwtPayload from '../lib/jwt_claims_set.js';\nimport { JWTInvalid } from '../util/errors.js';\nexport async function jwtVerify(jwt, key, options) {\n    var _a;\n    const verified = await compactVerify(jwt, key, options);\n    if (((_a = verified.protectedHeader.crit) === null || _a === void 0 ? void 0 : _a.includes('b64')) && verified.protectedHeader.b64 === false) {\n        throw new JWTInvalid('JWTs MUST NOT use unencoded payload');\n    }\n    const payload = jwtPayload(verified.protectedHeader, verified.payload, options);\n    const result = { payload, protectedHeader: verified.protectedHeader };\n    if (typeof key === 'function') {\n        return { ...result, key: verified.key };\n    }\n    return result;\n}\n", "import { compactDecrypt } from '../jwe/compact/decrypt.js';\nimport jwtPayload from '../lib/jwt_claims_set.js';\nimport { JWTClaimValidationFailed } from '../util/errors.js';\nexport async function jwtDecrypt(jwt, key, options) {\n    const decrypted = await compactDecrypt(jwt, key, options);\n    const payload = jwtPayload(decrypted.protectedHeader, decrypted.plaintext, options);\n    const { protectedHeader } = decrypted;\n    if (protectedHeader.iss !== undefined && protectedHeader.iss !== payload.iss) {\n        throw new JWTClaimValidationFailed('replicated \"iss\" claim header parameter mismatch', 'iss', 'mismatch');\n    }\n    if (protectedHeader.sub !== undefined && protectedHeader.sub !== payload.sub) {\n        throw new JWTClaimValidationFailed('replicated \"sub\" claim header parameter mismatch', 'sub', 'mismatch');\n    }\n    if (protectedHeader.aud !== undefined &&\n        JSON.stringify(protectedHeader.aud) !== JSON.stringify(payload.aud)) {\n        throw new JWTClaimValidationFailed('replicated \"aud\" claim header parameter mismatch', 'aud', 'mismatch');\n    }\n    const result = { payload, protectedHeader };\n    if (typeof key === 'function') {\n        return { ...result, key: decrypted.key };\n    }\n    return result;\n}\n", "import { FlattenedEncrypt } from '../flattened/encrypt.js';\nexport class CompactEncrypt {\n    constructor(plaintext) {\n        this._flattened = new FlattenedEncrypt(plaintext);\n    }\n    setContentEncryptionKey(cek) {\n        this._flattened.setContentEncryptionKey(cek);\n        return this;\n    }\n    setInitializationVector(iv) {\n        this._flattened.setInitializationVector(iv);\n        return this;\n    }\n    setProtectedHeader(protectedHeader) {\n        this._flattened.setProtectedHeader(protectedHeader);\n        return this;\n    }\n    setKeyManagementParameters(parameters) {\n        this._flattened.setKeyManagementParameters(parameters);\n        return this;\n    }\n    async encrypt(key, options) {\n        const jwe = await this._flattened.encrypt(key, options);\n        return [jwe.protected, jwe.encrypted_key, jwe.iv, jwe.ciphertext, jwe.tag].join('.');\n    }\n}\n", "import subtleAlgorithm from './subtle_dsa.js';\nimport crypto from './webcrypto.js';\nimport checkKeyLength from './check_key_length.js';\nimport getSignKey from './get_sign_verify_key.js';\nconst sign = async (alg, key, data) => {\n    const cryptoKey = await getSignKey(alg, key, 'sign');\n    checkKeyLength(alg, cryptoKey);\n    const signature = await crypto.subtle.sign(subtleAlgorithm(alg, cryptoKey.algorithm), cryptoKey, data);\n    return new Uint8Array(signature);\n};\nexport default sign;\n", "import { encode as base64url } from '../../runtime/base64url.js';\nimport sign from '../../runtime/sign.js';\nimport isDisjoint from '../../lib/is_disjoint.js';\nimport { JWSInvalid } from '../../util/errors.js';\nimport { encoder, decoder, concat } from '../../lib/buffer_utils.js';\nimport checkKeyType from '../../lib/check_key_type.js';\nimport validateCrit from '../../lib/validate_crit.js';\nexport class FlattenedSign {\n    constructor(payload) {\n        if (!(payload instanceof Uint8Array)) {\n            throw new TypeError('payload must be an instance of Uint8Array');\n        }\n        this._payload = payload;\n    }\n    setProtectedHeader(protectedHeader) {\n        if (this._protectedHeader) {\n            throw new TypeError('setProtectedHeader can only be called once');\n        }\n        this._protectedHeader = protectedHeader;\n        return this;\n    }\n    setUnprotectedHeader(unprotectedHeader) {\n        if (this._unprotectedHeader) {\n            throw new TypeError('setUnprotectedHeader can only be called once');\n        }\n        this._unprotectedHeader = unprotectedHeader;\n        return this;\n    }\n    async sign(key, options) {\n        if (!this._protectedHeader && !this._unprotectedHeader) {\n            throw new JWSInvalid('either setProtectedHeader or setUnprotectedHeader must be called before #sign()');\n        }\n        if (!isDisjoint(this._protectedHeader, this._unprotectedHeader)) {\n            throw new JWSInvalid('JWS Protected and JWS Unprotected Header Parameter names must be disjoint');\n        }\n        const joseHeader = {\n            ...this._protectedHeader,\n            ...this._unprotectedHeader,\n        };\n        const extensions = validateCrit(JWSInvalid, new Map([['b64', true]]), options === null || options === void 0 ? void 0 : options.crit, this._protectedHeader, joseHeader);\n        let b64 = true;\n        if (extensions.has('b64')) {\n            b64 = this._protectedHeader.b64;\n            if (typeof b64 !== 'boolean') {\n                throw new JWSInvalid('The \"b64\" (base64url-encode payload) Header Parameter must be a boolean');\n            }\n        }\n        const { alg } = joseHeader;\n        if (typeof alg !== 'string' || !alg) {\n            throw new JWSInvalid('JWS \"alg\" (Algorithm) Header Parameter missing or invalid');\n        }\n        checkKeyType(alg, key, 'sign');\n        let payload = this._payload;\n        if (b64) {\n            payload = encoder.encode(base64url(payload));\n        }\n        let protectedHeader;\n        if (this._protectedHeader) {\n            protectedHeader = encoder.encode(base64url(JSON.stringify(this._protectedHeader)));\n        }\n        else {\n            protectedHeader = encoder.encode('');\n        }\n        const data = concat(protectedHeader, encoder.encode('.'), payload);\n        const signature = await sign(alg, key, data);\n        const jws = {\n            signature: base64url(signature),\n            payload: '',\n        };\n        if (b64) {\n            jws.payload = decoder.decode(payload);\n        }\n        if (this._unprotectedHeader) {\n            jws.header = this._unprotectedHeader;\n        }\n        if (this._protectedHeader) {\n            jws.protected = decoder.decode(protectedHeader);\n        }\n        return jws;\n    }\n}\n", "import { FlattenedSign } from '../flattened/sign.js';\nexport class CompactSign {\n    constructor(payload) {\n        this._flattened = new FlattenedSign(payload);\n    }\n    setProtectedHeader(protectedHeader) {\n        this._flattened.setProtectedHeader(protectedHeader);\n        return this;\n    }\n    async sign(key, options) {\n        const jws = await this._flattened.sign(key, options);\n        if (jws.payload === undefined) {\n            throw new TypeError('use the flattened module for creating JWS with b64: false');\n        }\n        return `${jws.protected}.${jws.payload}.${jws.signature}`;\n    }\n}\n", "import { FlattenedSign } from '../flattened/sign.js';\nimport { JWSInvalid } from '../../util/errors.js';\nclass IndividualSignature {\n    constructor(sig, key, options) {\n        this.parent = sig;\n        this.key = key;\n        this.options = options;\n    }\n    setProtectedHeader(protectedHeader) {\n        if (this.protectedHeader) {\n            throw new TypeError('setProtectedHeader can only be called once');\n        }\n        this.protectedHeader = protectedHeader;\n        return this;\n    }\n    setUnprotectedHeader(unprotectedHeader) {\n        if (this.unprotectedHeader) {\n            throw new TypeError('setUnprotectedHeader can only be called once');\n        }\n        this.unprotectedHeader = unprotectedHeader;\n        return this;\n    }\n    addSignature(...args) {\n        return this.parent.addSignature(...args);\n    }\n    sign(...args) {\n        return this.parent.sign(...args);\n    }\n    done() {\n        return this.parent;\n    }\n}\nexport class GeneralSign {\n    constructor(payload) {\n        this._signatures = [];\n        this._payload = payload;\n    }\n    addSignature(key, options) {\n        const signature = new IndividualSignature(this, key, options);\n        this._signatures.push(signature);\n        return signature;\n    }\n    async sign() {\n        if (!this._signatures.length) {\n            throw new JWSInvalid('at least one signature must be added');\n        }\n        const jws = {\n            signatures: [],\n            payload: '',\n        };\n        for (let i = 0; i < this._signatures.length; i++) {\n            const signature = this._signatures[i];\n            const flattened = new FlattenedSign(this._payload);\n            flattened.setProtectedHeader(signature.protectedHeader);\n            flattened.setUnprotectedHeader(signature.unprotectedHeader);\n            const { payload, ...rest } = await flattened.sign(signature.key, signature.options);\n            if (i === 0) {\n                jws.payload = payload;\n            }\n            else if (jws.payload !== payload) {\n                throw new JWSInvalid('inconsistent use of JWS Unencoded Payload (RFC7797)');\n            }\n            jws.signatures.push(rest);\n        }\n        return jws;\n    }\n}\n", "import epoch from '../lib/epoch.js';\nimport isObject from '../lib/is_object.js';\nimport secs from '../lib/secs.js';\nexport class ProduceJWT {\n    constructor(payload) {\n        if (!isObject(payload)) {\n            throw new TypeError('JWT Claims Set MUST be an object');\n        }\n        this._payload = payload;\n    }\n    setIssuer(issuer) {\n        this._payload = { ...this._payload, iss: issuer };\n        return this;\n    }\n    setSubject(subject) {\n        this._payload = { ...this._payload, sub: subject };\n        return this;\n    }\n    setAudience(audience) {\n        this._payload = { ...this._payload, aud: audience };\n        return this;\n    }\n    setJti(jwtId) {\n        this._payload = { ...this._payload, jti: jwtId };\n        return this;\n    }\n    setNotBefore(input) {\n        if (typeof input === 'number') {\n            this._payload = { ...this._payload, nbf: input };\n        }\n        else {\n            this._payload = { ...this._payload, nbf: epoch(new Date()) + secs(input) };\n        }\n        return this;\n    }\n    setExpirationTime(input) {\n        if (typeof input === 'number') {\n            this._payload = { ...this._payload, exp: input };\n        }\n        else {\n            this._payload = { ...this._payload, exp: epoch(new Date()) + secs(input) };\n        }\n        return this;\n    }\n    setIssuedAt(input) {\n        if (typeof input === 'undefined') {\n            this._payload = { ...this._payload, iat: epoch(new Date()) };\n        }\n        else {\n            this._payload = { ...this._payload, iat: input };\n        }\n        return this;\n    }\n}\n", "import { CompactSign } from '../jws/compact/sign.js';\nimport { JWTInvalid } from '../util/errors.js';\nimport { encoder } from '../lib/buffer_utils.js';\nimport { ProduceJWT } from './produce.js';\nexport class SignJWT extends ProduceJWT {\n    setProtectedHeader(protectedHeader) {\n        this._protectedHeader = protectedHeader;\n        return this;\n    }\n    async sign(key, options) {\n        var _a;\n        const sig = new CompactSign(encoder.encode(JSON.stringify(this._payload)));\n        sig.setProtectedHeader(this._protectedHeader);\n        if (Array.isArray((_a = this._protectedHeader) === null || _a === void 0 ? void 0 : _a.crit) &&\n            this._protectedHeader.crit.includes('b64') &&\n            this._protectedHeader.b64 === false) {\n            throw new JWTInvalid('JWTs MUST NOT use unencoded payload');\n        }\n        return sig.sign(key, options);\n    }\n}\n", "import { CompactEncrypt } from '../jwe/compact/encrypt.js';\nimport { encoder } from '../lib/buffer_utils.js';\nimport { ProduceJWT } from './produce.js';\nexport class EncryptJWT extends ProduceJWT {\n    setProtectedHeader(protectedHeader) {\n        if (this._protectedHeader) {\n            throw new TypeError('setProtectedHeader can only be called once');\n        }\n        this._protectedHeader = protectedHeader;\n        return this;\n    }\n    setKeyManagementParameters(parameters) {\n        if (this._keyManagementParameters) {\n            throw new TypeError('setKeyManagementParameters can only be called once');\n        }\n        this._keyManagementParameters = parameters;\n        return this;\n    }\n    setContentEncryptionKey(cek) {\n        if (this._cek) {\n            throw new TypeError('setContentEncryptionKey can only be called once');\n        }\n        this._cek = cek;\n        return this;\n    }\n    setInitializationVector(iv) {\n        if (this._iv) {\n            throw new TypeError('setInitializationVector can only be called once');\n        }\n        this._iv = iv;\n        return this;\n    }\n    replicateIssuerAsHeader() {\n        this._replicateIssuerAsHeader = true;\n        return this;\n    }\n    replicateSubjectAsHeader() {\n        this._replicateSubjectAsHeader = true;\n        return this;\n    }\n    replicateAudienceAsHeader() {\n        this._replicateAudienceAsHeader = true;\n        return this;\n    }\n    async encrypt(key, options) {\n        const enc = new CompactEncrypt(encoder.encode(JSON.stringify(this._payload)));\n        if (this._replicateIssuerAsHeader) {\n            this._protectedHeader = { ...this._protectedHeader, iss: this._payload.iss };\n        }\n        if (this._replicateSubjectAsHeader) {\n            this._protectedHeader = { ...this._protectedHeader, sub: this._payload.sub };\n        }\n        if (this._replicateAudienceAsHeader) {\n            this._protectedHeader = { ...this._protectedHeader, aud: this._payload.aud };\n        }\n        enc.setProtectedHeader(this._protectedHeader);\n        if (this._iv) {\n            enc.setInitializationVector(this._iv);\n        }\n        if (this._cek) {\n            enc.setContentEncryptionKey(this._cek);\n        }\n        if (this._keyManagementParameters) {\n            enc.setKeyManagementParameters(this._keyManagementParameters);\n        }\n        return enc.encrypt(key, options);\n    }\n}\n", "import digest from '../runtime/digest.js';\nimport { encode as base64url } from '../runtime/base64url.js';\nimport { JOSENotSupported, JWKInvalid } from '../util/errors.js';\nimport { encoder } from '../lib/buffer_utils.js';\nimport isObject from '../lib/is_object.js';\nconst check = (value, description) => {\n    if (typeof value !== 'string' || !value) {\n        throw new JWKInvalid(`${description} missing or invalid`);\n    }\n};\nexport async function calculateJwkThumbprint(jwk, digestAlgorithm) {\n    if (!isObject(jwk)) {\n        throw new TypeError('JWK must be an object');\n    }\n    digestAlgorithm !== null && digestAlgorithm !== void 0 ? digestAlgorithm : (digestAlgorithm = 'sha256');\n    if (digestAlgorithm !== 'sha256' &&\n        digestAlgorithm !== 'sha384' &&\n        digestAlgorithm !== 'sha512') {\n        throw new TypeError('digestAlgorithm must one of \"sha256\", \"sha384\", or \"sha512\"');\n    }\n    let components;\n    switch (jwk.kty) {\n        case 'EC':\n            check(jwk.crv, '\"crv\" (Curve) Parameter');\n            check(jwk.x, '\"x\" (X Coordinate) Parameter');\n            check(jwk.y, '\"y\" (Y Coordinate) Parameter');\n            components = { crv: jwk.crv, kty: jwk.kty, x: jwk.x, y: jwk.y };\n            break;\n        case 'OKP':\n            check(jwk.crv, '\"crv\" (Subtype of Key Pair) Parameter');\n            check(jwk.x, '\"x\" (Public Key) Parameter');\n            components = { crv: jwk.crv, kty: jwk.kty, x: jwk.x };\n            break;\n        case 'RSA':\n            check(jwk.e, '\"e\" (Exponent) Parameter');\n            check(jwk.n, '\"n\" (Modulus) Parameter');\n            components = { e: jwk.e, kty: jwk.kty, n: jwk.n };\n            break;\n        case 'oct':\n            check(jwk.k, '\"k\" (Key Value) Parameter');\n            components = { k: jwk.k, kty: jwk.kty };\n            break;\n        default:\n            throw new JOSENotSupported('\"kty\" (Key Type) Parameter missing or unsupported');\n    }\n    const data = encoder.encode(JSON.stringify(components));\n    return base64url(await digest(digestAlgorithm, data));\n}\nexport async function calculateJwkThumbprintUri(jwk, digestAlgorithm) {\n    digestAlgorithm !== null && digestAlgorithm !== void 0 ? digestAlgorithm : (digestAlgorithm = 'sha256');\n    const thumbprint = await calculateJwkThumbprint(jwk, digestAlgorithm);\n    return `urn:ietf:params:oauth:jwk-thumbprint:sha-${digestAlgorithm.slice(-3)}:${thumbprint}`;\n}\n", "import { importJWK } from '../key/import.js';\nimport isObject from '../lib/is_object.js';\nimport { JWSInvalid } from '../util/errors.js';\nexport async function EmbeddedJWK(protectedHeader, token) {\n    const joseHeader = {\n        ...protectedHeader,\n        ...token === null || token === void 0 ? void 0 : token.header,\n    };\n    if (!isObject(joseHeader.jwk)) {\n        throw new JWSInvalid('\"jwk\" (JSON Web Key) Header Parameter must be a JSON object');\n    }\n    const key = await importJWK({ ...joseHeader.jwk, ext: true }, joseHeader.alg, true);\n    if (key instanceof Uint8Array || key.type !== 'public') {\n        throw new JWSInvalid('\"jwk\" (JSON Web Key) Header Parameter must be a public key');\n    }\n    return key;\n}\n", "import { importJWK } from '../key/import.js';\nimport { JWKSInvalid, JOSENotSupported, JWKSNoMatchingKey, JWKSMultipleMatchingKeys, } from '../util/errors.js';\nimport isObject from '../lib/is_object.js';\nfunction getKtyFromAlg(alg) {\n    switch (typeof alg === 'string' && alg.slice(0, 2)) {\n        case 'RS':\n        case 'PS':\n            return 'RSA';\n        case 'ES':\n            return 'EC';\n        case 'Ed':\n            return 'OKP';\n        default:\n            throw new JOSENotSupported('Unsupported \"alg\" value for a JSON Web Key Set');\n    }\n}\nexport function isJWKSLike(jwks) {\n    return (jwks &&\n        typeof jwks === 'object' &&\n        Array.isArray(jwks.keys) &&\n        jwks.keys.every(isJWKLike));\n}\nfunction isJWKLike(key) {\n    return isObject(key);\n}\nfunction clone(obj) {\n    if (typeof structuredClone === 'function') {\n        return structuredClone(obj);\n    }\n    return JSON.parse(JSON.stringify(obj));\n}\nexport class LocalJWKSet {\n    constructor(jwks) {\n        this._cached = new WeakMap();\n        if (!isJWKSLike(jwks)) {\n            throw new JWKSInvalid('JSON Web Key Set malformed');\n        }\n        this._jwks = clone(jwks);\n    }\n    async getKey(protectedHeader, token) {\n        const { alg, kid } = { ...protectedHeader, ...token === null || token === void 0 ? void 0 : token.header };\n        const kty = getKtyFromAlg(alg);\n        const candidates = this._jwks.keys.filter((jwk) => {\n            let candidate = kty === jwk.kty;\n            if (candidate && typeof kid === 'string') {\n                candidate = kid === jwk.kid;\n            }\n            if (candidate && typeof jwk.alg === 'string') {\n                candidate = alg === jwk.alg;\n            }\n            if (candidate && typeof jwk.use === 'string') {\n                candidate = jwk.use === 'sig';\n            }\n            if (candidate && Array.isArray(jwk.key_ops)) {\n                candidate = jwk.key_ops.includes('verify');\n            }\n            if (candidate && alg === 'EdDSA') {\n                candidate = jwk.crv === 'Ed25519' || jwk.crv === 'Ed448';\n            }\n            if (candidate) {\n                switch (alg) {\n                    case 'ES256':\n                        candidate = jwk.crv === 'P-256';\n                        break;\n                    case 'ES256K':\n                        candidate = jwk.crv === 'secp256k1';\n                        break;\n                    case 'ES384':\n                        candidate = jwk.crv === 'P-384';\n                        break;\n                    case 'ES512':\n                        candidate = jwk.crv === 'P-521';\n                        break;\n                }\n            }\n            return candidate;\n        });\n        const { 0: jwk, length } = candidates;\n        if (length === 0) {\n            throw new JWKSNoMatchingKey();\n        }\n        else if (length !== 1) {\n            const error = new JWKSMultipleMatchingKeys();\n            const { _cached } = this;\n            error[Symbol.asyncIterator] = async function* () {\n                for (const jwk of candidates) {\n                    try {\n                        yield await importWithAlgCache(_cached, jwk, alg);\n                    }\n                    catch (_a) {\n                        continue;\n                    }\n                }\n            };\n            throw error;\n        }\n        return importWithAlgCache(this._cached, jwk, alg);\n    }\n}\nasync function importWithAlgCache(cache, jwk, alg) {\n    const cached = cache.get(jwk) || cache.set(jwk, {}).get(jwk);\n    if (cached[alg] === undefined) {\n        const key = await importJWK({ ...jwk, ext: true }, alg);\n        if (key instanceof Uint8Array || key.type !== 'public') {\n            throw new JWKSInvalid('JSON Web Key Set members must be public keys');\n        }\n        cached[alg] = key;\n    }\n    return cached[alg];\n}\nexport function createLocalJWKSet(jwks) {\n    const set = new LocalJWKSet(jwks);\n    return async function (protectedHeader, token) {\n        return set.getKey(protectedHeader, token);\n    };\n}\n", "import { JOSEError, JWKSTimeout } from '../util/errors.js';\nconst fetchJwks = async (url, timeout, options) => {\n    let controller;\n    let id;\n    let timedOut = false;\n    if (typeof AbortController === 'function') {\n        controller = new AbortController();\n        id = setTimeout(() => {\n            timedOut = true;\n            controller.abort();\n        }, timeout);\n    }\n    const response = await fetch(url.href, {\n        signal: controller ? controller.signal : undefined,\n        redirect: 'manual',\n        headers: options.headers,\n    }).catch((err) => {\n        if (timedOut)\n            throw new JWKSTimeout();\n        throw err;\n    });\n    if (id !== undefined)\n        clearTimeout(id);\n    if (response.status !== 200) {\n        throw new JOSEError('Expected 200 OK from the JSON Web Key Set HTTP response');\n    }\n    try {\n        return await response.json();\n    }\n    catch (_a) {\n        throw new JOSEError('Failed to parse the JSON Web Key Set HTTP response as JSON');\n    }\n};\nexport default fetchJwks;\n", "import fetchJwks from '../runtime/fetch_jwks.js';\nimport { JWKSInvalid, JWKSNoMatchingKey } from '../util/errors.js';\nimport { isJWKSLike, LocalJWKSet } from './local.js';\nfunction isCloudflareWorkers() {\n    return (typeof WebSocketPair !== 'undefined' ||\n        (typeof navigator !== 'undefined' && navigator.userAgent === 'Cloudflare-Workers') ||\n        (typeof EdgeRuntime !== 'undefined' && EdgeRuntime === 'vercel'));\n}\nclass RemoteJWKSet extends LocalJWKSet {\n    constructor(url, options) {\n        super({ keys: [] });\n        this._jwks = undefined;\n        if (!(url instanceof URL)) {\n            throw new TypeError('url must be an instance of URL');\n        }\n        this._url = new URL(url.href);\n        this._options = { agent: options === null || options === void 0 ? void 0 : options.agent, headers: options === null || options === void 0 ? void 0 : options.headers };\n        this._timeoutDuration =\n            typeof (options === null || options === void 0 ? void 0 : options.timeoutDuration) === 'number' ? options === null || options === void 0 ? void 0 : options.timeoutDuration : 5000;\n        this._cooldownDuration =\n            typeof (options === null || options === void 0 ? void 0 : options.cooldownDuration) === 'number' ? options === null || options === void 0 ? void 0 : options.cooldownDuration : 30000;\n        this._cacheMaxAge = typeof (options === null || options === void 0 ? void 0 : options.cacheMaxAge) === 'number' ? options === null || options === void 0 ? void 0 : options.cacheMaxAge : 600000;\n    }\n    coolingDown() {\n        return typeof this._jwksTimestamp === 'number'\n            ? Date.now() < this._jwksTimestamp + this._cooldownDuration\n            : false;\n    }\n    fresh() {\n        return typeof this._jwksTimestamp === 'number'\n            ? Date.now() < this._jwksTimestamp + this._cacheMaxAge\n            : false;\n    }\n    async getKey(protectedHeader, token) {\n        if (!this._jwks || !this.fresh()) {\n            await this.reload();\n        }\n        try {\n            return await super.getKey(protectedHeader, token);\n        }\n        catch (err) {\n            if (err instanceof JWKSNoMatchingKey) {\n                if (this.coolingDown() === false) {\n                    await this.reload();\n                    return super.getKey(protectedHeader, token);\n                }\n            }\n            throw err;\n        }\n    }\n    async reload() {\n        if (this._pendingFetch && isCloudflareWorkers()) {\n            this._pendingFetch = undefined;\n        }\n        this._pendingFetch || (this._pendingFetch = fetchJwks(this._url, this._timeoutDuration, this._options)\n            .then((json) => {\n            if (!isJWKSLike(json)) {\n                throw new JWKSInvalid('JSON Web Key Set malformed');\n            }\n            this._jwks = { keys: json.keys };\n            this._jwksTimestamp = Date.now();\n            this._pendingFetch = undefined;\n        })\n            .catch((err) => {\n            this._pendingFetch = undefined;\n            throw err;\n        }));\n        await this._pendingFetch;\n    }\n}\nexport function createRemoteJWKSet(url, options) {\n    const set = new RemoteJWKSet(url, options);\n    return async function (protectedHeader, token) {\n        return set.getKey(protectedHeader, token);\n    };\n}\n", "import * as base64url from '../runtime/base64url.js';\nimport { decoder } from '../lib/buffer_utils.js';\nimport { JWTInvalid } from '../util/errors.js';\nimport jwtPayload from '../lib/jwt_claims_set.js';\nimport { ProduceJWT } from './produce.js';\nexport class UnsecuredJWT extends ProduceJWT {\n    encode() {\n        const header = base64url.encode(JSON.stringify({ alg: 'none' }));\n        const payload = base64url.encode(JSON.stringify(this._payload));\n        return `${header}.${payload}.`;\n    }\n    static decode(jwt, options) {\n        if (typeof jwt !== 'string') {\n            throw new JWTInvalid('Unsecured JWT must be a string');\n        }\n        const { 0: encodedHeader, 1: encodedPayload, 2: signature, length } = jwt.split('.');\n        if (length !== 3 || signature !== '') {\n            throw new JWTInvalid('Invalid Unsecured JWT');\n        }\n        let header;\n        try {\n            header = JSON.parse(decoder.decode(base64url.decode(encodedHeader)));\n            if (header.alg !== 'none')\n                throw new Error();\n        }\n        catch (_a) {\n            throw new JWTInvalid('Invalid Unsecured JWT');\n        }\n        const payload = jwtPayload(header, base64url.decode(encodedPayload), options);\n        return { payload, header };\n    }\n}\n", "import * as base64url from '../runtime/base64url.js';\nexport const encode = base64url.encode;\nexport const decode = base64url.decode;\n", "import { decode as base64url } from './base64url.js';\nimport { decoder } from '../lib/buffer_utils.js';\nimport isObject from '../lib/is_object.js';\nexport function decodeProtectedHeader(token) {\n    let protectedB64u;\n    if (typeof token === 'string') {\n        const parts = token.split('.');\n        if (parts.length === 3 || parts.length === 5) {\n            ;\n            [protectedB64u] = parts;\n        }\n    }\n    else if (typeof token === 'object' && token) {\n        if ('protected' in token) {\n            protectedB64u = token.protected;\n        }\n        else {\n            throw new TypeError('Token does not contain a Protected Header');\n        }\n    }\n    try {\n        if (typeof protectedB64u !== 'string' || !protectedB64u) {\n            throw new Error();\n        }\n        const result = JSON.parse(decoder.decode(base64url(protectedB64u)));\n        if (!isObject(result)) {\n            throw new Error();\n        }\n        return result;\n    }\n    catch (_a) {\n        throw new TypeError('Invalid Token or Protected Header formatting');\n    }\n}\n", "import { decode as base64url } from './base64url.js';\nimport { decoder } from '../lib/buffer_utils.js';\nimport isObject from '../lib/is_object.js';\nimport { JWTInvalid } from './errors.js';\nexport function decodeJwt(jwt) {\n    if (typeof jwt !== 'string')\n        throw new JWTInvalid('JWTs must use Compact JWS serialization, JWT must be a string');\n    const { 1: payload, length } = jwt.split('.');\n    if (length === 5)\n        throw new JWTInvalid('Only JWTs using Compact JWS serialization can be decoded');\n    if (length !== 3)\n        throw new JWTInvalid('Invalid JWT');\n    if (!payload)\n        throw new JWTInvalid('JWTs must contain a payload');\n    let decoded;\n    try {\n        decoded = base64url(payload);\n    }\n    catch (_a) {\n        throw new JWTInvalid('Failed to base64url decode the payload');\n    }\n    let result;\n    try {\n        result = JSON.parse(decoder.decode(decoded));\n    }\n    catch (_b) {\n        throw new JWTInvalid('Failed to parse the decoded payload as JSON');\n    }\n    if (!isObject(result))\n        throw new JWTInvalid('Invalid JWT Claims Set');\n    return result;\n}\n", "import crypto from './webcrypto.js';\nimport { JOSENotSupported } from '../util/errors.js';\nimport random from './random.js';\nexport async function generateSecret(alg, options) {\n    var _a;\n    let length;\n    let algorithm;\n    let keyUsages;\n    switch (alg) {\n        case 'HS256':\n        case 'HS384':\n        case 'HS512':\n            length = parseInt(alg.slice(-3), 10);\n            algorithm = { name: 'HMAC', hash: `SHA-${length}`, length };\n            keyUsages = ['sign', 'verify'];\n            break;\n        case 'A128CBC-HS256':\n        case 'A192CBC-HS384':\n        case 'A256CBC-HS512':\n            length = parseInt(alg.slice(-3), 10);\n            return random(new Uint8Array(length >> 3));\n        case 'A128KW':\n        case 'A192KW':\n        case 'A256KW':\n            length = parseInt(alg.slice(1, 4), 10);\n            algorithm = { name: 'AES-KW', length };\n            keyUsages = ['wrapKey', 'unwrapKey'];\n            break;\n        case 'A128GCMKW':\n        case 'A192GCMKW':\n        case 'A256GCMKW':\n        case 'A128GCM':\n        case 'A192GCM':\n        case 'A256GCM':\n            length = parseInt(alg.slice(1, 4), 10);\n            algorithm = { name: 'AES-GCM', length };\n            keyUsages = ['encrypt', 'decrypt'];\n            break;\n        default:\n            throw new JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n    }\n    return crypto.subtle.generateKey(algorithm, (_a = options === null || options === void 0 ? void 0 : options.extractable) !== null && _a !== void 0 ? _a : false, keyUsages);\n}\nfunction getModulusLengthOption(options) {\n    var _a;\n    const modulusLength = (_a = options === null || options === void 0 ? void 0 : options.modulusLength) !== null && _a !== void 0 ? _a : 2048;\n    if (typeof modulusLength !== 'number' || modulusLength < 2048) {\n        throw new JOSENotSupported('Invalid or unsupported modulusLength option provided, 2048 bits or larger keys must be used');\n    }\n    return modulusLength;\n}\nexport async function generateKeyPair(alg, options) {\n    var _a, _b, _c;\n    let algorithm;\n    let keyUsages;\n    switch (alg) {\n        case 'PS256':\n        case 'PS384':\n        case 'PS512':\n            algorithm = {\n                name: 'RSA-PSS',\n                hash: `SHA-${alg.slice(-3)}`,\n                publicExponent: new Uint8Array([0x01, 0x00, 0x01]),\n                modulusLength: getModulusLengthOption(options),\n            };\n            keyUsages = ['sign', 'verify'];\n            break;\n        case 'RS256':\n        case 'RS384':\n        case 'RS512':\n            algorithm = {\n                name: 'RSASSA-PKCS1-v1_5',\n                hash: `SHA-${alg.slice(-3)}`,\n                publicExponent: new Uint8Array([0x01, 0x00, 0x01]),\n                modulusLength: getModulusLengthOption(options),\n            };\n            keyUsages = ['sign', 'verify'];\n            break;\n        case 'RSA-OAEP':\n        case 'RSA-OAEP-256':\n        case 'RSA-OAEP-384':\n        case 'RSA-OAEP-512':\n            algorithm = {\n                name: 'RSA-OAEP',\n                hash: `SHA-${parseInt(alg.slice(-3), 10) || 1}`,\n                publicExponent: new Uint8Array([0x01, 0x00, 0x01]),\n                modulusLength: getModulusLengthOption(options),\n            };\n            keyUsages = ['decrypt', 'unwrapKey', 'encrypt', 'wrapKey'];\n            break;\n        case 'ES256':\n            algorithm = { name: 'ECDSA', namedCurve: 'P-256' };\n            keyUsages = ['sign', 'verify'];\n            break;\n        case 'ES384':\n            algorithm = { name: 'ECDSA', namedCurve: 'P-384' };\n            keyUsages = ['sign', 'verify'];\n            break;\n        case 'ES512':\n            algorithm = { name: 'ECDSA', namedCurve: 'P-521' };\n            keyUsages = ['sign', 'verify'];\n            break;\n        case 'EdDSA':\n            keyUsages = ['sign', 'verify'];\n            const crv = (_a = options === null || options === void 0 ? void 0 : options.crv) !== null && _a !== void 0 ? _a : 'Ed25519';\n            switch (crv) {\n                case 'Ed25519':\n                case 'Ed448':\n                    algorithm = { name: crv };\n                    break;\n                default:\n                    throw new JOSENotSupported('Invalid or unsupported crv option provided');\n            }\n            break;\n        case 'ECDH-ES':\n        case 'ECDH-ES+A128KW':\n        case 'ECDH-ES+A192KW':\n        case 'ECDH-ES+A256KW': {\n            keyUsages = ['deriveKey', 'deriveBits'];\n            const crv = (_b = options === null || options === void 0 ? void 0 : options.crv) !== null && _b !== void 0 ? _b : 'P-256';\n            switch (crv) {\n                case 'P-256':\n                case 'P-384':\n                case 'P-521': {\n                    algorithm = { name: 'ECDH', namedCurve: crv };\n                    break;\n                }\n                case 'X25519':\n                case 'X448':\n                    algorithm = { name: crv };\n                    break;\n                default:\n                    throw new JOSENotSupported('Invalid or unsupported crv option provided, supported values are P-256, P-384, P-521, X25519, and X448');\n            }\n            break;\n        }\n        default:\n            throw new JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n    }\n    return (crypto.subtle.generateKey(algorithm, (_c = options === null || options === void 0 ? void 0 : options.extractable) !== null && _c !== void 0 ? _c : false, keyUsages));\n}\n", "import { generateKeyPair as generate } from '../runtime/generate.js';\nexport async function generateKeyPair(alg, options) {\n    return generate(alg, options);\n}\n", "import { generateSecret as generate } from '../runtime/generate.js';\nexport async function generateSecret(alg, options) {\n    return generate(alg, options);\n}\n", "export default 'WebCryptoAPI';\n", "import value from '../runtime/runtime.js';\nexport default value;\n", "export { compactDecrypt } from './jwe/compact/decrypt.js';\nexport { flattenedDecrypt } from './jwe/flattened/decrypt.js';\nexport { generalDecrypt } from './jwe/general/decrypt.js';\nexport { GeneralEncrypt } from './jwe/general/encrypt.js';\nexport { compactVerify } from './jws/compact/verify.js';\nexport { flattenedVerify } from './jws/flattened/verify.js';\nexport { generalVerify } from './jws/general/verify.js';\nexport { jwtVerify } from './jwt/verify.js';\nexport { jwtDecrypt } from './jwt/decrypt.js';\nexport { CompactEncrypt } from './jwe/compact/encrypt.js';\nexport { FlattenedEncrypt } from './jwe/flattened/encrypt.js';\nexport { CompactSign } from './jws/compact/sign.js';\nexport { FlattenedSign } from './jws/flattened/sign.js';\nexport { GeneralSign } from './jws/general/sign.js';\nexport { SignJWT } from './jwt/sign.js';\nexport { EncryptJWT } from './jwt/encrypt.js';\nexport { calculateJwkThumbprint, calculateJwkThumbprintUri } from './jwk/thumbprint.js';\nexport { EmbeddedJWK } from './jwk/embedded.js';\nexport { createLocalJWKSet } from './jwks/local.js';\nexport { createRemoteJWKSet } from './jwks/remote.js';\nexport { UnsecuredJWT } from './jwt/unsecured.js';\nexport { exportPKCS8, exportSPKI, exportJWK } from './key/export.js';\nexport { importSPKI, importPKCS8, importX509, importJWK } from './key/import.js';\nexport { decodeProtectedHeader } from './util/decode_protected_header.js';\nexport { decodeJwt } from './util/decode_jwt.js';\nimport * as errors_1 from './util/errors.js';\nexport { errors_1 as errors };\nexport { generateKeyPair } from './key/generate_key_pair.js';\nexport { generateSecret } from './key/generate_secret.js';\nimport * as base64url_1 from './util/base64url.js';\nexport { base64url_1 as base64url };\nexport { default as cryptoRuntime } from './util/runtime.js';\n", "function JwksError(message) {\n  Error.call(this, message);\n  Error.captureStackTrace(this, this.constructor);\n  this.name = 'JwksError';\n  this.message = message;\n}\n\nJwksError.prototype = Object.create(Error.prototype);\nJwksError.prototype.constructor = JwksError;\nmodule.exports = JwksError;\n", "const jose = require('jose');\nconst JwksError = require('./errors/JwksError');\n\nfunction resolveAlg(jwk) {\n  if (jwk.alg) {\n    return jwk.alg;\n  }\n\n  if (jwk.kty === 'RSA') {\n    return 'RS256';\n  }\n\n  if (jwk.kty === 'EC') {\n    switch (jwk.crv) {\n      case 'P-256':\n        return 'ES256';\n      case 'secp256k1':\n        return 'ES256K';\n      case 'P-384':\n        return 'ES384';\n      case 'P-521':\n        return 'ES512';\n    }\n  }\n\n  if (jwk.kty === 'OKP') {\n    switch (jwk.crv) {\n      case 'Ed25519':\n      case 'Ed448':\n        return 'EdDSA';\n    }\n  }\n\n  throw new JwksError('Unsupported JWK');\n}\n\nasync function retrieveSigningKeys(jwks) {\n  const results = [];\n\n  jwks = jwks\n    .filter(({ use }) => use === 'sig' || use === undefined)\n    .filter(({ kty }) => kty === 'RSA' || kty === 'EC' || kty === 'OKP');\n\n  for (const jwk of jwks) {\n    try {\n      const key = await jose.importJWK(jwk, resolveAlg(jwk));\n      if (key.type !== 'public') {\n        continue;\n      }\n      let getSpki;\n      switch (key[Symbol.toStringTag]) {\n        case 'CryptoKey': {\n          const spki = await jose.exportSPKI(key);\n          getSpki = () => spki;\n          break;\n        }\n        case 'KeyObject':\n          // Assume legacy Node.js version without the Symbol.toStringTag backported\n          // Fall through\n        default:\n          getSpki = () => key.export({ format: 'pem', type: 'spki' });\n      }\n      results.push({\n        get publicKey() { return getSpki(); },\n        get rsaPublicKey() { return getSpki(); },\n        getPublicKey() { return getSpki(); },\n        ...(typeof jwk.kid === 'string' && jwk.kid ? { kid: jwk.kid } : undefined),\n        ...(typeof jwk.alg === 'string' && jwk.alg ? { alg: jwk.alg } : undefined)\n      });\n    } catch (err) {\n      continue;\n    }\n  }\n\n  return results;\n}\n\nmodule.exports = {\n  retrieveSigningKeys\n};\n", "const http = require('http');\nconst https = require('https');\nconst urlUtil = require('url');\n\nmodule.exports.default =  (options) => {\n  if (options.fetcher) {\n    return options.fetcher(options.uri);\n  }\n\n  return new Promise((resolve, reject) => {\n    const {\n      hostname,\n      path,\n      port,\n      protocol\n    } = urlUtil.parse(options.uri);\n\n    const requestOptions = {\n      hostname,\n      path,\n      port,\n      method: 'GET',\n      ...(options.headers && { headers: { ...options.headers } }),\n      ...(options.timeout && { timeout: options.timeout }),\n      ...(options.agent && { agent: options.agent })\n    };\n\n    const httpRequestLib = protocol === 'https:' ? https : http;\n    const httpRequest = httpRequestLib.request(requestOptions, (res) => {\n      let rawData = '';\n      res.setEncoding('utf8');\n      res.on('data', (chunk) => { rawData += chunk; });\n      res.on('end', () => {\n        if (res.statusCode < 200 || res.statusCode >= 300) {\n          const errorMsg = res.body && (res.body.message || res.body) || res.statusMessage || `Http Error ${res.statusCode}`;\n          reject({ errorMsg });\n        } else {\n          try {\n            resolve(rawData && JSON.parse(rawData));\n          } catch (error) {\n            reject(error);\n          }\n        }\n      });\n    });\n\n    httpRequest\n      .on('timeout', () => httpRequest.destroy())\n      .on('error', (e) => reject(e))\n      .end();\n  });\n};\n", "var hasOwnProperty = Object.prototype.hasOwnProperty\n\nmodule.exports = PseudoMap\n\nfunction PseudoMap (set) {\n  if (!(this instanceof PseudoMap)) // whyyyyyyy\n    throw new TypeError(\"Constructor PseudoMap requires 'new'\")\n\n  this.clear()\n\n  if (set) {\n    if ((set instanceof PseudoMap) ||\n        (typeof Map === 'function' && set instanceof Map))\n      set.forEach(function (value, key) {\n        this.set(key, value)\n      }, this)\n    else if (Array.isArray(set))\n      set.forEach(function (kv) {\n        this.set(kv[0], kv[1])\n      }, this)\n    else\n      throw new TypeError('invalid argument')\n  }\n}\n\nPseudoMap.prototype.forEach = function (fn, thisp) {\n  thisp = thisp || this\n  Object.keys(this._data).forEach(function (k) {\n    if (k !== 'size')\n      fn.call(thisp, this._data[k].value, this._data[k].key)\n  }, this)\n}\n\nPseudoMap.prototype.has = function (k) {\n  return !!find(this._data, k)\n}\n\nPseudoMap.prototype.get = function (k) {\n  var res = find(this._data, k)\n  return res && res.value\n}\n\nPseudoMap.prototype.set = function (k, v) {\n  set(this._data, k, v)\n}\n\nPseudoMap.prototype.delete = function (k) {\n  var res = find(this._data, k)\n  if (res) {\n    delete this._data[res._index]\n    this._data.size--\n  }\n}\n\nPseudoMap.prototype.clear = function () {\n  var data = Object.create(null)\n  data.size = 0\n\n  Object.defineProperty(this, '_data', {\n    value: data,\n    enumerable: false,\n    configurable: true,\n    writable: false\n  })\n}\n\nObject.defineProperty(PseudoMap.prototype, 'size', {\n  get: function () {\n    return this._data.size\n  },\n  set: function (n) {},\n  enumerable: true,\n  configurable: true\n})\n\nPseudoMap.prototype.values =\nPseudoMap.prototype.keys =\nPseudoMap.prototype.entries = function () {\n  throw new Error('iterators are not implemented in this version')\n}\n\n// Either identical, or both NaN\nfunction same (a, b) {\n  return a === b || a !== a && b !== b\n}\n\nfunction Entry (k, v, i) {\n  this.key = k\n  this.value = v\n  this._index = i\n}\n\nfunction find (data, k) {\n  for (var i = 0, s = '_' + k, key = s;\n       hasOwnProperty.call(data, key);\n       key = s + i++) {\n    if (same(data[key].key, k))\n      return data[key]\n  }\n}\n\nfunction set (data, k, v) {\n  for (var i = 0, s = '_' + k, key = s;\n       hasOwnProperty.call(data, key);\n       key = s + i++) {\n    if (same(data[key].key, k)) {\n      data[key].value = v\n      return\n    }\n  }\n  data.size++\n  data[key] = new Entry(k, v, key)\n}\n", "if (process.env.npm_package_name === 'pseudomap' &&\n    process.env.npm_lifecycle_script === 'test')\n  process.env.TEST_PSEUDOMAP = 'true'\n\nif (typeof Map === 'function' && !process.env.TEST_PSEUDOMAP) {\n  module.exports = Map\n} else {\n  module.exports = require('./pseudomap')\n}\n", "module.exports = Yallist\n\nYallist.Node = Node\nYallist.create = Yallist\n\nfunction Yallist (list) {\n  var self = this\n  if (!(self instanceof Yallist)) {\n    self = new Yallist()\n  }\n\n  self.tail = null\n  self.head = null\n  self.length = 0\n\n  if (list && typeof list.forEach === 'function') {\n    list.forEach(function (item) {\n      self.push(item)\n    })\n  } else if (arguments.length > 0) {\n    for (var i = 0, l = arguments.length; i < l; i++) {\n      self.push(arguments[i])\n    }\n  }\n\n  return self\n}\n\nYallist.prototype.removeNode = function (node) {\n  if (node.list !== this) {\n    throw new Error('removing node which does not belong to this list')\n  }\n\n  var next = node.next\n  var prev = node.prev\n\n  if (next) {\n    next.prev = prev\n  }\n\n  if (prev) {\n    prev.next = next\n  }\n\n  if (node === this.head) {\n    this.head = next\n  }\n  if (node === this.tail) {\n    this.tail = prev\n  }\n\n  node.list.length--\n  node.next = null\n  node.prev = null\n  node.list = null\n}\n\nYallist.prototype.unshiftNode = function (node) {\n  if (node === this.head) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var head = this.head\n  node.list = this\n  node.next = head\n  if (head) {\n    head.prev = node\n  }\n\n  this.head = node\n  if (!this.tail) {\n    this.tail = node\n  }\n  this.length++\n}\n\nYallist.prototype.pushNode = function (node) {\n  if (node === this.tail) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var tail = this.tail\n  node.list = this\n  node.prev = tail\n  if (tail) {\n    tail.next = node\n  }\n\n  this.tail = node\n  if (!this.head) {\n    this.head = node\n  }\n  this.length++\n}\n\nYallist.prototype.push = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    push(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.unshift = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    unshift(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.pop = function () {\n  if (!this.tail) {\n    return undefined\n  }\n\n  var res = this.tail.value\n  this.tail = this.tail.prev\n  if (this.tail) {\n    this.tail.next = null\n  } else {\n    this.head = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.shift = function () {\n  if (!this.head) {\n    return undefined\n  }\n\n  var res = this.head.value\n  this.head = this.head.next\n  if (this.head) {\n    this.head.prev = null\n  } else {\n    this.tail = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.forEach = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.head, i = 0; walker !== null; i++) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.next\n  }\n}\n\nYallist.prototype.forEachReverse = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.tail, i = this.length - 1; walker !== null; i--) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.prev\n  }\n}\n\nYallist.prototype.get = function (n) {\n  for (var i = 0, walker = this.head; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.next\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.getReverse = function (n) {\n  for (var i = 0, walker = this.tail; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.prev\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.map = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.head; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.next\n  }\n  return res\n}\n\nYallist.prototype.mapReverse = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.tail; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.prev\n  }\n  return res\n}\n\nYallist.prototype.reduce = function (fn, initial) {\n  var acc\n  var walker = this.head\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.head) {\n    walker = this.head.next\n    acc = this.head.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = 0; walker !== null; i++) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.next\n  }\n\n  return acc\n}\n\nYallist.prototype.reduceReverse = function (fn, initial) {\n  var acc\n  var walker = this.tail\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.tail) {\n    walker = this.tail.prev\n    acc = this.tail.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = this.length - 1; walker !== null; i--) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.prev\n  }\n\n  return acc\n}\n\nYallist.prototype.toArray = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.head; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.next\n  }\n  return arr\n}\n\nYallist.prototype.toArrayReverse = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.tail; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.prev\n  }\n  return arr\n}\n\nYallist.prototype.slice = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = 0, walker = this.head; walker !== null && i < from; i++) {\n    walker = walker.next\n  }\n  for (; walker !== null && i < to; i++, walker = walker.next) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.sliceReverse = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = this.length, walker = this.tail; walker !== null && i > to; i--) {\n    walker = walker.prev\n  }\n  for (; walker !== null && i > from; i--, walker = walker.prev) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.reverse = function () {\n  var head = this.head\n  var tail = this.tail\n  for (var walker = head; walker !== null; walker = walker.prev) {\n    var p = walker.prev\n    walker.prev = walker.next\n    walker.next = p\n  }\n  this.head = tail\n  this.tail = head\n  return this\n}\n\nfunction push (self, item) {\n  self.tail = new Node(item, self.tail, null, self)\n  if (!self.head) {\n    self.head = self.tail\n  }\n  self.length++\n}\n\nfunction unshift (self, item) {\n  self.head = new Node(item, null, self.head, self)\n  if (!self.tail) {\n    self.tail = self.head\n  }\n  self.length++\n}\n\nfunction Node (value, prev, next, list) {\n  if (!(this instanceof Node)) {\n    return new Node(value, prev, next, list)\n  }\n\n  this.list = list\n  this.value = value\n\n  if (prev) {\n    prev.next = this\n    this.prev = prev\n  } else {\n    this.prev = null\n  }\n\n  if (next) {\n    next.prev = this\n    this.next = next\n  } else {\n    this.next = null\n  }\n}\n", "module.exports = LRUCache\n\n// This will be a proper iterable 'Map' in engines that support it,\n// or a fakey-fake PseudoMap in older versions.\nvar Map = require('pseudomap')\nvar util = require('util')\n\n// A linked list to keep track of recently-used-ness\nvar Yallist = require('yallist')\n\n// use symbols if possible, otherwise just _props\nvar symbols = {}\nvar hasSymbol = typeof Symbol === 'function'\nvar makeSymbol\n/* istanbul ignore if */\nif (hasSymbol) {\n  makeSymbol = function (key) {\n    return Symbol.for(key)\n  }\n} else {\n  makeSymbol = function (key) {\n    return '_' + key\n  }\n}\n\nfunction priv (obj, key, val) {\n  var sym\n  if (symbols[key]) {\n    sym = symbols[key]\n  } else {\n    sym = makeSymbol(key)\n    symbols[key] = sym\n  }\n  if (arguments.length === 2) {\n    return obj[sym]\n  } else {\n    obj[sym] = val\n    return val\n  }\n}\n\nfunction naiveLength () { return 1 }\n\n// lruList is a yallist where the head is the youngest\n// item, and the tail is the oldest.  the list contains the Hit\n// objects as the entries.\n// Each Hit object has a reference to its Yallist.Node.  This\n// never changes.\n//\n// cache is a Map (or PseudoMap) that matches the keys to\n// the Yallist.Node object.\nfunction LRUCache (options) {\n  if (!(this instanceof LRUCache)) {\n    return new LRUCache(options)\n  }\n\n  if (typeof options === 'number') {\n    options = { max: options }\n  }\n\n  if (!options) {\n    options = {}\n  }\n\n  var max = priv(this, 'max', options.max)\n  // Kind of weird to have a default max of Infinity, but oh well.\n  if (!max ||\n      !(typeof max === 'number') ||\n      max <= 0) {\n    priv(this, 'max', Infinity)\n  }\n\n  var lc = options.length || naiveLength\n  if (typeof lc !== 'function') {\n    lc = naiveLength\n  }\n  priv(this, 'lengthCalculator', lc)\n\n  priv(this, 'allowStale', options.stale || false)\n  priv(this, 'maxAge', options.maxAge || 0)\n  priv(this, 'dispose', options.dispose)\n  this.reset()\n}\n\n// resize the cache when the max changes.\nObject.defineProperty(LRUCache.prototype, 'max', {\n  set: function (mL) {\n    if (!mL || !(typeof mL === 'number') || mL <= 0) {\n      mL = Infinity\n    }\n    priv(this, 'max', mL)\n    trim(this)\n  },\n  get: function () {\n    return priv(this, 'max')\n  },\n  enumerable: true\n})\n\nObject.defineProperty(LRUCache.prototype, 'allowStale', {\n  set: function (allowStale) {\n    priv(this, 'allowStale', !!allowStale)\n  },\n  get: function () {\n    return priv(this, 'allowStale')\n  },\n  enumerable: true\n})\n\nObject.defineProperty(LRUCache.prototype, 'maxAge', {\n  set: function (mA) {\n    if (!mA || !(typeof mA === 'number') || mA < 0) {\n      mA = 0\n    }\n    priv(this, 'maxAge', mA)\n    trim(this)\n  },\n  get: function () {\n    return priv(this, 'maxAge')\n  },\n  enumerable: true\n})\n\n// resize the cache when the lengthCalculator changes.\nObject.defineProperty(LRUCache.prototype, 'lengthCalculator', {\n  set: function (lC) {\n    if (typeof lC !== 'function') {\n      lC = naiveLength\n    }\n    if (lC !== priv(this, 'lengthCalculator')) {\n      priv(this, 'lengthCalculator', lC)\n      priv(this, 'length', 0)\n      priv(this, 'lruList').forEach(function (hit) {\n        hit.length = priv(this, 'lengthCalculator').call(this, hit.value, hit.key)\n        priv(this, 'length', priv(this, 'length') + hit.length)\n      }, this)\n    }\n    trim(this)\n  },\n  get: function () { return priv(this, 'lengthCalculator') },\n  enumerable: true\n})\n\nObject.defineProperty(LRUCache.prototype, 'length', {\n  get: function () { return priv(this, 'length') },\n  enumerable: true\n})\n\nObject.defineProperty(LRUCache.prototype, 'itemCount', {\n  get: function () { return priv(this, 'lruList').length },\n  enumerable: true\n})\n\nLRUCache.prototype.rforEach = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = priv(this, 'lruList').tail; walker !== null;) {\n    var prev = walker.prev\n    forEachStep(this, fn, walker, thisp)\n    walker = prev\n  }\n}\n\nfunction forEachStep (self, fn, node, thisp) {\n  var hit = node.value\n  if (isStale(self, hit)) {\n    del(self, node)\n    if (!priv(self, 'allowStale')) {\n      hit = undefined\n    }\n  }\n  if (hit) {\n    fn.call(thisp, hit.value, hit.key, self)\n  }\n}\n\nLRUCache.prototype.forEach = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = priv(this, 'lruList').head; walker !== null;) {\n    var next = walker.next\n    forEachStep(this, fn, walker, thisp)\n    walker = next\n  }\n}\n\nLRUCache.prototype.keys = function () {\n  return priv(this, 'lruList').toArray().map(function (k) {\n    return k.key\n  }, this)\n}\n\nLRUCache.prototype.values = function () {\n  return priv(this, 'lruList').toArray().map(function (k) {\n    return k.value\n  }, this)\n}\n\nLRUCache.prototype.reset = function () {\n  if (priv(this, 'dispose') &&\n      priv(this, 'lruList') &&\n      priv(this, 'lruList').length) {\n    priv(this, 'lruList').forEach(function (hit) {\n      priv(this, 'dispose').call(this, hit.key, hit.value)\n    }, this)\n  }\n\n  priv(this, 'cache', new Map()) // hash of items by key\n  priv(this, 'lruList', new Yallist()) // list of items in order of use recency\n  priv(this, 'length', 0) // length of items in the list\n}\n\nLRUCache.prototype.dump = function () {\n  return priv(this, 'lruList').map(function (hit) {\n    if (!isStale(this, hit)) {\n      return {\n        k: hit.key,\n        v: hit.value,\n        e: hit.now + (hit.maxAge || 0)\n      }\n    }\n  }, this).toArray().filter(function (h) {\n    return h\n  })\n}\n\nLRUCache.prototype.dumpLru = function () {\n  return priv(this, 'lruList')\n}\n\nLRUCache.prototype.inspect = function (n, opts) {\n  var str = 'LRUCache {'\n  var extras = false\n\n  var as = priv(this, 'allowStale')\n  if (as) {\n    str += '\\n  allowStale: true'\n    extras = true\n  }\n\n  var max = priv(this, 'max')\n  if (max && max !== Infinity) {\n    if (extras) {\n      str += ','\n    }\n    str += '\\n  max: ' + util.inspect(max, opts)\n    extras = true\n  }\n\n  var maxAge = priv(this, 'maxAge')\n  if (maxAge) {\n    if (extras) {\n      str += ','\n    }\n    str += '\\n  maxAge: ' + util.inspect(maxAge, opts)\n    extras = true\n  }\n\n  var lc = priv(this, 'lengthCalculator')\n  if (lc && lc !== naiveLength) {\n    if (extras) {\n      str += ','\n    }\n    str += '\\n  length: ' + util.inspect(priv(this, 'length'), opts)\n    extras = true\n  }\n\n  var didFirst = false\n  priv(this, 'lruList').forEach(function (item) {\n    if (didFirst) {\n      str += ',\\n  '\n    } else {\n      if (extras) {\n        str += ',\\n'\n      }\n      didFirst = true\n      str += '\\n  '\n    }\n    var key = util.inspect(item.key).split('\\n').join('\\n  ')\n    var val = { value: item.value }\n    if (item.maxAge !== maxAge) {\n      val.maxAge = item.maxAge\n    }\n    if (lc !== naiveLength) {\n      val.length = item.length\n    }\n    if (isStale(this, item)) {\n      val.stale = true\n    }\n\n    val = util.inspect(val, opts).split('\\n').join('\\n  ')\n    str += key + ' => ' + val\n  })\n\n  if (didFirst || extras) {\n    str += '\\n'\n  }\n  str += '}'\n\n  return str\n}\n\nLRUCache.prototype.set = function (key, value, maxAge) {\n  maxAge = maxAge || priv(this, 'maxAge')\n\n  var now = maxAge ? Date.now() : 0\n  var len = priv(this, 'lengthCalculator').call(this, value, key)\n\n  if (priv(this, 'cache').has(key)) {\n    if (len > priv(this, 'max')) {\n      del(this, priv(this, 'cache').get(key))\n      return false\n    }\n\n    var node = priv(this, 'cache').get(key)\n    var item = node.value\n\n    // dispose of the old one before overwriting\n    if (priv(this, 'dispose')) {\n      priv(this, 'dispose').call(this, key, item.value)\n    }\n\n    item.now = now\n    item.maxAge = maxAge\n    item.value = value\n    priv(this, 'length', priv(this, 'length') + (len - item.length))\n    item.length = len\n    this.get(key)\n    trim(this)\n    return true\n  }\n\n  var hit = new Entry(key, value, len, now, maxAge)\n\n  // oversized objects fall out of cache automatically.\n  if (hit.length > priv(this, 'max')) {\n    if (priv(this, 'dispose')) {\n      priv(this, 'dispose').call(this, key, value)\n    }\n    return false\n  }\n\n  priv(this, 'length', priv(this, 'length') + hit.length)\n  priv(this, 'lruList').unshift(hit)\n  priv(this, 'cache').set(key, priv(this, 'lruList').head)\n  trim(this)\n  return true\n}\n\nLRUCache.prototype.has = function (key) {\n  if (!priv(this, 'cache').has(key)) return false\n  var hit = priv(this, 'cache').get(key).value\n  if (isStale(this, hit)) {\n    return false\n  }\n  return true\n}\n\nLRUCache.prototype.get = function (key) {\n  return get(this, key, true)\n}\n\nLRUCache.prototype.peek = function (key) {\n  return get(this, key, false)\n}\n\nLRUCache.prototype.pop = function () {\n  var node = priv(this, 'lruList').tail\n  if (!node) return null\n  del(this, node)\n  return node.value\n}\n\nLRUCache.prototype.del = function (key) {\n  del(this, priv(this, 'cache').get(key))\n}\n\nLRUCache.prototype.load = function (arr) {\n  // reset the cache\n  this.reset()\n\n  var now = Date.now()\n  // A previous serialized cache has the most recent items first\n  for (var l = arr.length - 1; l >= 0; l--) {\n    var hit = arr[l]\n    var expiresAt = hit.e || 0\n    if (expiresAt === 0) {\n      // the item was created without expiration in a non aged cache\n      this.set(hit.k, hit.v)\n    } else {\n      var maxAge = expiresAt - now\n      // dont add already expired items\n      if (maxAge > 0) {\n        this.set(hit.k, hit.v, maxAge)\n      }\n    }\n  }\n}\n\nLRUCache.prototype.prune = function () {\n  var self = this\n  priv(this, 'cache').forEach(function (value, key) {\n    get(self, key, false)\n  })\n}\n\nfunction get (self, key, doUse) {\n  var node = priv(self, 'cache').get(key)\n  if (node) {\n    var hit = node.value\n    if (isStale(self, hit)) {\n      del(self, node)\n      if (!priv(self, 'allowStale')) hit = undefined\n    } else {\n      if (doUse) {\n        priv(self, 'lruList').unshiftNode(node)\n      }\n    }\n    if (hit) hit = hit.value\n  }\n  return hit\n}\n\nfunction isStale (self, hit) {\n  if (!hit || (!hit.maxAge && !priv(self, 'maxAge'))) {\n    return false\n  }\n  var stale = false\n  var diff = Date.now() - hit.now\n  if (hit.maxAge) {\n    stale = diff > hit.maxAge\n  } else {\n    stale = priv(self, 'maxAge') && (diff > priv(self, 'maxAge'))\n  }\n  return stale\n}\n\nfunction trim (self) {\n  if (priv(self, 'length') > priv(self, 'max')) {\n    for (var walker = priv(self, 'lruList').tail;\n         priv(self, 'length') > priv(self, 'max') && walker !== null;) {\n      // We know that we're about to delete this one, and also\n      // what the next least recently used key will be, so just\n      // go ahead and set it now.\n      var prev = walker.prev\n      del(self, walker)\n      walker = prev\n    }\n  }\n}\n\nfunction del (self, node) {\n  if (node) {\n    var hit = node.value\n    if (priv(self, 'dispose')) {\n      priv(self, 'dispose').call(this, hit.key, hit.value)\n    }\n    priv(self, 'length', priv(self, 'length') - hit.length)\n    priv(self, 'cache').delete(hit.key)\n    priv(self, 'lruList').removeNode(node)\n  }\n}\n\n// classy, since V8 prefers predictable objects.\nfunction Entry (key, value, length, now, maxAge) {\n  this.key = key\n  this.value = value\n  this.length = length\n  this.now = now\n  this.maxAge = maxAge || 0\n}\n", "/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/**\n * Adds the key-value `pair` to `map`.\n *\n * @private\n * @param {Object} map The map to modify.\n * @param {Array} pair The key-value pair to add.\n * @returns {Object} Returns `map`.\n */\nfunction addMapEntry(map, pair) {\n  // Don't return `map.set` because it's not chainable in IE 11.\n  map.set(pair[0], pair[1]);\n  return map;\n}\n\n/**\n * Adds `value` to `set`.\n *\n * @private\n * @param {Object} set The set to modify.\n * @param {*} value The value to add.\n * @returns {Object} Returns `set`.\n */\nfunction addSetEntry(set, value) {\n  // Don't return `set.add` because it's not chainable in IE 11.\n  set.add(value);\n  return set;\n}\n\n/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array ? array.length : 0;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\n/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\n/**\n * A specialized version of `_.reduce` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the first element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduce(array, iteratee, accumulator, initAccum) {\n  var index = -1,\n      length = array ? array.length : 0;\n\n  if (initAccum && length) {\n    accumulator = array[++index];\n  }\n  while (++index < length) {\n    accumulator = iteratee(accumulator, array[index], index, array);\n  }\n  return accumulator;\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\n/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    Symbol = root.Symbol,\n    Uint8Array = root.Uint8Array,\n    getPrototype = overArg(Object.getPrototypeOf, Object),\n    objectCreate = Object.create,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\n    splice = arrayProto.splice;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols,\n    nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n    nativeKeys = overArg(Object.keys, Object);\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView'),\n    Map = getNative(root, 'Map'),\n    Promise = getNative(root, 'Promise'),\n    Set = getNative(root, 'Set'),\n    WeakMap = getNative(root, 'WeakMap'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  return this.has(key) && delete this.__data__[key];\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  return getMapData(this, key)['delete'](key);\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  getMapData(this, key).set(key, value);\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  this.__data__ = new ListCache(entries);\n}\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n}\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  return this.__data__['delete'](key);\n}\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var cache = this.__data__;\n  if (cache instanceof ListCache) {\n    var pairs = cache.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      return this;\n    }\n    cache = this.__data__ = new MapCache(pairs);\n  }\n  cache.set(key, value);\n  return this;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  // Safari 9 makes `arguments.length` enumerable in strict mode.\n  var result = (isArray(value) || isArguments(value))\n    ? baseTimes(value.length, String)\n    : [];\n\n  var length = result.length,\n      skipIndexes = !!length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (key == 'length' || isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    object[key] = value;\n  }\n}\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @param {boolean} [isFull] Specify a clone including symbols.\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, isDeep, isFull, customizer, key, object, stack) {\n  var result;\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      if (isHostObject(value)) {\n        return object ? value : {};\n      }\n      result = initCloneObject(isFunc ? {} : value);\n      if (!isDeep) {\n        return copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, baseClone, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (!isArr) {\n    var props = isFull ? getAllKeys(value) : keys(value);\n  }\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, isDeep, isFull, customizer, key, value, stack));\n  });\n  return result;\n}\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} prototype The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nfunction baseCreate(proto) {\n  return isObject(proto) ? objectCreate(proto) : {};\n}\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\n/**\n * The base implementation of `getTag`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  return objectToString.call(value);\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var result = new buffer.constructor(buffer.length);\n  buffer.copy(result);\n  return result;\n}\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\n/**\n * Creates a clone of `map`.\n *\n * @private\n * @param {Object} map The map to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned map.\n */\nfunction cloneMap(map, isDeep, cloneFunc) {\n  var array = isDeep ? cloneFunc(mapToArray(map), true) : mapToArray(map);\n  return arrayReduce(array, addMapEntry, new map.constructor);\n}\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\n/**\n * Creates a clone of `set`.\n *\n * @private\n * @param {Object} set The set to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned set.\n */\nfunction cloneSet(set, isDeep, cloneFunc) {\n  var array = isDeep ? cloneFunc(setToArray(set), true) : setToArray(set);\n  return arrayReduce(array, addSetEntry, new set.constructor);\n}\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\n/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    assignValue(object, key, newValue === undefined ? source[key] : newValue);\n  }\n  return object;\n}\n\n/**\n * Copies own symbol properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * Creates an array of the own enumerable symbol properties of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = nativeGetSymbols ? overArg(nativeGetSymbols, Object) : stubArray;\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11,\n// for data views in Edge < 14, and promises in Node.js.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = objectToString.call(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : undefined;\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, cloneFunc, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return cloneMap(object, isDeep, cloneFunc);\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return cloneSet(object, isDeep, cloneFunc);\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to process.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n  return baseClone(value, true, true);\n}\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\n/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\n/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = cloneDeep;\n", null, null, null, null, "const logger = require('debug')('jwks');\nconst memoizer = require('lru-memoizer');\nconst { promisify, callbackify } = require('util');\n\nfunction cacheWrapper(client, { cacheMaxEntries = 5, cacheMaxAge = 600000 }) {\n  logger(`Configured caching of signing keys. Max: ${cacheMaxEntries} / Age: ${cacheMaxAge}`);\n  return promisify(memoizer({\n    hash: (kid) => kid,\n    load: callbackify(client.getSigningKey.bind(client)),\n    maxAge: cacheMaxAge,\n    max: cacheMaxEntries\n  }));\n}\n\nmodule.exports.default = cacheWrapper;\n", "\r\n/**\r\n * A hierarchical token bucket for rate limiting. See\r\n * http://en.wikipedia.org/wiki/Token_bucket for more information.\r\n * @author John Hurliman <jhurliman@cull.tv>\r\n *\r\n * @param {Number} bucketSize Maximum number of tokens to hold in the bucket.\r\n *  Also known as the burst rate.\r\n * @param {Number} tokensPerInterval Number of tokens to drip into the bucket\r\n *  over the course of one interval.\r\n * @param {String|Number} interval The interval length in milliseconds, or as\r\n *  one of the following strings: 'second', 'minute', 'hour', day'.\r\n * @param {TokenBucket} parentBucket Optional. A token bucket that will act as\r\n *  the parent of this bucket.\r\n */\r\nvar TokenBucket = function(bucketSize, tokensPerInterval, interval, parentBucket) {\r\n  this.bucketSize = bucketSize;\r\n  this.tokensPerInterval = tokensPerInterval;\r\n\r\n  if (typeof interval === 'string') {\r\n    switch (interval) {\r\n      case 'sec': case 'second':\r\n        this.interval = 1000; break;\r\n      case 'min': case 'minute':\r\n        this.interval = 1000 * 60; break;\r\n      case 'hr': case 'hour':\r\n        this.interval = 1000 * 60 * 60; break;\r\n      case 'day':\r\n        this.interval = 1000 * 60 * 60 * 24; break;\r\n      default:\r\n        throw new Error('Invaid interval ' + interval);\r\n    }\r\n  } else {\r\n    this.interval = interval;\r\n  }\r\n\r\n  this.parentBucket = parentBucket;\r\n  this.content = 0;\r\n  this.lastDrip = +new Date();\r\n};\r\n\r\nTokenBucket.prototype = {\r\n  bucketSize: 1,\r\n  tokensPerInterval: 1,\r\n  interval: 1000,\r\n  parentBucket: null,\r\n  content: 0,\r\n  lastDrip: 0,\r\n\r\n  /**\r\n   * Remove the requested number of tokens and fire the given callback. If the\r\n   * bucket (and any parent buckets) contains enough tokens this will happen\r\n   * immediately. Otherwise, the removal and callback will happen when enough\r\n   * tokens become available.\r\n   * @param {Number} count The number of tokens to remove.\r\n   * @param {Function} callback(err, remainingTokens)\r\n   * @returns {Boolean} True if the callback was fired immediately, otherwise\r\n   *  false.\r\n   */\r\n  removeTokens: function(count, callback) {\r\n    var self = this;\r\n\r\n    // Is this an infinite size bucket?\r\n    if (!this.bucketSize) {\r\n      process.nextTick(callback.bind(null, null, count, Number.POSITIVE_INFINITY));\r\n      return true;\r\n    }\r\n\r\n    // Make sure the bucket can hold the requested number of tokens\r\n    if (count > this.bucketSize) {\r\n      process.nextTick(callback.bind(null, 'Requested tokens ' + count + ' exceeds bucket size ' +\r\n        this.bucketSize, null));\r\n      return false;\r\n    }\r\n\r\n    // Drip new tokens into this bucket\r\n    this.drip();\r\n\r\n    // If we don't have enough tokens in this bucket, come back later\r\n    if (count > this.content)\r\n      return comeBackLater();\r\n\r\n    if (this.parentBucket) {\r\n      // Remove the requested from the parent bucket first\r\n      return this.parentBucket.removeTokens(count, function(err, remainingTokens) {\r\n        if (err) return callback(err, null);\r\n\r\n        // Check that we still have enough tokens in this bucket\r\n        if (count > self.content)\r\n          return comeBackLater();\r\n\r\n        // Tokens were removed from the parent bucket, now remove them from\r\n        // this bucket and fire the callback. Note that we look at the current\r\n        // bucket and parent bucket's remaining tokens and return the smaller\r\n        // of the two values\r\n        self.content -= count;\r\n        callback(null, Math.min(remainingTokens, self.content));\r\n      });\r\n    } else {\r\n      // Remove the requested tokens from this bucket and fire the callback\r\n      this.content -= count;\r\n      process.nextTick(callback.bind(null, null, this.content));\r\n      return true;\r\n    }\r\n\r\n    function comeBackLater() {\r\n      // How long do we need to wait to make up the difference in tokens?\r\n      var waitInterval = Math.ceil(\r\n        (count - self.content) * (self.interval / self.tokensPerInterval));\r\n      setTimeout(function() { self.removeTokens(count, callback); }, waitInterval);\r\n      return false;\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Attempt to remove the requested number of tokens and return immediately.\r\n   * If the bucket (and any parent buckets) contains enough tokens this will\r\n   * return true, otherwise false is returned.\r\n   * @param {Number} count The number of tokens to remove.\r\n   * @param {Boolean} True if the tokens were successfully removed, otherwise\r\n   *  false.\r\n   */\r\n  tryRemoveTokens: function(count) {\r\n    // Is this an infinite size bucket?\r\n    if (!this.bucketSize)\r\n      return true;\r\n\r\n    // Make sure the bucket can hold the requested number of tokens\r\n    if (count > this.bucketSize)\r\n      return false;\r\n\r\n    // Drip new tokens into this bucket\r\n    this.drip();\r\n\r\n    // If we don't have enough tokens in this bucket, return false\r\n    if (count > this.content)\r\n      return false;\r\n\r\n    // Try to remove the requested tokens from the parent bucket\r\n    if (this.parentBucket && !this.parentBucket.tryRemoveTokens(count))\r\n      return false;\r\n\r\n    // Remove the requested tokens from this bucket and return\r\n    this.content -= count;\r\n    return true;\r\n  },\r\n\r\n  /**\r\n   * Add any new tokens to the bucket since the last drip.\r\n   * @returns {Boolean} True if new tokens were added, otherwise false.\r\n   */\r\n  drip: function() {\r\n    if (!this.tokensPerInterval) {\r\n      this.content = this.bucketSize;\r\n      return;\r\n    }\r\n\r\n    var now = +new Date();\r\n    var deltaMS = Math.max(now - this.lastDrip, 0);\r\n    this.lastDrip = now;\r\n\r\n    var dripAmount = deltaMS * (this.tokensPerInterval / this.interval);\r\n    this.content = Math.min(this.content + dripAmount, this.bucketSize);\r\n  }\r\n};\r\n\r\nmodule.exports = TokenBucket;\r\n", "var getMilliseconds = function() {\r\n  if (typeof process !== 'undefined' && process.hrtime) {\r\n    var hrtime = process.hrtime();\r\n    var seconds = hrtime[0];\r\n    var nanoseconds = hrtime[1];\r\n\r\n    return seconds * 1e3 +  Math.floor(nanoseconds / 1e6);\r\n  }\r\n\r\n  return new Date().getTime();\r\n}\r\n\r\nmodule.exports = getMilliseconds;\r\n", "var TokenBucket = require('./tokenBucket');\r\nvar getMilliseconds = require('./clock');\r\n\r\n/**\r\n * A generic rate limiter. Underneath the hood, this uses a token bucket plus\r\n * an additional check to limit how many tokens we can remove each interval.\r\n * @author John Hurliman <jhurliman@jhurliman.org>\r\n *\r\n * @param {Number} tokensPerInterval Maximum number of tokens that can be\r\n *  removed at any given moment and over the course of one interval.\r\n * @param {String|Number} interval The interval length in milliseconds, or as\r\n *  one of the following strings: 'second', 'minute', 'hour', day'.\r\n * @param {Boolean} fireImmediately Optional. Whether or not the callback\r\n *  will fire immediately when rate limiting is in effect (default is false).\r\n */\r\nvar RateLimiter = function(tokensPerInterval, interval, fireImmediately) {\r\n  this.tokenBucket = new TokenBucket(tokensPerInterval, tokensPerInterval,\r\n    interval, null);\r\n\r\n  // Fill the token bucket to start\r\n  this.tokenBucket.content = tokensPerInterval;\r\n\r\n  this.curIntervalStart = getMilliseconds();\r\n  this.tokensThisInterval = 0;\r\n  this.fireImmediately = fireImmediately;\r\n};\r\n\r\nRateLimiter.prototype = {\r\n  tokenBucket: null,\r\n  curIntervalStart: 0,\r\n  tokensThisInterval: 0,\r\n  fireImmediately: false,\r\n\r\n  /**\r\n   * Remove the requested number of tokens and fire the given callback. If the\r\n   * rate limiter contains enough tokens and we haven't spent too many tokens\r\n   * in this interval already, this will happen immediately. Otherwise, the\r\n   * removal and callback will happen when enough tokens become available.\r\n   * @param {Number} count The number of tokens to remove.\r\n   * @param {Function} callback(err, remainingTokens)\r\n   * @returns {Boolean} True if the callback was fired immediately, otherwise\r\n   *  false.\r\n   */\r\n  removeTokens: function(count, callback) {\r\n    // Make sure the request isn't for more than we can handle\r\n    if (count > this.tokenBucket.bucketSize) {\r\n      process.nextTick(callback.bind(null, 'Requested tokens ' + count +\r\n        ' exceeds maximum tokens per interval ' + this.tokenBucket.bucketSize,\r\n        null));\r\n      return false;\r\n    }\r\n\r\n    var self = this;\r\n    var now = getMilliseconds();\r\n\r\n    // Advance the current interval and reset the current interval token count\r\n    // if needed\r\n    if (now < this.curIntervalStart\r\n      || now - this.curIntervalStart >= this.tokenBucket.interval) {\r\n      this.curIntervalStart = now;\r\n      this.tokensThisInterval = 0;\r\n    }\r\n\r\n    // If we don't have enough tokens left in this interval, wait until the\r\n    // next interval\r\n    if (count > this.tokenBucket.tokensPerInterval - this.tokensThisInterval) {\r\n      if (this.fireImmediately) {\r\n        process.nextTick(callback.bind(null, null, -1));\r\n      } else {\r\n        var waitInterval = Math.ceil(\r\n          this.curIntervalStart + this.tokenBucket.interval - now);\r\n\r\n        setTimeout(function() {\r\n          self.tokenBucket.removeTokens(count, afterTokensRemoved);\r\n        }, waitInterval);\r\n      }\r\n      return false;\r\n    }\r\n\r\n    // Remove the requested number of tokens from the token bucket\r\n    return this.tokenBucket.removeTokens(count, afterTokensRemoved);\r\n\r\n    function afterTokensRemoved(err, tokensRemaining) {\r\n      if (err) return callback(err, null);\r\n\r\n      self.tokensThisInterval += count;\r\n      callback(null, tokensRemaining);\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Attempt to remove the requested number of tokens and return immediately.\r\n   * If the bucket (and any parent buckets) contains enough tokens and we\r\n   * haven't spent too many tokens in this interval already, this will return\r\n   * true. Otherwise, false is returned.\r\n   * @param {Number} count The number of tokens to remove.\r\n   * @param {Boolean} True if the tokens were successfully removed, otherwise\r\n   *  false.\r\n   */\r\n  tryRemoveTokens: function(count) {\r\n    // Make sure the request isn't for more than we can handle\r\n    if (count > this.tokenBucket.bucketSize)\r\n      return false;\r\n\r\n    var now = getMilliseconds();\r\n\r\n    // Advance the current interval and reset the current interval token count\r\n    // if needed\r\n    if (now < this.curIntervalStart\r\n      || now - this.curIntervalStart >= this.tokenBucket.interval) {\r\n      this.curIntervalStart = now;\r\n      this.tokensThisInterval = 0;\r\n    }\r\n\r\n    // If we don't have enough tokens left in this interval, return false\r\n    if (count > this.tokenBucket.tokensPerInterval - this.tokensThisInterval)\r\n      return false;\r\n\r\n    // Try to remove the requested number of tokens from the token bucket\r\n    var removed = this.tokenBucket.tryRemoveTokens(count);\r\n    if (removed) {\r\n      this.tokensThisInterval += count;\r\n    }\r\n    return removed;\r\n  },\r\n\r\n  /**\r\n   * Returns the number of tokens remaining in the TokenBucket.\r\n   * @returns {Number} The number of tokens remaining.\r\n   */\r\n  getTokensRemaining: function () {\r\n    this.tokenBucket.drip();\r\n    return this.tokenBucket.content;\r\n  }\r\n};\r\n\r\nmodule.exports = RateLimiter;\r\n", "\r\nexports.RateLimiter = require('./lib/rateLimiter');\r\nexports.TokenBucket = require('./lib/tokenBucket');\r\n", "function JwksRateLimitError(message) {\n  Error.call(this, message);\n  Error.captureStackTrace(this, this.constructor);\n  this.name = 'JwksRateLimitError';\n  this.message = message;\n}\n\nJwksRateLimitError.prototype = Object.create(Error.prototype);\nJwksRateLimitError.prototype.constructor = JwksRateLimitError;\nmodule.exports = JwksRateLimitError;\n", "const logger = require('debug')('jwks');\nconst { RateLimiter } = require('limiter');\n\nconst JwksRateLimitError = require('../errors/JwksRateLimitError');\n\nfunction rateLimitWrapper(client, { jwksRequestsPerMinute = 10 }) {\n  const getSigningKey = client.getSigningKey.bind(client);\n\n  const limiter = new RateLimiter(jwksRequestsPerMinute, 'minute', true);\n  logger(`Configured rate limiting to JWKS endpoint at ${jwksRequestsPerMinute}/minute`);\n\n  return async (kid) => await new Promise((resolve, reject) => {\n    limiter.removeTokens(1, async (err, remaining) => {\n      if (err) {\n        reject(err);\n      }\n\n      logger('Requests to the JWKS endpoint available for the next minute:', remaining);\n      if (remaining < 0) {\n        logger('Too many requests to the JWKS endpoint');\n        reject(new JwksRateLimitError('Too many requests to the JWKS endpoint'));\n      } else {\n        try {\n          const key = await getSigningKey(kid);\n          resolve(key);\n        } catch (error) {\n          reject(error);\n        }\n      }\n    });\n  });\n}\n\nmodule.exports.default = rateLimitWrapper;\n", "const retrieveSigningKeys = require('../utils').retrieveSigningKeys;\n\n/**\n * Uses getKeysInterceptor to allow users to retrieve keys from a file,\n * external cache, or provided object before falling back to the jwksUri endpoint\n */\nfunction getKeysInterceptor(client, { getKeysInterceptor }) {\n  const getSigningKey = client.getSigningKey.bind(client);\n\n  return async (kid) => {\n    const keys = await getKeysInterceptor();\n\n    let signingKeys;\n    if (keys && keys.length) {\n      signingKeys = await retrieveSigningKeys(keys);\n    }\n\n    if (signingKeys && signingKeys.length) {\n      const key = signingKeys.find(k => !kid || k.kid === kid);\n\n      if (key) {\n        return key;\n      }\n    }\n\n    return getSigningKey(kid);\n  };\n}\n\nmodule.exports.default = getKeysInterceptor;\n", "const { callbackify } = require('util');\n\nconst callbackSupport = (client) => {\n  const getSigningKey = client.getSigningKey.bind(client);\n\n  return (kid, cb) => {\n    if (cb) {\n      const callbackFunc = callbackify(getSigningKey);\n      return callbackFunc(kid, cb);\n    }\n\n    return getSigningKey(kid);\n  };\n};\n\nmodule.exports.default = callbackSupport;\n", "module.exports = {\n  request: require('./request').default,\n  cacheSigningKey: require('./cache').default,\n  rateLimitSigningKey: require('./rateLimit').default,\n  getKeysInterceptor: require('./interceptor').default,\n  callbackSupport: require('./callbackSupport').default\n};\n", "function SigningKeyNotFoundError(message) {\n  Error.call(this, message);\n  Error.captureStackTrace(this, this.constructor);\n  this.name = 'SigningKeyNotFoundError';\n  this.message = message;\n}\n\nSigningKeyNotFoundError.prototype = Object.create(Error.prototype);\nSigningKeyNotFoundError.prototype.constructor = SigningKeyNotFoundError;\nmodule.exports = SigningKeyNotFoundError;\n", "const logger = require('debug')('jwks');\nconst { retrieveSigningKeys } = require('./utils') ;\nconst { request, cacheSigningKey, rateLimitSigningKey, getKeysInterceptor, callbackSupport } = require('./wrappers');\nconst JwksError = require('./errors/JwksError');\nconst SigningKeyNotFoundError = require('./errors/SigningKeyNotFoundError');\n\nclass JwksClient {\n  constructor(options) {\n    this.options = {\n      rateLimit: false,\n      cache: true,\n      timeout: 30000,\n      ...options\n    };\n\n    // Initialize wrappers.\n    if (this.options.getKeysInterceptor) {\n      this.getSigningKey = getKeysInterceptor(this, options);\n    }\n\n    if (this.options.rateLimit) {\n      this.getSigningKey = rateLimitSigningKey(this, options);\n    }\n    if (this.options.cache) {\n      this.getSigningKey = cacheSigningKey(this, options);\n    }\n\n    this.getSigningKey = callbackSupport(this, options);\n  }\n\n  async getKeys() {\n    logger(`Fetching keys from '${this.options.jwksUri}'`);\n\n    try {\n      const res = await request({\n        uri: this.options.jwksUri,\n        headers: this.options.requestHeaders,\n        agent: this.options.requestAgent,\n        timeout: this.options.timeout,\n        fetcher: this.options.fetcher\n      });\n\n      logger('Keys:', res.keys);\n      return res.keys;\n    } catch (err) {\n      const { errorMsg } = err;\n      logger('Failure:', errorMsg || err);\n      throw (errorMsg ? new JwksError(errorMsg) : err);\n    }\n  }\n\n  async getSigningKeys() {\n    const keys = await this.getKeys();\n\n    if (!keys || !keys.length) {\n      throw new JwksError('The JWKS endpoint did not contain any keys');\n    }\n\n    const signingKeys = await retrieveSigningKeys(keys);\n\n    if (!signingKeys.length) {\n      throw new JwksError('The JWKS endpoint did not contain any signing keys');\n    }\n\n    logger('Signing Keys:', signingKeys);\n    return signingKeys;\n  }\n\n  async getSigningKey (kid) {\n    logger(`Fetching signing key for '${kid}'`);\n    const keys = await this.getSigningKeys();\n\n    const kidDefined = kid !== undefined && kid !== null;\n    if (!kidDefined && keys.length > 1) {\n      logger('No KID specified and JWKS endpoint returned more than 1 key');\n      throw new SigningKeyNotFoundError('No KID specified and JWKS endpoint returned more than 1 key');\n    }\n\n    const key = keys.find(k => !kidDefined || k.kid === kid);\n    if (key) {\n      return key;\n    } else {\n      logger(`Unable to find a signing key that matches '${kid}'`);\n      throw new SigningKeyNotFoundError(`Unable to find a signing key that matches '${kid}'`);\n    }\n  }\n}\n\nmodule.exports = {\n  JwksClient\n};\n", "function ArgumentError(message) {\n  Error.call(this, message);\n  Error.captureStackTrace(this, this.constructor);\n  this.name = 'ArgumentError';\n  this.message = message;\n}\n\nArgumentError.prototype = Object.create(Error.prototype);\nArgumentError.prototype.constructor = ArgumentError;\nmodule.exports = ArgumentError;\n", "module.exports = {\n  ArgumentError: require('./ArgumentError'),\n  JwksError: require('./JwksError'),\n  JwksRateLimitError: require('./JwksRateLimitError'),\n  SigningKeyNotFoundError: require('./SigningKeyNotFoundError')\n};\n", "const allowedSignatureAlg = [\n  'RS256',\n  'RS384',\n  'RS512',\n  'PS256',\n  'PS384',\n  'PS512',\n  'ES256',\n  'ES256K',\n  'ES384',\n  'ES512',\n  'EdDSA'\n];\n\nmodule.exports = allowedSignatureAlg;\n", "const { ArgumentError } = require('../errors');\nconst { JwksClient } = require('../JwksClient');\nconst supportedAlg = require('./config');\n\nconst handleSigningKeyError = (err, cb) => {\n  // If we didn't find a match, can't provide a key.\n  if (err && err.name === 'SigningKeyNotFoundError') {\n    return cb(err, null, null);\n  }\n\n  // If an error occured like rate limiting or HTTP issue, we'll bubble up the error.\n  if (err) {\n    return cb(err, null, null);\n  }\n};\n\n/**\n * Call hapiJwt2Key as a Promise\n * @param {object} options \n * @returns {Promise}\n */\nmodule.exports.hapiJwt2KeyAsync = (options) => {\n  const secretProvider = module.exports.hapiJwt2Key(options);\n  return function(decoded) {\n    return new Promise((resolve, reject) => {\n      const cb = (err, key) => {\n        (!key || err) ? reject(err) : resolve({ key });\n      };\n      secretProvider(decoded, cb);\n    });\n  };\n}; \n\nmodule.exports.hapiJwt2Key = function (options) {\n  if (options === null || options === undefined) {\n    throw new ArgumentError('An options object must be provided when initializing hapiJwt2Key');\n  }\n\n  const client = new JwksClient(options);\n  const onError = options.handleSigningKeyError || handleSigningKeyError;\n\n  return function secretProvider(decoded, cb) {\n    // We cannot find a signing certificate if there is no header (no kid).\n    if (!decoded || !decoded.header) {\n      return cb(new Error('Cannot find a signing certificate if there is no header'), null, null);\n    }\n\n    if (!supportedAlg.includes(decoded.header.alg)) {\n      return cb(new Error('Unsupported algorithm ' + decoded.header.alg + ' supplied.'), null, null);\n    }\n\n    client.getSigningKey(decoded.header.kid)\n      .then(key => {\n        return cb(null, key.publicKey || key.rsaPublicKey, key);\n      }).catch(err => {\n        return onError(err, (newError) => cb(newError, null, null));\n      });\n  };\n};\n", "const { ArgumentError } = require('../errors');\nconst { JwksClient } = require('../JwksClient');\nconst supportedAlg = require('./config');\n\nconst handleSigningKeyError = (err, cb) => {\n  // If we didn't find a match, can't provide a key.\n  if (err && err.name === 'SigningKeyNotFoundError') {\n    return cb(null);\n  }\n\n  // If an error occured like rate limiting or HTTP issue, we'll bubble up the error.\n  if (err) {\n    return cb(err);\n  }\n};\n\nmodule.exports.expressJwtSecret = function (options) {\n  if (options === null || options === undefined) {\n    throw new ArgumentError('An options object must be provided when initializing expressJwtSecret');\n  }\n\n  const client = new JwksClient(options);\n  const onError = options.handleSigningKeyError || handleSigningKeyError;\n\n  const expressJwt7Provider = async (req, token) => {\n    if (!token) { return; }\n    const header = token.header;\n    if (!header || !supportedAlg.includes(header.alg)) {\n      return;\n    }\n    try {\n      const key = await client.getSigningKey(header.kid);\n      return key.publicKey || key.rsaPublicKey;\n    } catch (err) {\n      return new Promise((resolve, reject) => {\n        onError(err, (newError) => {\n          if (!newError) { return resolve(); }\n          reject(newError);\n        });\n      });\n    }\n  };\n\n  return function secretProvider(req, header, payload, cb) {\n    //This function has 4 parameters to make it work with express-jwt@6\n    //but it also supports express-jwt@7 which only has 2.\n    if (arguments.length === 4) {\n      expressJwt7Provider(req, { header })\n        .then(key => {\n          setImmediate(cb, null, key);\n        }).catch(err => {\n          setImmediate(cb, err);\n        });\n\n      return;\n    }\n\n    return expressJwt7Provider(req, arguments[1]);\n  };\n};\n", "const { ArgumentError } = require('../errors');\nconst { JwksClient } = require('../JwksClient');\nconst supportedAlg = require('./config');\n\nmodule.exports.koaJwtSecret = function (options = {}) {\n  if (!options.jwksUri) {\n    throw new ArgumentError('No JWKS provided. Please provide a jwksUri');\n  }\n\n  const client = new JwksClient(options);\n\n  return function secretProvider({ alg, kid } = {}) {\n    return new Promise((resolve, reject) => {\n      if (!supportedAlg.includes(alg)) {\n        return reject(new Error('Missing / invalid token algorithm'));\n      }\n\n      client.getSigningKey(kid)\n        .then(key => {\n          resolve(key.publicKey || key.rsaPublicKey);\n        }).catch(err => {\n          if (options.handleSigningKeyError) {\n            return options.handleSigningKeyError(err).then(reject);\n          }\n\n          return reject(err);\n        });\n    });\n  };\n};\n", "const jose = require('jose');\nconst { ArgumentError } = require('../errors');\nconst { JwksClient } = require('../JwksClient');\nconst supportedAlg = require('./config');\n\nconst handleSigningKeyError = (err, cb) => {\n  // If we didn't find a match, can't provide a key.\n  if (err && err.name === 'SigningKeyNotFoundError') {\n    return cb(null);\n  }\n\n  // If an error occured like rate limiting or HTTP issue, we'll bubble up the error.\n  if (err) {\n    return cb(err);\n  }\n};\n\nmodule.exports.passportJwtSecret = function (options) {\n  if (options === null || options === undefined) {\n    throw new ArgumentError('An options object must be provided when initializing passportJwtSecret');\n  }\n\n  if (!options.jwksUri) {\n    throw new ArgumentError('No JWKS provided. Please provide a jwksUri');\n  }\n\n  const client = new JwksClient(options);\n  const onError = options.handleSigningKeyError || handleSigningKeyError;\n\n  return function secretProvider(req, rawJwtToken, cb) {\n    let decoded;\n    try {\n      decoded = {\n        payload: jose.decodeJwt(rawJwtToken),\n        header: jose.decodeProtectedHeader(rawJwtToken)\n      };\n    } catch (err) {\n      decoded = null;\n    }\n\n    if (!decoded || !supportedAlg.includes(decoded.header.alg)) {\n      return cb(null, null);\n    }\n\n    client.getSigningKey(decoded.header.kid)\n      .then(key => {\n        cb(null, key.publicKey || key.rsaPublicKey);\n      }).catch(err => {\n        onError(err, (newError) => cb(newError, null));\n      });\n  };\n};\n", "const { JwksClient } = require('./JwksClient');\nconst errors = require('./errors');\nconst { hapiJwt2Key, hapiJwt2KeyAsync } = require('./integrations/hapi');\nconst { expressJwtSecret } = require('./integrations/express');\nconst { koaJwtSecret } = require('./integrations/koa');\nconst { passportJwtSecret } = require('./integrations/passport');\n\nmodule.exports = (options) => {\n  return new JwksClient(options);\n};\nmodule.exports.JwksClient = JwksClient;\n\nmodule.exports.ArgumentError = errors.ArgumentError;\nmodule.exports.JwksError = errors.JwksError;\nmodule.exports.JwksRateLimitError = errors.JwksRateLimitError;\nmodule.exports.SigningKeyNotFoundError = errors.SigningKeyNotFoundError;\n\nmodule.exports.expressJwtSecret = expressJwtSecret;\nmodule.exports.hapiJwt2Key = hapiJwt2Key;\nmodule.exports.hapiJwt2KeyAsync = hapiJwt2KeyAsync;\nmodule.exports.koaJwtSecret = koaJwtSecret;\nmodule.exports.passportJwtSecret = passportJwtSecret;\n", "/*! firebase-admin v11.11.0 */\n\"use strict\";\n/*!\n * Copyright 2021 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JwtErrorCode = exports.JwtError = exports.decodeJwt = exports.verifyJwtSignature = exports.EmulatorSignatureVerifier = exports.PublicKeySignatureVerifier = exports.UrlKeyFetcher = exports.JwksFetcher = exports.ALGORITHM_RS256 = void 0;\nconst validator = require(\"./validator\");\nconst jwt = require(\"jsonwebtoken\");\nconst jwks = require(\"jwks-rsa\");\nconst api_request_1 = require(\"../utils/api-request\");\nexports.ALGORITHM_RS256 = 'RS256';\n// `jsonwebtoken` converts errors from the `getKey` callback to its own `JsonWebTokenError` type\n// and prefixes the error message with the following. Use the prefix to identify errors thrown\n// from the key provider callback.\n// https://github.com/auth0/node-jsonwebtoken/blob/d71e383862fc735991fd2e759181480f066bf138/verify.js#L96\nconst JWT_CALLBACK_ERROR_PREFIX = 'error in secret or public key callback: ';\nconst NO_MATCHING_KID_ERROR_MESSAGE = 'no-matching-kid-error';\nconst NO_KID_IN_HEADER_ERROR_MESSAGE = 'no-kid-in-header-error';\nconst HOUR_IN_SECONDS = 3600;\nclass JwksFetcher {\n    constructor(jwksUrl) {\n        this.publicKeysExpireAt = 0;\n        if (!validator.isURL(jwksUrl)) {\n            throw new Error('The provided JWKS URL is not a valid URL.');\n        }\n        this.client = jwks({\n            jwksUri: jwksUrl,\n            cache: false, // disable jwks-rsa LRU cache as the keys are always cached for 6 hours.\n        });\n    }\n    fetchPublicKeys() {\n        if (this.shouldRefresh()) {\n            return this.refresh();\n        }\n        return Promise.resolve(this.publicKeys);\n    }\n    shouldRefresh() {\n        return !this.publicKeys || this.publicKeysExpireAt <= Date.now();\n    }\n    refresh() {\n        return this.client.getSigningKeys()\n            .then((signingKeys) => {\n            // reset expire at from previous set of keys.\n            this.publicKeysExpireAt = 0;\n            const newKeys = signingKeys.reduce((map, signingKey) => {\n                map[signingKey.kid] = signingKey.getPublicKey();\n                return map;\n            }, {});\n            this.publicKeysExpireAt = Date.now() + (HOUR_IN_SECONDS * 6 * 1000);\n            this.publicKeys = newKeys;\n            return newKeys;\n        }).catch((err) => {\n            throw new Error(`Error fetching Json Web Keys: ${err.message}`);\n        });\n    }\n}\nexports.JwksFetcher = JwksFetcher;\n/**\n * Class to fetch public keys from a client certificates URL.\n */\nclass UrlKeyFetcher {\n    constructor(clientCertUrl, httpAgent) {\n        this.clientCertUrl = clientCertUrl;\n        this.httpAgent = httpAgent;\n        this.publicKeysExpireAt = 0;\n        if (!validator.isURL(clientCertUrl)) {\n            throw new Error('The provided public client certificate URL is not a valid URL.');\n        }\n    }\n    /**\n     * Fetches the public keys for the Google certs.\n     *\n     * @returns A promise fulfilled with public keys for the Google certs.\n     */\n    fetchPublicKeys() {\n        if (this.shouldRefresh()) {\n            return this.refresh();\n        }\n        return Promise.resolve(this.publicKeys);\n    }\n    /**\n     * Checks if the cached public keys need to be refreshed.\n     *\n     * @returns Whether the keys should be fetched from the client certs url or not.\n     */\n    shouldRefresh() {\n        return !this.publicKeys || this.publicKeysExpireAt <= Date.now();\n    }\n    refresh() {\n        const client = new api_request_1.HttpClient();\n        const request = {\n            method: 'GET',\n            url: this.clientCertUrl,\n            httpAgent: this.httpAgent,\n        };\n        return client.send(request).then((resp) => {\n            if (!resp.isJson() || resp.data.error) {\n                // Treat all non-json messages and messages with an 'error' field as\n                // error responses.\n                throw new api_request_1.HttpError(resp);\n            }\n            // reset expire at from previous set of keys.\n            this.publicKeysExpireAt = 0;\n            if (Object.prototype.hasOwnProperty.call(resp.headers, 'cache-control')) {\n                const cacheControlHeader = resp.headers['cache-control'];\n                const parts = cacheControlHeader.split(',');\n                parts.forEach((part) => {\n                    const subParts = part.trim().split('=');\n                    if (subParts[0] === 'max-age') {\n                        const maxAge = +subParts[1];\n                        this.publicKeysExpireAt = Date.now() + (maxAge * 1000);\n                    }\n                });\n            }\n            this.publicKeys = resp.data;\n            return resp.data;\n        }).catch((err) => {\n            if (err instanceof api_request_1.HttpError) {\n                let errorMessage = 'Error fetching public keys for Google certs: ';\n                const resp = err.response;\n                if (resp.isJson() && resp.data.error) {\n                    errorMessage += `${resp.data.error}`;\n                    if (resp.data.error_description) {\n                        errorMessage += ' (' + resp.data.error_description + ')';\n                    }\n                }\n                else {\n                    errorMessage += `${resp.text}`;\n                }\n                throw new Error(errorMessage);\n            }\n            throw err;\n        });\n    }\n}\nexports.UrlKeyFetcher = UrlKeyFetcher;\n/**\n * Class for verifying JWT signature with a public key.\n */\nclass PublicKeySignatureVerifier {\n    constructor(keyFetcher) {\n        this.keyFetcher = keyFetcher;\n        if (!validator.isNonNullObject(keyFetcher)) {\n            throw new Error('The provided key fetcher is not an object or null.');\n        }\n    }\n    static withCertificateUrl(clientCertUrl, httpAgent) {\n        return new PublicKeySignatureVerifier(new UrlKeyFetcher(clientCertUrl, httpAgent));\n    }\n    static withJwksUrl(jwksUrl) {\n        return new PublicKeySignatureVerifier(new JwksFetcher(jwksUrl));\n    }\n    verify(token) {\n        if (!validator.isString(token)) {\n            return Promise.reject(new JwtError(JwtErrorCode.INVALID_ARGUMENT, 'The provided token must be a string.'));\n        }\n        return verifyJwtSignature(token, getKeyCallback(this.keyFetcher), { algorithms: [exports.ALGORITHM_RS256] })\n            .catch((error) => {\n            if (error.code === JwtErrorCode.NO_KID_IN_HEADER) {\n                // No kid in JWT header. Try with all the public keys.\n                return this.verifyWithoutKid(token);\n            }\n            throw error;\n        });\n    }\n    verifyWithoutKid(token) {\n        return this.keyFetcher.fetchPublicKeys()\n            .then(publicKeys => this.verifyWithAllKeys(token, publicKeys));\n    }\n    verifyWithAllKeys(token, keys) {\n        const promises = [];\n        Object.values(keys).forEach((key) => {\n            const result = verifyJwtSignature(token, key)\n                .then(() => true)\n                .catch((error) => {\n                if (error.code === JwtErrorCode.TOKEN_EXPIRED) {\n                    throw error;\n                }\n                return false;\n            });\n            promises.push(result);\n        });\n        return Promise.all(promises)\n            .then((result) => {\n            if (result.every((r) => r === false)) {\n                throw new JwtError(JwtErrorCode.INVALID_SIGNATURE, 'Invalid token signature.');\n            }\n        });\n    }\n}\nexports.PublicKeySignatureVerifier = PublicKeySignatureVerifier;\n/**\n * Class for verifying unsigned (emulator) JWTs.\n */\nclass EmulatorSignatureVerifier {\n    verify(token) {\n        // Signature checks skipped for emulator; no need to fetch public keys.\n        return verifyJwtSignature(token, undefined, { algorithms: ['none'] });\n    }\n}\nexports.EmulatorSignatureVerifier = EmulatorSignatureVerifier;\n/**\n * Provides a callback to fetch public keys.\n *\n * @param fetcher - KeyFetcher to fetch the keys from.\n * @returns A callback function that can be used to get keys in `jsonwebtoken`.\n */\nfunction getKeyCallback(fetcher) {\n    return (header, callback) => {\n        if (!header.kid) {\n            callback(new Error(NO_KID_IN_HEADER_ERROR_MESSAGE));\n        }\n        const kid = header.kid || '';\n        fetcher.fetchPublicKeys().then((publicKeys) => {\n            if (!Object.prototype.hasOwnProperty.call(publicKeys, kid)) {\n                callback(new Error(NO_MATCHING_KID_ERROR_MESSAGE));\n            }\n            else {\n                callback(null, publicKeys[kid]);\n            }\n        })\n            .catch(error => {\n            callback(error);\n        });\n    };\n}\n/**\n * Verifies the signature of a JWT using the provided secret or a function to fetch\n * the secret or public key.\n *\n * @param token - The JWT to be verified.\n * @param secretOrPublicKey - The secret or a function to fetch the secret or public key.\n * @param options - JWT verification options.\n * @returns A Promise resolving for a token with a valid signature.\n */\nfunction verifyJwtSignature(token, secretOrPublicKey, options) {\n    if (!validator.isString(token)) {\n        return Promise.reject(new JwtError(JwtErrorCode.INVALID_ARGUMENT, 'The provided token must be a string.'));\n    }\n    return new Promise((resolve, reject) => {\n        jwt.verify(token, secretOrPublicKey, options, (error) => {\n            if (!error) {\n                return resolve();\n            }\n            if (error.name === 'TokenExpiredError') {\n                return reject(new JwtError(JwtErrorCode.TOKEN_EXPIRED, 'The provided token has expired. Get a fresh token from your ' +\n                    'client app and try again.'));\n            }\n            else if (error.name === 'JsonWebTokenError') {\n                if (error.message && error.message.includes(JWT_CALLBACK_ERROR_PREFIX)) {\n                    const message = error.message.split(JWT_CALLBACK_ERROR_PREFIX).pop() || 'Error fetching public keys.';\n                    let code = JwtErrorCode.KEY_FETCH_ERROR;\n                    if (message === NO_MATCHING_KID_ERROR_MESSAGE) {\n                        code = JwtErrorCode.NO_MATCHING_KID;\n                    }\n                    else if (message === NO_KID_IN_HEADER_ERROR_MESSAGE) {\n                        code = JwtErrorCode.NO_KID_IN_HEADER;\n                    }\n                    return reject(new JwtError(code, message));\n                }\n            }\n            return reject(new JwtError(JwtErrorCode.INVALID_SIGNATURE, error.message));\n        });\n    });\n}\nexports.verifyJwtSignature = verifyJwtSignature;\n/**\n * Decodes general purpose Firebase JWTs.\n *\n * @param jwtToken - JWT token to be decoded.\n * @returns Decoded token containing the header and payload.\n */\nfunction decodeJwt(jwtToken) {\n    if (!validator.isString(jwtToken)) {\n        return Promise.reject(new JwtError(JwtErrorCode.INVALID_ARGUMENT, 'The provided token must be a string.'));\n    }\n    const fullDecodedToken = jwt.decode(jwtToken, {\n        complete: true,\n    });\n    if (!fullDecodedToken) {\n        return Promise.reject(new JwtError(JwtErrorCode.INVALID_ARGUMENT, 'Decoding token failed.'));\n    }\n    const header = fullDecodedToken?.header;\n    const payload = fullDecodedToken?.payload;\n    return Promise.resolve({ header, payload });\n}\nexports.decodeJwt = decodeJwt;\n/**\n * Jwt error code structure.\n *\n * @param code - The error code.\n * @param message - The error message.\n * @constructor\n */\nclass JwtError extends Error {\n    constructor(code, message) {\n        super(message);\n        this.code = code;\n        this.message = message;\n        this.__proto__ = JwtError.prototype;\n    }\n}\nexports.JwtError = JwtError;\n/**\n * JWT error codes.\n */\nvar JwtErrorCode;\n(function (JwtErrorCode) {\n    JwtErrorCode[\"INVALID_ARGUMENT\"] = \"invalid-argument\";\n    JwtErrorCode[\"INVALID_CREDENTIAL\"] = \"invalid-credential\";\n    JwtErrorCode[\"TOKEN_EXPIRED\"] = \"token-expired\";\n    JwtErrorCode[\"INVALID_SIGNATURE\"] = \"invalid-token\";\n    JwtErrorCode[\"NO_MATCHING_KID\"] = \"no-matching-kid-error\";\n    JwtErrorCode[\"NO_KID_IN_HEADER\"] = \"no-kid-error\";\n    JwtErrorCode[\"KEY_FETCH_ERROR\"] = \"key-fetch-error\";\n})(JwtErrorCode = exports.JwtErrorCode || (exports.JwtErrorCode = {}));\n", "/*! firebase-admin v11.11.0 */\n\"use strict\";\n/*!\n * Copyright 2018 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createSessionCookieVerifier = exports.createAuthBlockingTokenVerifier = exports.createIdTokenVerifier = exports.FirebaseTokenVerifier = exports.SESSION_COOKIE_INFO = exports.AUTH_BLOCKING_TOKEN_INFO = exports.ID_TOKEN_INFO = void 0;\nconst error_1 = require(\"../utils/error\");\nconst util = require(\"../utils/index\");\nconst validator = require(\"../utils/validator\");\nconst jwt_1 = require(\"../utils/jwt\");\n// Audience to use for Firebase Auth Custom tokens\nconst FIREBASE_AUDIENCE = 'https://identitytoolkit.googleapis.com/google.identity.identitytoolkit.v1.IdentityToolkit';\n// URL containing the public keys for the Google certs (whose private keys are used to sign Firebase\n// Auth ID tokens)\nconst CLIENT_CERT_URL = 'https://www.googleapis.com/robot/v1/metadata/x509/securetoken@system.gserviceaccount.com';\n// URL containing the public keys for Firebase session cookies. This will be updated to a different URL soon.\nconst SESSION_COOKIE_CERT_URL = 'https://www.googleapis.com/identitytoolkit/v3/relyingparty/publicKeys';\nconst EMULATOR_VERIFIER = new jwt_1.EmulatorSignatureVerifier();\n/**\n * User facing token information related to the Firebase ID token.\n *\n * @internal\n */\nexports.ID_TOKEN_INFO = {\n    url: 'https://firebase.google.com/docs/auth/admin/verify-id-tokens',\n    verifyApiName: 'verifyIdToken()',\n    jwtName: 'Firebase ID token',\n    shortName: 'ID token',\n    expiredErrorCode: error_1.AuthClientErrorCode.ID_TOKEN_EXPIRED,\n};\n/**\n * User facing token information related to the Firebase Auth Blocking token.\n *\n * @internal\n */\nexports.AUTH_BLOCKING_TOKEN_INFO = {\n    url: 'https://cloud.google.com/identity-platform/docs/blocking-functions',\n    verifyApiName: '_verifyAuthBlockingToken()',\n    jwtName: 'Firebase Auth Blocking token',\n    shortName: 'Auth Blocking token',\n    expiredErrorCode: error_1.AuthClientErrorCode.AUTH_BLOCKING_TOKEN_EXPIRED,\n};\n/**\n * User facing token information related to the Firebase session cookie.\n *\n * @internal\n */\nexports.SESSION_COOKIE_INFO = {\n    url: 'https://firebase.google.com/docs/auth/admin/manage-cookies',\n    verifyApiName: 'verifySessionCookie()',\n    jwtName: 'Firebase session cookie',\n    shortName: 'session cookie',\n    expiredErrorCode: error_1.AuthClientErrorCode.SESSION_COOKIE_EXPIRED,\n};\n/**\n * Class for verifying general purpose Firebase JWTs. This verifies ID tokens and session cookies.\n *\n * @internal\n */\nclass FirebaseTokenVerifier {\n    constructor(clientCertUrl, issuer, tokenInfo, app) {\n        this.issuer = issuer;\n        this.tokenInfo = tokenInfo;\n        this.app = app;\n        if (!validator.isURL(clientCertUrl)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, 'The provided public client certificate URL is an invalid URL.');\n        }\n        else if (!validator.isURL(issuer)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, 'The provided JWT issuer is an invalid URL.');\n        }\n        else if (!validator.isNonNullObject(tokenInfo)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, 'The provided JWT information is not an object or null.');\n        }\n        else if (!validator.isURL(tokenInfo.url)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, 'The provided JWT verification documentation URL is invalid.');\n        }\n        else if (!validator.isNonEmptyString(tokenInfo.verifyApiName)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, 'The JWT verify API name must be a non-empty string.');\n        }\n        else if (!validator.isNonEmptyString(tokenInfo.jwtName)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, 'The JWT public full name must be a non-empty string.');\n        }\n        else if (!validator.isNonEmptyString(tokenInfo.shortName)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, 'The JWT public short name must be a non-empty string.');\n        }\n        else if (!validator.isNonNullObject(tokenInfo.expiredErrorCode) || !('code' in tokenInfo.expiredErrorCode)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, 'The JWT expiration error code must be a non-null ErrorInfo object.');\n        }\n        this.shortNameArticle = tokenInfo.shortName.charAt(0).match(/[aeiou]/i) ? 'an' : 'a';\n        this.signatureVerifier =\n            jwt_1.PublicKeySignatureVerifier.withCertificateUrl(clientCertUrl, app.options.httpAgent);\n        // For backward compatibility, the project ID is validated in the verification call.\n    }\n    /**\n     * Verifies the format and signature of a Firebase Auth JWT token.\n     *\n     * @param jwtToken - The Firebase Auth JWT token to verify.\n     * @param isEmulator - Whether to accept Auth Emulator tokens.\n     * @returns A promise fulfilled with the decoded claims of the Firebase Auth ID token.\n     */\n    verifyJWT(jwtToken, isEmulator = false) {\n        if (!validator.isString(jwtToken)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, `First argument to ${this.tokenInfo.verifyApiName} must be a ${this.tokenInfo.jwtName} string.`);\n        }\n        return this.ensureProjectId()\n            .then((projectId) => {\n            return this.decodeAndVerify(jwtToken, projectId, isEmulator);\n        })\n            .then((decoded) => {\n            const decodedIdToken = decoded.payload;\n            decodedIdToken.uid = decodedIdToken.sub;\n            return decodedIdToken;\n        });\n    }\n    /** @alpha */\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    _verifyAuthBlockingToken(jwtToken, isEmulator, audience) {\n        if (!validator.isString(jwtToken)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, `First argument to ${this.tokenInfo.verifyApiName} must be a ${this.tokenInfo.jwtName} string.`);\n        }\n        return this.ensureProjectId()\n            .then((projectId) => {\n            if (typeof audience === 'undefined') {\n                audience = `${projectId}.cloudfunctions.net/`;\n            }\n            return this.decodeAndVerify(jwtToken, projectId, isEmulator, audience);\n        })\n            .then((decoded) => {\n            const decodedAuthBlockingToken = decoded.payload;\n            decodedAuthBlockingToken.uid = decodedAuthBlockingToken.sub;\n            return decodedAuthBlockingToken;\n        });\n    }\n    ensureProjectId() {\n        return util.findProjectId(this.app)\n            .then((projectId) => {\n            if (!validator.isNonEmptyString(projectId)) {\n                throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_CREDENTIAL, 'Must initialize app with a cert credential or set your Firebase project ID as the ' +\n                    `GOOGLE_CLOUD_PROJECT environment variable to call ${this.tokenInfo.verifyApiName}.`);\n            }\n            return Promise.resolve(projectId);\n        });\n    }\n    decodeAndVerify(token, projectId, isEmulator, audience) {\n        return this.safeDecode(token)\n            .then((decodedToken) => {\n            this.verifyContent(decodedToken, projectId, isEmulator, audience);\n            return this.verifySignature(token, isEmulator)\n                .then(() => decodedToken);\n        });\n    }\n    safeDecode(jwtToken) {\n        return (0, jwt_1.decodeJwt)(jwtToken)\n            .catch((err) => {\n            if (err.code === jwt_1.JwtErrorCode.INVALID_ARGUMENT) {\n                const verifyJwtTokenDocsMessage = ` See ${this.tokenInfo.url} ` +\n                    `for details on how to retrieve ${this.shortNameArticle} ${this.tokenInfo.shortName}.`;\n                const errorMessage = `Decoding ${this.tokenInfo.jwtName} failed. Make sure you passed ` +\n                    `the entire string JWT which represents ${this.shortNameArticle} ` +\n                    `${this.tokenInfo.shortName}.` + verifyJwtTokenDocsMessage;\n                throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, errorMessage);\n            }\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INTERNAL_ERROR, err.message);\n        });\n    }\n    /**\n     * Verifies the content of a Firebase Auth JWT.\n     *\n     * @param fullDecodedToken - The decoded JWT.\n     * @param projectId - The Firebase Project Id.\n     * @param isEmulator - Whether the token is an Emulator token.\n     */\n    verifyContent(fullDecodedToken, projectId, isEmulator, audience) {\n        const header = fullDecodedToken && fullDecodedToken.header;\n        const payload = fullDecodedToken && fullDecodedToken.payload;\n        const projectIdMatchMessage = ` Make sure the ${this.tokenInfo.shortName} comes from the same ` +\n            'Firebase project as the service account used to authenticate this SDK.';\n        const verifyJwtTokenDocsMessage = ` See ${this.tokenInfo.url} ` +\n            `for details on how to retrieve ${this.shortNameArticle} ${this.tokenInfo.shortName}.`;\n        let errorMessage;\n        if (!isEmulator && typeof header.kid === 'undefined') {\n            const isCustomToken = (payload.aud === FIREBASE_AUDIENCE);\n            const isLegacyCustomToken = (header.alg === 'HS256' && payload.v === 0 && 'd' in payload && 'uid' in payload.d);\n            if (isCustomToken) {\n                errorMessage = `${this.tokenInfo.verifyApiName} expects ${this.shortNameArticle} ` +\n                    `${this.tokenInfo.shortName}, but was given a custom token.`;\n            }\n            else if (isLegacyCustomToken) {\n                errorMessage = `${this.tokenInfo.verifyApiName} expects ${this.shortNameArticle} ` +\n                    `${this.tokenInfo.shortName}, but was given a legacy custom token.`;\n            }\n            else {\n                errorMessage = `${this.tokenInfo.jwtName} has no \"kid\" claim.`;\n            }\n            errorMessage += verifyJwtTokenDocsMessage;\n        }\n        else if (!isEmulator && header.alg !== jwt_1.ALGORITHM_RS256) {\n            errorMessage = `${this.tokenInfo.jwtName} has incorrect algorithm. Expected \"` + jwt_1.ALGORITHM_RS256 + '\" but got ' +\n                '\"' + header.alg + '\".' + verifyJwtTokenDocsMessage;\n        }\n        else if (typeof audience !== 'undefined' && !payload.aud.includes(audience)) {\n            errorMessage = `${this.tokenInfo.jwtName} has incorrect \"aud\" (audience) claim. Expected \"` +\n                audience + '\" but got \"' + payload.aud + '\".' + verifyJwtTokenDocsMessage;\n        }\n        else if (typeof audience === 'undefined' && payload.aud !== projectId) {\n            errorMessage = `${this.tokenInfo.jwtName} has incorrect \"aud\" (audience) claim. Expected \"` +\n                projectId + '\" but got \"' + payload.aud + '\".' + projectIdMatchMessage +\n                verifyJwtTokenDocsMessage;\n        }\n        else if (payload.iss !== this.issuer + projectId) {\n            errorMessage = `${this.tokenInfo.jwtName} has incorrect \"iss\" (issuer) claim. Expected ` +\n                `\"${this.issuer}` + projectId + '\" but got \"' +\n                payload.iss + '\".' + projectIdMatchMessage + verifyJwtTokenDocsMessage;\n        }\n        else if (typeof payload.sub !== 'string') {\n            errorMessage = `${this.tokenInfo.jwtName} has no \"sub\" (subject) claim.` + verifyJwtTokenDocsMessage;\n        }\n        else if (payload.sub === '') {\n            errorMessage = `${this.tokenInfo.jwtName} has an empty string \"sub\" (subject) claim.` + verifyJwtTokenDocsMessage;\n        }\n        else if (payload.sub.length > 128) {\n            errorMessage = `${this.tokenInfo.jwtName} has \"sub\" (subject) claim longer than 128 characters.` +\n                verifyJwtTokenDocsMessage;\n        }\n        if (errorMessage) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, errorMessage);\n        }\n    }\n    verifySignature(jwtToken, isEmulator) {\n        const verifier = isEmulator ? EMULATOR_VERIFIER : this.signatureVerifier;\n        return verifier.verify(jwtToken)\n            .catch((error) => {\n            throw this.mapJwtErrorToAuthError(error);\n        });\n    }\n    /**\n     * Maps JwtError to FirebaseAuthError\n     *\n     * @param error - JwtError to be mapped.\n     * @returns FirebaseAuthError or Error instance.\n     */\n    mapJwtErrorToAuthError(error) {\n        const verifyJwtTokenDocsMessage = ` See ${this.tokenInfo.url} ` +\n            `for details on how to retrieve ${this.shortNameArticle} ${this.tokenInfo.shortName}.`;\n        if (error.code === jwt_1.JwtErrorCode.TOKEN_EXPIRED) {\n            const errorMessage = `${this.tokenInfo.jwtName} has expired. Get a fresh ${this.tokenInfo.shortName}` +\n                ` from your client app and try again (auth/${this.tokenInfo.expiredErrorCode.code}).` +\n                verifyJwtTokenDocsMessage;\n            return new error_1.FirebaseAuthError(this.tokenInfo.expiredErrorCode, errorMessage);\n        }\n        else if (error.code === jwt_1.JwtErrorCode.INVALID_SIGNATURE) {\n            const errorMessage = `${this.tokenInfo.jwtName} has invalid signature.` + verifyJwtTokenDocsMessage;\n            return new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, errorMessage);\n        }\n        else if (error.code === jwt_1.JwtErrorCode.NO_MATCHING_KID) {\n            const errorMessage = `${this.tokenInfo.jwtName} has \"kid\" claim which does not ` +\n                `correspond to a known public key. Most likely the ${this.tokenInfo.shortName} ` +\n                'is expired, so get a fresh token from your client app and try again.';\n            return new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, errorMessage);\n        }\n        return new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, error.message);\n    }\n}\nexports.FirebaseTokenVerifier = FirebaseTokenVerifier;\n/**\n * Creates a new FirebaseTokenVerifier to verify Firebase ID tokens.\n *\n * @internal\n * @param app - Firebase app instance.\n * @returns FirebaseTokenVerifier\n */\nfunction createIdTokenVerifier(app) {\n    return new FirebaseTokenVerifier(CLIENT_CERT_URL, 'https://securetoken.google.com/', exports.ID_TOKEN_INFO, app);\n}\nexports.createIdTokenVerifier = createIdTokenVerifier;\n/**\n * Creates a new FirebaseTokenVerifier to verify Firebase Auth Blocking tokens.\n *\n * @internal\n * @param app - Firebase app instance.\n * @returns FirebaseTokenVerifier\n */\nfunction createAuthBlockingTokenVerifier(app) {\n    return new FirebaseTokenVerifier(CLIENT_CERT_URL, 'https://securetoken.google.com/', exports.AUTH_BLOCKING_TOKEN_INFO, app);\n}\nexports.createAuthBlockingTokenVerifier = createAuthBlockingTokenVerifier;\n/**\n * Creates a new FirebaseTokenVerifier to verify Firebase session cookies.\n *\n * @internal\n * @param app - Firebase app instance.\n * @returns FirebaseTokenVerifier\n */\nfunction createSessionCookieVerifier(app) {\n    return new FirebaseTokenVerifier(SESSION_COOKIE_CERT_URL, 'https://session.firebase.google.com/', exports.SESSION_COOKIE_INFO, app);\n}\nexports.createSessionCookieVerifier = createSessionCookieVerifier;\n", "/*! firebase-admin v11.11.0 */\n\"use strict\";\n/*!\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UserRecord = exports.UserInfo = exports.UserMetadata = exports.MultiFactorSettings = exports.TotpMultiFactorInfo = exports.TotpInfo = exports.PhoneMultiFactorInfo = exports.MultiFactorInfo = void 0;\nconst deep_copy_1 = require(\"../utils/deep-copy\");\nconst validator_1 = require(\"../utils/validator\");\nconst utils = require(\"../utils\");\nconst error_1 = require(\"../utils/error\");\n/**\n * 'REDACTED', encoded as a base64 string.\n */\nconst B64_REDACTED = Buffer.from('REDACTED').toString('base64');\n/**\n * Parses a time stamp string or number and returns the corresponding date if valid.\n *\n * @param time - The unix timestamp string or number in milliseconds.\n * @returns The corresponding date as a UTC string, if valid. Otherwise, null.\n */\nfunction parseDate(time) {\n    try {\n        const date = new Date(parseInt(time, 10));\n        if (!isNaN(date.getTime())) {\n            return date.toUTCString();\n        }\n    }\n    catch (e) {\n        // Do nothing. null will be returned.\n    }\n    return null;\n}\nvar MultiFactorId;\n(function (MultiFactorId) {\n    MultiFactorId[\"Phone\"] = \"phone\";\n    MultiFactorId[\"Totp\"] = \"totp\";\n})(MultiFactorId || (MultiFactorId = {}));\n/**\n * Interface representing the common properties of a user-enrolled second factor.\n */\nclass MultiFactorInfo {\n    /**\n     * Initializes the MultiFactorInfo associated subclass using the server side.\n     * If no MultiFactorInfo is associated with the response, null is returned.\n     *\n     * @param response - The server side response.\n     * @internal\n     */\n    static initMultiFactorInfo(response) {\n        let multiFactorInfo = null;\n        // PhoneMultiFactorInfo, TotpMultiFactorInfo currently available.\n        try {\n            if (response.phoneInfo !== undefined) {\n                multiFactorInfo = new PhoneMultiFactorInfo(response);\n            }\n            else if (response.totpInfo !== undefined) {\n                multiFactorInfo = new TotpMultiFactorInfo(response);\n            }\n            else {\n                // Ignore the other SDK unsupported MFA factors to prevent blocking developers using the current SDK.\n            }\n        }\n        catch (e) {\n            // Ignore error.\n        }\n        return multiFactorInfo;\n    }\n    /**\n     * Initializes the MultiFactorInfo object using the server side response.\n     *\n     * @param response - The server side response.\n     * @constructor\n     * @internal\n     */\n    constructor(response) {\n        this.initFromServerResponse(response);\n    }\n    /**\n     * Returns a JSON-serializable representation of this object.\n     *\n     * @returns A JSON-serializable representation of this object.\n     */\n    toJSON() {\n        return {\n            uid: this.uid,\n            displayName: this.displayName,\n            factorId: this.factorId,\n            enrollmentTime: this.enrollmentTime,\n        };\n    }\n    /**\n     * Initializes the MultiFactorInfo object using the provided server response.\n     *\n     * @param response - The server side response.\n     */\n    initFromServerResponse(response) {\n        const factorId = response && this.getFactorId(response);\n        if (!factorId || !response || !response.mfaEnrollmentId) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INTERNAL_ERROR, 'INTERNAL ASSERT FAILED: Invalid multi-factor info response');\n        }\n        utils.addReadonlyGetter(this, 'uid', response.mfaEnrollmentId);\n        utils.addReadonlyGetter(this, 'factorId', factorId);\n        utils.addReadonlyGetter(this, 'displayName', response.displayName);\n        // Encoded using [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) format.\n        // For example, \"2017-01-15T01:30:15.01Z\".\n        // This can be parsed directly via Date constructor.\n        // This can be computed using Data.prototype.toISOString.\n        if (response.enrolledAt) {\n            utils.addReadonlyGetter(this, 'enrollmentTime', new Date(response.enrolledAt).toUTCString());\n        }\n        else {\n            utils.addReadonlyGetter(this, 'enrollmentTime', null);\n        }\n    }\n}\nexports.MultiFactorInfo = MultiFactorInfo;\n/**\n * Interface representing a phone specific user-enrolled second factor.\n */\nclass PhoneMultiFactorInfo extends MultiFactorInfo {\n    /**\n     * Initializes the PhoneMultiFactorInfo object using the server side response.\n     *\n     * @param response - The server side response.\n     * @constructor\n     * @internal\n     */\n    constructor(response) {\n        super(response);\n        utils.addReadonlyGetter(this, 'phoneNumber', response.phoneInfo);\n    }\n    /**\n     * {@inheritdoc MultiFactorInfo.toJSON}\n     */\n    toJSON() {\n        return Object.assign(super.toJSON(), {\n            phoneNumber: this.phoneNumber,\n        });\n    }\n    /**\n     * Returns the factor ID based on the response provided.\n     *\n     * @param response - The server side response.\n     * @returns The multi-factor ID associated with the provided response. If the response is\n     *     not associated with any known multi-factor ID, null is returned.\n     *\n     * @internal\n     */\n    getFactorId(response) {\n        return (response && response.phoneInfo) ? MultiFactorId.Phone : null;\n    }\n}\nexports.PhoneMultiFactorInfo = PhoneMultiFactorInfo;\n/**\n * `TotpInfo` struct associated with a second factor\n */\nclass TotpInfo {\n}\nexports.TotpInfo = TotpInfo;\n/**\n * Interface representing a TOTP specific user-enrolled second factor.\n */\nclass TotpMultiFactorInfo extends MultiFactorInfo {\n    /**\n     * Initializes the `TotpMultiFactorInfo` object using the server side response.\n     *\n     * @param response - The server side response.\n     * @constructor\n     * @internal\n     */\n    constructor(response) {\n        super(response);\n        utils.addReadonlyGetter(this, 'totpInfo', response.totpInfo);\n    }\n    /**\n     * {@inheritdoc MultiFactorInfo.toJSON}\n     */\n    toJSON() {\n        return Object.assign(super.toJSON(), {\n            totpInfo: this.totpInfo,\n        });\n    }\n    /**\n     * Returns the factor ID based on the response provided.\n     *\n     * @param response - The server side response.\n     * @returns The multi-factor ID associated with the provided response. If the response is\n     *     not associated with any known multi-factor ID, `null` is returned.\n     *\n     * @internal\n     */\n    getFactorId(response) {\n        return (response && response.totpInfo) ? MultiFactorId.Totp : null;\n    }\n}\nexports.TotpMultiFactorInfo = TotpMultiFactorInfo;\n/**\n * The multi-factor related user settings.\n */\nclass MultiFactorSettings {\n    /**\n     * Initializes the `MultiFactor` object using the server side or JWT format response.\n     *\n     * @param response - The server side response.\n     * @constructor\n     * @internal\n     */\n    constructor(response) {\n        const parsedEnrolledFactors = [];\n        if (!(0, validator_1.isNonNullObject)(response)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INTERNAL_ERROR, 'INTERNAL ASSERT FAILED: Invalid multi-factor response');\n        }\n        else if (response.mfaInfo) {\n            response.mfaInfo.forEach((factorResponse) => {\n                const multiFactorInfo = MultiFactorInfo.initMultiFactorInfo(factorResponse);\n                if (multiFactorInfo) {\n                    parsedEnrolledFactors.push(multiFactorInfo);\n                }\n            });\n        }\n        // Make enrolled factors immutable.\n        utils.addReadonlyGetter(this, 'enrolledFactors', Object.freeze(parsedEnrolledFactors));\n    }\n    /**\n     * Returns a JSON-serializable representation of this multi-factor object.\n     *\n     * @returns A JSON-serializable representation of this multi-factor object.\n     */\n    toJSON() {\n        return {\n            enrolledFactors: this.enrolledFactors.map((info) => info.toJSON()),\n        };\n    }\n}\nexports.MultiFactorSettings = MultiFactorSettings;\n/**\n * Represents a user's metadata.\n */\nclass UserMetadata {\n    /**\n     * @param response - The server side response returned from the `getAccountInfo`\n     *     endpoint.\n     * @constructor\n     * @internal\n     */\n    constructor(response) {\n        // Creation date should always be available but due to some backend bugs there\n        // were cases in the past where users did not have creation date properly set.\n        // This included legacy Firebase migrating project users and some anonymous users.\n        // These bugs have already been addressed since then.\n        utils.addReadonlyGetter(this, 'creationTime', parseDate(response.createdAt));\n        utils.addReadonlyGetter(this, 'lastSignInTime', parseDate(response.lastLoginAt));\n        const lastRefreshAt = response.lastRefreshAt ? new Date(response.lastRefreshAt).toUTCString() : null;\n        utils.addReadonlyGetter(this, 'lastRefreshTime', lastRefreshAt);\n    }\n    /**\n     * Returns a JSON-serializable representation of this object.\n     *\n     * @returns A JSON-serializable representation of this object.\n     */\n    toJSON() {\n        return {\n            lastSignInTime: this.lastSignInTime,\n            creationTime: this.creationTime,\n            lastRefreshTime: this.lastRefreshTime,\n        };\n    }\n}\nexports.UserMetadata = UserMetadata;\n/**\n * Represents a user's info from a third-party identity provider\n * such as Google or Facebook.\n */\nclass UserInfo {\n    /**\n     * @param response - The server side response returned from the `getAccountInfo`\n     *     endpoint.\n     * @constructor\n     * @internal\n     */\n    constructor(response) {\n        // Provider user id and provider id are required.\n        if (!response.rawId || !response.providerId) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INTERNAL_ERROR, 'INTERNAL ASSERT FAILED: Invalid user info response');\n        }\n        utils.addReadonlyGetter(this, 'uid', response.rawId);\n        utils.addReadonlyGetter(this, 'displayName', response.displayName);\n        utils.addReadonlyGetter(this, 'email', response.email);\n        utils.addReadonlyGetter(this, 'photoURL', response.photoUrl);\n        utils.addReadonlyGetter(this, 'providerId', response.providerId);\n        utils.addReadonlyGetter(this, 'phoneNumber', response.phoneNumber);\n    }\n    /**\n     * Returns a JSON-serializable representation of this object.\n     *\n     * @returns A JSON-serializable representation of this object.\n     */\n    toJSON() {\n        return {\n            uid: this.uid,\n            displayName: this.displayName,\n            email: this.email,\n            photoURL: this.photoURL,\n            providerId: this.providerId,\n            phoneNumber: this.phoneNumber,\n        };\n    }\n}\nexports.UserInfo = UserInfo;\n/**\n * Represents a user.\n */\nclass UserRecord {\n    /**\n     * @param response - The server side response returned from the getAccountInfo\n     *     endpoint.\n     * @constructor\n     * @internal\n     */\n    constructor(response) {\n        // The Firebase user id is required.\n        if (!response.localId) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INTERNAL_ERROR, 'INTERNAL ASSERT FAILED: Invalid user response');\n        }\n        utils.addReadonlyGetter(this, 'uid', response.localId);\n        utils.addReadonlyGetter(this, 'email', response.email);\n        utils.addReadonlyGetter(this, 'emailVerified', !!response.emailVerified);\n        utils.addReadonlyGetter(this, 'displayName', response.displayName);\n        utils.addReadonlyGetter(this, 'photoURL', response.photoUrl);\n        utils.addReadonlyGetter(this, 'phoneNumber', response.phoneNumber);\n        // If disabled is not provided, the account is enabled by default.\n        utils.addReadonlyGetter(this, 'disabled', response.disabled || false);\n        utils.addReadonlyGetter(this, 'metadata', new UserMetadata(response));\n        const providerData = [];\n        for (const entry of (response.providerUserInfo || [])) {\n            providerData.push(new UserInfo(entry));\n        }\n        utils.addReadonlyGetter(this, 'providerData', providerData);\n        // If the password hash is redacted (probably due to missing permissions)\n        // then clear it out, similar to how the salt is returned. (Otherwise, it\n        // *looks* like a b64-encoded hash is present, which is confusing.)\n        if (response.passwordHash === B64_REDACTED) {\n            utils.addReadonlyGetter(this, 'passwordHash', undefined);\n        }\n        else {\n            utils.addReadonlyGetter(this, 'passwordHash', response.passwordHash);\n        }\n        utils.addReadonlyGetter(this, 'passwordSalt', response.salt);\n        if (response.customAttributes) {\n            utils.addReadonlyGetter(this, 'customClaims', JSON.parse(response.customAttributes));\n        }\n        let validAfterTime = null;\n        // Convert validSince first to UTC milliseconds and then to UTC date string.\n        if (typeof response.validSince !== 'undefined') {\n            validAfterTime = parseDate(parseInt(response.validSince, 10) * 1000);\n        }\n        utils.addReadonlyGetter(this, 'tokensValidAfterTime', validAfterTime || undefined);\n        utils.addReadonlyGetter(this, 'tenantId', response.tenantId);\n        const multiFactor = new MultiFactorSettings(response);\n        if (multiFactor.enrolledFactors.length > 0) {\n            utils.addReadonlyGetter(this, 'multiFactor', multiFactor);\n        }\n    }\n    /**\n     * Returns a JSON-serializable representation of this object.\n     *\n     * @returns A JSON-serializable representation of this object.\n     */\n    toJSON() {\n        const json = {\n            uid: this.uid,\n            email: this.email,\n            emailVerified: this.emailVerified,\n            displayName: this.displayName,\n            photoURL: this.photoURL,\n            phoneNumber: this.phoneNumber,\n            disabled: this.disabled,\n            // Convert metadata to json.\n            metadata: this.metadata.toJSON(),\n            passwordHash: this.passwordHash,\n            passwordSalt: this.passwordSalt,\n            customClaims: (0, deep_copy_1.deepCopy)(this.customClaims),\n            tokensValidAfterTime: this.tokensValidAfterTime,\n            tenantId: this.tenantId,\n        };\n        if (this.multiFactor) {\n            json.multiFactor = this.multiFactor.toJSON();\n        }\n        json.providerData = [];\n        for (const entry of this.providerData) {\n            // Convert each provider data to json.\n            json.providerData.push(entry.toJSON());\n        }\n        return json;\n    }\n}\nexports.UserRecord = UserRecord;\n", "/*! firebase-admin v11.11.0 */\n\"use strict\";\n/*!\n * Copyright 2021 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BaseAuth = exports.createFirebaseTokenGenerator = void 0;\nconst error_1 = require(\"../utils/error\");\nconst deep_copy_1 = require(\"../utils/deep-copy\");\nconst validator = require(\"../utils/validator\");\nconst auth_api_request_1 = require(\"./auth-api-request\");\nconst token_generator_1 = require(\"./token-generator\");\nconst token_verifier_1 = require(\"./token-verifier\");\nconst auth_config_1 = require(\"./auth-config\");\nconst user_record_1 = require(\"./user-record\");\nconst identifier_1 = require(\"./identifier\");\nconst crypto_signer_1 = require(\"../utils/crypto-signer\");\n/**\n * @internal\n */\nfunction createFirebaseTokenGenerator(app, tenantId) {\n    try {\n        const signer = (0, auth_api_request_1.useEmulator)() ? new token_generator_1.EmulatedSigner() : (0, crypto_signer_1.cryptoSignerFromApp)(app);\n        return new token_generator_1.FirebaseTokenGenerator(signer, tenantId);\n    }\n    catch (err) {\n        throw (0, token_generator_1.handleCryptoSignerError)(err);\n    }\n}\nexports.createFirebaseTokenGenerator = createFirebaseTokenGenerator;\n/**\n * Common parent interface for both `Auth` and `TenantAwareAuth` APIs.\n */\nclass BaseAuth {\n    /**\n     * The BaseAuth class constructor.\n     *\n     * @param app - The FirebaseApp to associate with this Auth instance.\n     * @param authRequestHandler - The RPC request handler for this instance.\n     * @param tokenGenerator - Optional token generator. If not specified, a\n     *     (non-tenant-aware) instance will be created. Use this paramter to\n     *     specify a tenant-aware tokenGenerator.\n     * @constructor\n     * @internal\n     */\n    constructor(app, \n    /** @internal */ authRequestHandler, tokenGenerator) {\n        this.authRequestHandler = authRequestHandler;\n        if (tokenGenerator) {\n            this.tokenGenerator = tokenGenerator;\n        }\n        else {\n            this.tokenGenerator = createFirebaseTokenGenerator(app);\n        }\n        this.sessionCookieVerifier = (0, token_verifier_1.createSessionCookieVerifier)(app);\n        this.idTokenVerifier = (0, token_verifier_1.createIdTokenVerifier)(app);\n        this.authBlockingTokenVerifier = (0, token_verifier_1.createAuthBlockingTokenVerifier)(app);\n    }\n    /**\n     * Creates a new Firebase custom token (JWT) that can be sent back to a client\n     * device to use to sign in with the client SDKs' `signInWithCustomToken()`\n     * methods. (Tenant-aware instances will also embed the tenant ID in the\n     * token.)\n     *\n     * See {@link https://firebase.google.com/docs/auth/admin/create-custom-tokens | Create Custom Tokens}\n     * for code samples and detailed documentation.\n     *\n     * @param uid - The `uid` to use as the custom token's subject.\n     * @param developerClaims - Optional additional claims to include\n     *   in the custom token's payload.\n     *\n     * @returns A promise fulfilled with a custom token for the\n     *   provided `uid` and payload.\n     */\n    createCustomToken(uid, developerClaims) {\n        return this.tokenGenerator.createCustomToken(uid, developerClaims);\n    }\n    /**\n     * Verifies a Firebase ID token (JWT). If the token is valid, the promise is\n     * fulfilled with the token's decoded claims; otherwise, the promise is\n     * rejected.\n     *\n     * If `checkRevoked` is set to true, first verifies whether the corresponding\n     * user is disabled. If yes, an `auth/user-disabled` error is thrown. If no,\n     * verifies if the session corresponding to the ID token was revoked. If the\n     * corresponding user's session was invalidated, an `auth/id-token-revoked`\n     * error is thrown. If not specified the check is not applied.\n     *\n     * See {@link https://firebase.google.com/docs/auth/admin/verify-id-tokens | Verify ID Tokens}\n     * for code samples and detailed documentation.\n     *\n     * @param idToken - The ID token to verify.\n     * @param checkRevoked - Whether to check if the ID token was revoked.\n     *   This requires an extra request to the Firebase Auth backend to check\n     *   the `tokensValidAfterTime` time for the corresponding user.\n     *   When not specified, this additional check is not applied.\n     *\n     * @returns A promise fulfilled with the\n     *   token's decoded claims if the ID token is valid; otherwise, a rejected\n     *   promise.\n     */\n    verifyIdToken(idToken, checkRevoked = false) {\n        const isEmulator = (0, auth_api_request_1.useEmulator)();\n        return this.idTokenVerifier.verifyJWT(idToken, isEmulator)\n            .then((decodedIdToken) => {\n            // Whether to check if the token was revoked.\n            if (checkRevoked || isEmulator) {\n                return this.verifyDecodedJWTNotRevokedOrDisabled(decodedIdToken, error_1.AuthClientErrorCode.ID_TOKEN_REVOKED);\n            }\n            return decodedIdToken;\n        });\n    }\n    /**\n     * Gets the user data for the user corresponding to a given `uid`.\n     *\n     * See {@link https://firebase.google.com/docs/auth/admin/manage-users#retrieve_user_data | Retrieve user data}\n     * for code samples and detailed documentation.\n     *\n     * @param uid - The `uid` corresponding to the user whose data to fetch.\n     *\n     * @returns A promise fulfilled with the user\n     *   data corresponding to the provided `uid`.\n     */\n    getUser(uid) {\n        return this.authRequestHandler.getAccountInfoByUid(uid)\n            .then((response) => {\n            // Returns the user record populated with server response.\n            return new user_record_1.UserRecord(response.users[0]);\n        });\n    }\n    /**\n     * Gets the user data for the user corresponding to a given email.\n     *\n     * See {@link https://firebase.google.com/docs/auth/admin/manage-users#retrieve_user_data | Retrieve user data}\n     * for code samples and detailed documentation.\n     *\n     * @param email - The email corresponding to the user whose data to\n     *   fetch.\n     *\n     * @returns A promise fulfilled with the user\n     *   data corresponding to the provided email.\n     */\n    getUserByEmail(email) {\n        return this.authRequestHandler.getAccountInfoByEmail(email)\n            .then((response) => {\n            // Returns the user record populated with server response.\n            return new user_record_1.UserRecord(response.users[0]);\n        });\n    }\n    /**\n     * Gets the user data for the user corresponding to a given phone number. The\n     * phone number has to conform to the E.164 specification.\n     *\n     * See {@link https://firebase.google.com/docs/auth/admin/manage-users#retrieve_user_data | Retrieve user data}\n     * for code samples and detailed documentation.\n     *\n     * @param phoneNumber - The phone number corresponding to the user whose\n     *   data to fetch.\n     *\n     * @returns A promise fulfilled with the user\n     *   data corresponding to the provided phone number.\n     */\n    getUserByPhoneNumber(phoneNumber) {\n        return this.authRequestHandler.getAccountInfoByPhoneNumber(phoneNumber)\n            .then((response) => {\n            // Returns the user record populated with server response.\n            return new user_record_1.UserRecord(response.users[0]);\n        });\n    }\n    /**\n     * Gets the user data for the user corresponding to a given provider id.\n     *\n     * See {@link https://firebase.google.com/docs/auth/admin/manage-users#retrieve_user_data | Retrieve user data}\n     * for code samples and detailed documentation.\n     *\n     * @param providerId - The provider ID, for example, \"google.com\" for the\n     *   Google provider.\n     * @param uid - The user identifier for the given provider.\n     *\n     * @returns A promise fulfilled with the user data corresponding to the\n     *   given provider id.\n     */\n    getUserByProviderUid(providerId, uid) {\n        // Although we don't really advertise it, we want to also handle\n        // non-federated idps with this call. So if we detect one of them, we'll\n        // reroute this request appropriately.\n        if (providerId === 'phone') {\n            return this.getUserByPhoneNumber(uid);\n        }\n        else if (providerId === 'email') {\n            return this.getUserByEmail(uid);\n        }\n        return this.authRequestHandler.getAccountInfoByFederatedUid(providerId, uid)\n            .then((response) => {\n            // Returns the user record populated with server response.\n            return new user_record_1.UserRecord(response.users[0]);\n        });\n    }\n    /**\n     * Gets the user data corresponding to the specified identifiers.\n     *\n     * There are no ordering guarantees; in particular, the nth entry in the result list is not\n     * guaranteed to correspond to the nth entry in the input parameters list.\n     *\n     * Only a maximum of 100 identifiers may be supplied. If more than 100 identifiers are supplied,\n     * this method throws a FirebaseAuthError.\n     *\n     * @param identifiers - The identifiers used to indicate which user records should be returned.\n     *     Must not have more than 100 entries.\n     * @returns A promise that resolves to the corresponding user records.\n     * @throws FirebaseAuthError If any of the identifiers are invalid or if more than 100\n     *     identifiers are specified.\n     */\n    getUsers(identifiers) {\n        if (!validator.isArray(identifiers)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, '`identifiers` parameter must be an array');\n        }\n        return this.authRequestHandler\n            .getAccountInfoByIdentifiers(identifiers)\n            .then((response) => {\n            /**\n             * Checks if the specified identifier is within the list of\n             * UserRecords.\n             */\n            const isUserFound = ((id, userRecords) => {\n                return !!userRecords.find((userRecord) => {\n                    if ((0, identifier_1.isUidIdentifier)(id)) {\n                        return id.uid === userRecord.uid;\n                    }\n                    else if ((0, identifier_1.isEmailIdentifier)(id)) {\n                        return id.email === userRecord.email;\n                    }\n                    else if ((0, identifier_1.isPhoneIdentifier)(id)) {\n                        return id.phoneNumber === userRecord.phoneNumber;\n                    }\n                    else if ((0, identifier_1.isProviderIdentifier)(id)) {\n                        const matchingUserInfo = userRecord.providerData.find((userInfo) => {\n                            return id.providerId === userInfo.providerId;\n                        });\n                        return !!matchingUserInfo && id.providerUid === matchingUserInfo.uid;\n                    }\n                    else {\n                        throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INTERNAL_ERROR, 'Unhandled identifier type');\n                    }\n                });\n            });\n            const users = response.users ? response.users.map((user) => new user_record_1.UserRecord(user)) : [];\n            const notFound = identifiers.filter((id) => !isUserFound(id, users));\n            return { users, notFound };\n        });\n    }\n    /**\n     * Retrieves a list of users (single batch only) with a size of `maxResults`\n     * starting from the offset as specified by `pageToken`. This is used to\n     * retrieve all the users of a specified project in batches.\n     *\n     * See {@link https://firebase.google.com/docs/auth/admin/manage-users#list_all_users | List all users}\n     * for code samples and detailed documentation.\n     *\n     * @param maxResults - The page size, 1000 if undefined. This is also\n     *   the maximum allowed limit.\n     * @param pageToken - The next page token. If not specified, returns\n     *   users starting without any offset.\n     * @returns A promise that resolves with\n     *   the current batch of downloaded users and the next page token.\n     */\n    listUsers(maxResults, pageToken) {\n        return this.authRequestHandler.downloadAccount(maxResults, pageToken)\n            .then((response) => {\n            // List of users to return.\n            const users = [];\n            // Convert each user response to a UserRecord.\n            response.users.forEach((userResponse) => {\n                users.push(new user_record_1.UserRecord(userResponse));\n            });\n            // Return list of user records and the next page token if available.\n            const result = {\n                users,\n                pageToken: response.nextPageToken,\n            };\n            // Delete result.pageToken if undefined.\n            if (typeof result.pageToken === 'undefined') {\n                delete result.pageToken;\n            }\n            return result;\n        });\n    }\n    /**\n     * Creates a new user.\n     *\n     * See {@link https://firebase.google.com/docs/auth/admin/manage-users#create_a_user | Create a user}\n     * for code samples and detailed documentation.\n     *\n     * @param properties - The properties to set on the\n     *   new user record to be created.\n     *\n     * @returns A promise fulfilled with the user\n     *   data corresponding to the newly created user.\n     */\n    createUser(properties) {\n        return this.authRequestHandler.createNewAccount(properties)\n            .then((uid) => {\n            // Return the corresponding user record.\n            return this.getUser(uid);\n        })\n            .catch((error) => {\n            if (error.code === 'auth/user-not-found') {\n                // Something must have happened after creating the user and then retrieving it.\n                throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INTERNAL_ERROR, 'Unable to create the user record provided.');\n            }\n            throw error;\n        });\n    }\n    /**\n     * Deletes an existing user.\n     *\n     * See {@link https://firebase.google.com/docs/auth/admin/manage-users#delete_a_user | Delete a user}\n     * for code samples and detailed documentation.\n     *\n     * @param uid - The `uid` corresponding to the user to delete.\n     *\n     * @returns An empty promise fulfilled once the user has been\n     *   deleted.\n     */\n    deleteUser(uid) {\n        return this.authRequestHandler.deleteAccount(uid)\n            .then(() => {\n            // Return nothing on success.\n        });\n    }\n    /**\n     * Deletes the users specified by the given uids.\n     *\n     * Deleting a non-existing user won't generate an error (i.e. this method\n     * is idempotent.) Non-existing users are considered to be successfully\n     * deleted, and are therefore counted in the\n     * `DeleteUsersResult.successCount` value.\n     *\n     * Only a maximum of 1000 identifiers may be supplied. If more than 1000\n     * identifiers are supplied, this method throws a FirebaseAuthError.\n     *\n     * This API is currently rate limited at the server to 1 QPS. If you exceed\n     * this, you may get a quota exceeded error. Therefore, if you want to\n     * delete more than 1000 users, you may need to add a delay to ensure you\n     * don't go over this limit.\n     *\n     * @param uids - The `uids` corresponding to the users to delete.\n     *\n     * @returns A Promise that resolves to the total number of successful/failed\n     *     deletions, as well as the array of errors that corresponds to the\n     *     failed deletions.\n     */\n    deleteUsers(uids) {\n        if (!validator.isArray(uids)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, '`uids` parameter must be an array');\n        }\n        return this.authRequestHandler.deleteAccounts(uids, /*force=*/ true)\n            .then((batchDeleteAccountsResponse) => {\n            const result = {\n                failureCount: 0,\n                successCount: uids.length,\n                errors: [],\n            };\n            if (!validator.isNonEmptyArray(batchDeleteAccountsResponse.errors)) {\n                return result;\n            }\n            result.failureCount = batchDeleteAccountsResponse.errors.length;\n            result.successCount = uids.length - batchDeleteAccountsResponse.errors.length;\n            result.errors = batchDeleteAccountsResponse.errors.map((batchDeleteErrorInfo) => {\n                if (batchDeleteErrorInfo.index === undefined) {\n                    throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INTERNAL_ERROR, 'Corrupt BatchDeleteAccountsResponse detected');\n                }\n                const errMsgToError = (msg) => {\n                    // We unconditionally set force=true, so the 'NOT_DISABLED' error\n                    // should not be possible.\n                    const code = msg && msg.startsWith('NOT_DISABLED') ?\n                        error_1.AuthClientErrorCode.USER_NOT_DISABLED : error_1.AuthClientErrorCode.INTERNAL_ERROR;\n                    return new error_1.FirebaseAuthError(code, batchDeleteErrorInfo.message);\n                };\n                return {\n                    index: batchDeleteErrorInfo.index,\n                    error: errMsgToError(batchDeleteErrorInfo.message),\n                };\n            });\n            return result;\n        });\n    }\n    /**\n     * Updates an existing user.\n     *\n     * See {@link https://firebase.google.com/docs/auth/admin/manage-users#update_a_user | Update a user}\n     * for code samples and detailed documentation.\n     *\n     * @param uid - The `uid` corresponding to the user to update.\n     * @param properties - The properties to update on\n     *   the provided user.\n     *\n     * @returns A promise fulfilled with the\n     *   updated user data.\n     */\n    updateUser(uid, properties) {\n        // Although we don't really advertise it, we want to also handle linking of\n        // non-federated idps with this call. So if we detect one of them, we'll\n        // adjust the properties parameter appropriately. This *does* imply that a\n        // conflict could arise, e.g. if the user provides a phoneNumber property,\n        // but also provides a providerToLink with a 'phone' provider id. In that\n        // case, we'll throw an error.\n        properties = (0, deep_copy_1.deepCopy)(properties);\n        if (properties?.providerToLink) {\n            if (properties.providerToLink.providerId === 'email') {\n                if (typeof properties.email !== 'undefined') {\n                    throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, \"Both UpdateRequest.email and UpdateRequest.providerToLink.providerId='email' were set. To \"\n                        + 'link to the email/password provider, only specify the UpdateRequest.email field.');\n                }\n                properties.email = properties.providerToLink.uid;\n                delete properties.providerToLink;\n            }\n            else if (properties.providerToLink.providerId === 'phone') {\n                if (typeof properties.phoneNumber !== 'undefined') {\n                    throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, \"Both UpdateRequest.phoneNumber and UpdateRequest.providerToLink.providerId='phone' were set. To \"\n                        + 'link to a phone provider, only specify the UpdateRequest.phoneNumber field.');\n                }\n                properties.phoneNumber = properties.providerToLink.uid;\n                delete properties.providerToLink;\n            }\n        }\n        if (properties?.providersToUnlink) {\n            if (properties.providersToUnlink.indexOf('phone') !== -1) {\n                // If we've been told to unlink the phone provider both via setting\n                // phoneNumber to null *and* by setting providersToUnlink to include\n                // 'phone', then we'll reject that. Though it might also be reasonable\n                // to relax this restriction and just unlink it.\n                if (properties.phoneNumber === null) {\n                    throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, \"Both UpdateRequest.phoneNumber=null and UpdateRequest.providersToUnlink=['phone'] were set. To \"\n                        + 'unlink from a phone provider, only specify the UpdateRequest.phoneNumber=null field.');\n                }\n            }\n        }\n        return this.authRequestHandler.updateExistingAccount(uid, properties)\n            .then((existingUid) => {\n            // Return the corresponding user record.\n            return this.getUser(existingUid);\n        });\n    }\n    /**\n     * Sets additional developer claims on an existing user identified by the\n     * provided `uid`, typically used to define user roles and levels of\n     * access. These claims should propagate to all devices where the user is\n     * already signed in (after token expiration or when token refresh is forced)\n     * and the next time the user signs in. If a reserved OIDC claim name\n     * is used (sub, iat, iss, etc), an error is thrown. They are set on the\n     * authenticated user's ID token JWT.\n     *\n     * See {@link https://firebase.google.com/docs/auth/admin/custom-claims |\n     * Defining user roles and access levels}\n     * for code samples and detailed documentation.\n     *\n     * @param uid - The `uid` of the user to edit.\n     * @param customUserClaims - The developer claims to set. If null is\n     *   passed, existing custom claims are deleted. Passing a custom claims payload\n     *   larger than 1000 bytes will throw an error. Custom claims are added to the\n     *   user's ID token which is transmitted on every authenticated request.\n     *   For profile non-access related user attributes, use database or other\n     *   separate storage systems.\n     * @returns A promise that resolves when the operation completes\n     *   successfully.\n     */\n    setCustomUserClaims(uid, customUserClaims) {\n        return this.authRequestHandler.setCustomUserClaims(uid, customUserClaims)\n            .then(() => {\n            // Return nothing on success.\n        });\n    }\n    /**\n     * Revokes all refresh tokens for an existing user.\n     *\n     * This API will update the user's {@link UserRecord.tokensValidAfterTime} to\n     * the current UTC. It is important that the server on which this is called has\n     * its clock set correctly and synchronized.\n     *\n     * While this will revoke all sessions for a specified user and disable any\n     * new ID tokens for existing sessions from getting minted, existing ID tokens\n     * may remain active until their natural expiration (one hour). To verify that\n     * ID tokens are revoked, use {@link BaseAuth.verifyIdToken}\n     * where `checkRevoked` is set to true.\n     *\n     * @param uid - The `uid` corresponding to the user whose refresh tokens\n     *   are to be revoked.\n     *\n     * @returns An empty promise fulfilled once the user's refresh\n     *   tokens have been revoked.\n     */\n    revokeRefreshTokens(uid) {\n        return this.authRequestHandler.revokeRefreshTokens(uid)\n            .then(() => {\n            // Return nothing on success.\n        });\n    }\n    /**\n     * Imports the provided list of users into Firebase Auth.\n     * A maximum of 1000 users are allowed to be imported one at a time.\n     * When importing users with passwords,\n     * {@link UserImportOptions} are required to be\n     * specified.\n     * This operation is optimized for bulk imports and will ignore checks on `uid`,\n     * `email` and other identifier uniqueness which could result in duplications.\n     *\n     * @param users - The list of user records to import to Firebase Auth.\n     * @param options - The user import options, required when the users provided include\n     *   password credentials.\n     * @returns A promise that resolves when\n     *   the operation completes with the result of the import. This includes the\n     *   number of successful imports, the number of failed imports and their\n     *   corresponding errors.\n    */\n    importUsers(users, options) {\n        return this.authRequestHandler.uploadAccount(users, options);\n    }\n    /**\n     * Creates a new Firebase session cookie with the specified options. The created\n     * JWT string can be set as a server-side session cookie with a custom cookie\n     * policy, and be used for session management. The session cookie JWT will have\n     * the same payload claims as the provided ID token.\n     *\n     * See {@link https://firebase.google.com/docs/auth/admin/manage-cookies | Manage Session Cookies}\n     * for code samples and detailed documentation.\n     *\n     * @param idToken - The Firebase ID token to exchange for a session\n     *   cookie.\n     * @param sessionCookieOptions - The session\n     *   cookie options which includes custom session duration.\n     *\n     * @returns A promise that resolves on success with the\n     *   created session cookie.\n     */\n    createSessionCookie(idToken, sessionCookieOptions) {\n        // Return rejected promise if expiresIn is not available.\n        if (!validator.isNonNullObject(sessionCookieOptions) ||\n            !validator.isNumber(sessionCookieOptions.expiresIn)) {\n            return Promise.reject(new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_SESSION_COOKIE_DURATION));\n        }\n        return this.authRequestHandler.createSessionCookie(idToken, sessionCookieOptions.expiresIn);\n    }\n    /**\n     * Verifies a Firebase session cookie. Returns a Promise with the cookie claims.\n     * Rejects the promise if the cookie could not be verified.\n     *\n     * If `checkRevoked` is set to true, first verifies whether the corresponding\n     * user is disabled: If yes, an `auth/user-disabled` error is thrown. If no,\n     * verifies if the session corresponding to the session cookie was revoked.\n     * If the corresponding user's session was invalidated, an\n     * `auth/session-cookie-revoked` error is thrown. If not specified the check\n     * is not performed.\n     *\n     * See {@link https://firebase.google.com/docs/auth/admin/manage-cookies#verify_session_cookie_and_check_permissions |\n     * Verify Session Cookies}\n     * for code samples and detailed documentation\n     *\n     * @param sessionCookie - The session cookie to verify.\n     * @param checkForRevocation -  Whether to check if the session cookie was\n     *   revoked. This requires an extra request to the Firebase Auth backend to\n     *   check the `tokensValidAfterTime` time for the corresponding user.\n     *   When not specified, this additional check is not performed.\n     *\n     * @returns A promise fulfilled with the\n     *   session cookie's decoded claims if the session cookie is valid; otherwise,\n     *   a rejected promise.\n     */\n    verifySessionCookie(sessionCookie, checkRevoked = false) {\n        const isEmulator = (0, auth_api_request_1.useEmulator)();\n        return this.sessionCookieVerifier.verifyJWT(sessionCookie, isEmulator)\n            .then((decodedIdToken) => {\n            // Whether to check if the token was revoked.\n            if (checkRevoked || isEmulator) {\n                return this.verifyDecodedJWTNotRevokedOrDisabled(decodedIdToken, error_1.AuthClientErrorCode.SESSION_COOKIE_REVOKED);\n            }\n            return decodedIdToken;\n        });\n    }\n    /**\n     * Generates the out of band email action link to reset a user's password.\n     * The link is generated for the user with the specified email address. The\n     * optional  {@link ActionCodeSettings} object\n     * defines whether the link is to be handled by a mobile app or browser and the\n     * additional state information to be passed in the deep link, etc.\n     *\n     * @example\n     * ```javascript\n     * var actionCodeSettings = {\n     *   url: 'https://www.example.com/?email=user@example.com',\n     *   iOS: {\n     *     bundleId: 'com.example.ios'\n     *   },\n     *   android: {\n     *     packageName: 'com.example.android',\n     *     installApp: true,\n     *     minimumVersion: '12'\n     *   },\n     *   handleCodeInApp: true,\n     *   dynamicLinkDomain: 'custom.page.link'\n     * };\n     * admin.auth()\n     *     .generatePasswordResetLink('user@example.com', actionCodeSettings)\n     *     .then(function(link) {\n     *       // The link was successfully generated.\n     *     })\n     *     .catch(function(error) {\n     *       // Some error occurred, you can inspect the code: error.code\n     *     });\n     * ```\n     *\n     * @param email - The email address of the user whose password is to be\n     *   reset.\n     * @param actionCodeSettings - The action\n     *     code settings. If specified, the state/continue URL is set as the\n     *     \"continueUrl\" parameter in the password reset link. The default password\n     *     reset landing page will use this to display a link to go back to the app\n     *     if it is installed.\n     *     If the actionCodeSettings is not specified, no URL is appended to the\n     *     action URL.\n     *     The state URL provided must belong to a domain that is whitelisted by the\n     *     developer in the console. Otherwise an error is thrown.\n     *     Mobile app redirects are only applicable if the developer configures\n     *     and accepts the Firebase Dynamic Links terms of service.\n     *     The Android package name and iOS bundle ID are respected only if they\n     *     are configured in the same Firebase Auth project.\n     * @returns A promise that resolves with the generated link.\n     */\n    generatePasswordResetLink(email, actionCodeSettings) {\n        return this.authRequestHandler.getEmailActionLink('PASSWORD_RESET', email, actionCodeSettings);\n    }\n    /**\n     * Generates the out of band email action link to verify the user's ownership\n     * of the specified email. The {@link ActionCodeSettings} object provided\n     * as an argument to this method defines whether the link is to be handled by a\n     * mobile app or browser along with additional state information to be passed in\n     * the deep link, etc.\n     *\n     * @example\n     * ```javascript\n     * var actionCodeSettings = {\n     *   url: 'https://www.example.com/cart?email=user@example.com&cartId=123',\n     *   iOS: {\n     *     bundleId: 'com.example.ios'\n     *   },\n     *   android: {\n     *     packageName: 'com.example.android',\n     *     installApp: true,\n     *     minimumVersion: '12'\n     *   },\n     *   handleCodeInApp: true,\n     *   dynamicLinkDomain: 'custom.page.link'\n     * };\n     * admin.auth()\n     *     .generateEmailVerificationLink('user@example.com', actionCodeSettings)\n     *     .then(function(link) {\n     *       // The link was successfully generated.\n     *     })\n     *     .catch(function(error) {\n     *       // Some error occurred, you can inspect the code: error.code\n     *     });\n     * ```\n     *\n     * @param email - The email account to verify.\n     * @param actionCodeSettings - The action\n     *     code settings. If specified, the state/continue URL is set as the\n     *     \"continueUrl\" parameter in the email verification link. The default email\n     *     verification landing page will use this to display a link to go back to\n     *     the app if it is installed.\n     *     If the actionCodeSettings is not specified, no URL is appended to the\n     *     action URL.\n     *     The state URL provided must belong to a domain that is whitelisted by the\n     *     developer in the console. Otherwise an error is thrown.\n     *     Mobile app redirects are only applicable if the developer configures\n     *     and accepts the Firebase Dynamic Links terms of service.\n     *     The Android package name and iOS bundle ID are respected only if they\n     *     are configured in the same Firebase Auth project.\n     * @returns A promise that resolves with the generated link.\n     */\n    generateEmailVerificationLink(email, actionCodeSettings) {\n        return this.authRequestHandler.getEmailActionLink('VERIFY_EMAIL', email, actionCodeSettings);\n    }\n    /**\n     * Generates an out-of-band email action link to verify the user's ownership\n     * of the specified email. The {@link ActionCodeSettings} object provided\n     * as an argument to this method defines whether the link is to be handled by a\n     * mobile app or browser along with additional state information to be passed in\n     * the deep link, etc.\n     *\n     * @param email - The current email account.\n     * @param newEmail - The email address the account is being updated to.\n     * @param actionCodeSettings - The action\n     *     code settings. If specified, the state/continue URL is set as the\n     *     \"continueUrl\" parameter in the email verification link. The default email\n     *     verification landing page will use this to display a link to go back to\n     *     the app if it is installed.\n     *     If the actionCodeSettings is not specified, no URL is appended to the\n     *     action URL.\n     *     The state URL provided must belong to a domain that is authorized\n     *     in the console, or an error will be thrown.\n     *     Mobile app redirects are only applicable if the developer configures\n     *     and accepts the Firebase Dynamic Links terms of service.\n     *     The Android package name and iOS bundle ID are respected only if they\n     *     are configured in the same Firebase Auth project.\n     * @returns A promise that resolves with the generated link.\n     */\n    generateVerifyAndChangeEmailLink(email, newEmail, actionCodeSettings) {\n        return this.authRequestHandler.getEmailActionLink('VERIFY_AND_CHANGE_EMAIL', email, actionCodeSettings, newEmail);\n    }\n    /**\n     * Generates the out of band email action link to verify the user's ownership\n     * of the specified email. The {@link ActionCodeSettings} object provided\n     * as an argument to this method defines whether the link is to be handled by a\n     * mobile app or browser along with additional state information to be passed in\n     * the deep link, etc.\n     *\n     * @example\n     * ```javascript\n     * var actionCodeSettings = {\n     *   url: 'https://www.example.com/cart?email=user@example.com&cartId=123',\n     *   iOS: {\n     *     bundleId: 'com.example.ios'\n     *   },\n     *   android: {\n     *     packageName: 'com.example.android',\n     *     installApp: true,\n     *     minimumVersion: '12'\n     *   },\n     *   handleCodeInApp: true,\n     *   dynamicLinkDomain: 'custom.page.link'\n     * };\n     * admin.auth()\n     *     .generateEmailVerificationLink('user@example.com', actionCodeSettings)\n     *     .then(function(link) {\n     *       // The link was successfully generated.\n     *     })\n     *     .catch(function(error) {\n     *       // Some error occurred, you can inspect the code: error.code\n     *     });\n     * ```\n     *\n     * @param email - The email account to verify.\n     * @param actionCodeSettings - The action\n     *     code settings. If specified, the state/continue URL is set as the\n     *     \"continueUrl\" parameter in the email verification link. The default email\n     *     verification landing page will use this to display a link to go back to\n     *     the app if it is installed.\n     *     If the actionCodeSettings is not specified, no URL is appended to the\n     *     action URL.\n     *     The state URL provided must belong to a domain that is whitelisted by the\n     *     developer in the console. Otherwise an error is thrown.\n     *     Mobile app redirects are only applicable if the developer configures\n     *     and accepts the Firebase Dynamic Links terms of service.\n     *     The Android package name and iOS bundle ID are respected only if they\n     *     are configured in the same Firebase Auth project.\n     * @returns A promise that resolves with the generated link.\n     */\n    generateSignInWithEmailLink(email, actionCodeSettings) {\n        return this.authRequestHandler.getEmailActionLink('EMAIL_SIGNIN', email, actionCodeSettings);\n    }\n    /**\n     * Returns the list of existing provider configurations matching the filter\n     * provided. At most, 100 provider configs can be listed at a time.\n     *\n     * SAML and OIDC provider support requires Google Cloud's Identity Platform\n     * (GCIP). To learn more about GCIP, including pricing and features,\n     * see the {@link https://cloud.google.com/identity-platform | GCIP documentation}.\n     *\n     * @param options - The provider config filter to apply.\n     * @returns A promise that resolves with the list of provider configs meeting the\n     *   filter requirements.\n     */\n    listProviderConfigs(options) {\n        const processResponse = (response, providerConfigs) => {\n            // Return list of provider configuration and the next page token if available.\n            const result = {\n                providerConfigs,\n            };\n            // Delete result.pageToken if undefined.\n            if (Object.prototype.hasOwnProperty.call(response, 'nextPageToken')) {\n                result.pageToken = response.nextPageToken;\n            }\n            return result;\n        };\n        if (options && options.type === 'oidc') {\n            return this.authRequestHandler.listOAuthIdpConfigs(options.maxResults, options.pageToken)\n                .then((response) => {\n                // List of provider configurations to return.\n                const providerConfigs = [];\n                // Convert each provider config response to a OIDCConfig.\n                response.oauthIdpConfigs.forEach((configResponse) => {\n                    providerConfigs.push(new auth_config_1.OIDCConfig(configResponse));\n                });\n                // Return list of provider configuration and the next page token if available.\n                return processResponse(response, providerConfigs);\n            });\n        }\n        else if (options && options.type === 'saml') {\n            return this.authRequestHandler.listInboundSamlConfigs(options.maxResults, options.pageToken)\n                .then((response) => {\n                // List of provider configurations to return.\n                const providerConfigs = [];\n                // Convert each provider config response to a SAMLConfig.\n                response.inboundSamlConfigs.forEach((configResponse) => {\n                    providerConfigs.push(new auth_config_1.SAMLConfig(configResponse));\n                });\n                // Return list of provider configuration and the next page token if available.\n                return processResponse(response, providerConfigs);\n            });\n        }\n        return Promise.reject(new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ARGUMENT, '\"AuthProviderConfigFilter.type\" must be either \"saml\" or \"oidc\"'));\n    }\n    /**\n     * Looks up an Auth provider configuration by the provided ID.\n     * Returns a promise that resolves with the provider configuration\n     * corresponding to the provider ID specified. If the specified ID does not\n     * exist, an `auth/configuration-not-found` error is thrown.\n     *\n     * SAML and OIDC provider support requires Google Cloud's Identity Platform\n     * (GCIP). To learn more about GCIP, including pricing and features,\n     * see the {@link https://cloud.google.com/identity-platform | GCIP documentation}.\n     *\n     * @param providerId - The provider ID corresponding to the provider\n     *     config to return.\n     * @returns A promise that resolves\n     *     with the configuration corresponding to the provided ID.\n     */\n    getProviderConfig(providerId) {\n        if (auth_config_1.OIDCConfig.isProviderId(providerId)) {\n            return this.authRequestHandler.getOAuthIdpConfig(providerId)\n                .then((response) => {\n                return new auth_config_1.OIDCConfig(response);\n            });\n        }\n        else if (auth_config_1.SAMLConfig.isProviderId(providerId)) {\n            return this.authRequestHandler.getInboundSamlConfig(providerId)\n                .then((response) => {\n                return new auth_config_1.SAMLConfig(response);\n            });\n        }\n        return Promise.reject(new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_PROVIDER_ID));\n    }\n    /**\n     * Deletes the provider configuration corresponding to the provider ID passed.\n     * If the specified ID does not exist, an `auth/configuration-not-found` error\n     * is thrown.\n     *\n     * SAML and OIDC provider support requires Google Cloud's Identity Platform\n     * (GCIP). To learn more about GCIP, including pricing and features,\n     * see the {@link https://cloud.google.com/identity-platform | GCIP documentation}.\n     *\n     * @param providerId - The provider ID corresponding to the provider\n     *     config to delete.\n     * @returns A promise that resolves on completion.\n     */\n    deleteProviderConfig(providerId) {\n        if (auth_config_1.OIDCConfig.isProviderId(providerId)) {\n            return this.authRequestHandler.deleteOAuthIdpConfig(providerId);\n        }\n        else if (auth_config_1.SAMLConfig.isProviderId(providerId)) {\n            return this.authRequestHandler.deleteInboundSamlConfig(providerId);\n        }\n        return Promise.reject(new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_PROVIDER_ID));\n    }\n    /**\n     * Returns a promise that resolves with the updated `AuthProviderConfig`\n     * corresponding to the provider ID specified.\n     * If the specified ID does not exist, an `auth/configuration-not-found` error\n     * is thrown.\n     *\n     * SAML and OIDC provider support requires Google Cloud's Identity Platform\n     * (GCIP). To learn more about GCIP, including pricing and features,\n     * see the {@link https://cloud.google.com/identity-platform | GCIP documentation}.\n     *\n     * @param providerId - The provider ID corresponding to the provider\n     *     config to update.\n     * @param updatedConfig - The updated configuration.\n     * @returns A promise that resolves with the updated provider configuration.\n     */\n    updateProviderConfig(providerId, updatedConfig) {\n        if (!validator.isNonNullObject(updatedConfig)) {\n            return Promise.reject(new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_CONFIG, 'Request is missing \"UpdateAuthProviderRequest\" configuration.'));\n        }\n        if (auth_config_1.OIDCConfig.isProviderId(providerId)) {\n            return this.authRequestHandler.updateOAuthIdpConfig(providerId, updatedConfig)\n                .then((response) => {\n                return new auth_config_1.OIDCConfig(response);\n            });\n        }\n        else if (auth_config_1.SAMLConfig.isProviderId(providerId)) {\n            return this.authRequestHandler.updateInboundSamlConfig(providerId, updatedConfig)\n                .then((response) => {\n                return new auth_config_1.SAMLConfig(response);\n            });\n        }\n        return Promise.reject(new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_PROVIDER_ID));\n    }\n    /**\n     * Returns a promise that resolves with the newly created `AuthProviderConfig`\n     * when the new provider configuration is created.\n     *\n     * SAML and OIDC provider support requires Google Cloud's Identity Platform\n     * (GCIP). To learn more about GCIP, including pricing and features,\n     * see the {@link https://cloud.google.com/identity-platform | GCIP documentation}.\n     *\n     * @param config - The provider configuration to create.\n     * @returns A promise that resolves with the created provider configuration.\n     */\n    createProviderConfig(config) {\n        if (!validator.isNonNullObject(config)) {\n            return Promise.reject(new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_CONFIG, 'Request is missing \"AuthProviderConfig\" configuration.'));\n        }\n        if (auth_config_1.OIDCConfig.isProviderId(config.providerId)) {\n            return this.authRequestHandler.createOAuthIdpConfig(config)\n                .then((response) => {\n                return new auth_config_1.OIDCConfig(response);\n            });\n        }\n        else if (auth_config_1.SAMLConfig.isProviderId(config.providerId)) {\n            return this.authRequestHandler.createInboundSamlConfig(config)\n                .then((response) => {\n                return new auth_config_1.SAMLConfig(response);\n            });\n        }\n        return Promise.reject(new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_PROVIDER_ID));\n    }\n    /** @alpha */\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    _verifyAuthBlockingToken(token, audience) {\n        const isEmulator = (0, auth_api_request_1.useEmulator)();\n        return this.authBlockingTokenVerifier._verifyAuthBlockingToken(token, isEmulator, audience)\n            .then((decodedAuthBlockingToken) => {\n            return decodedAuthBlockingToken;\n        });\n    }\n    /**\n     * Verifies the decoded Firebase issued JWT is not revoked or disabled. Returns a promise that\n     * resolves with the decoded claims on success. Rejects the promise with revocation error if revoked\n     * or user disabled.\n     *\n     * @param decodedIdToken - The JWT's decoded claims.\n     * @param revocationErrorInfo - The revocation error info to throw on revocation\n     *     detection.\n     * @returns A promise that will be fulfilled after a successful verification.\n     */\n    verifyDecodedJWTNotRevokedOrDisabled(decodedIdToken, revocationErrorInfo) {\n        // Get tokens valid after time for the corresponding user.\n        return this.getUser(decodedIdToken.sub)\n            .then((user) => {\n            if (user.disabled) {\n                throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.USER_DISABLED, 'The user record is disabled.');\n            }\n            // If no tokens valid after time available, token is not revoked.\n            if (user.tokensValidAfterTime) {\n                // Get the ID token authentication time and convert to milliseconds UTC.\n                const authTimeUtc = decodedIdToken.auth_time * 1000;\n                // Get user tokens valid after time in milliseconds UTC.\n                const validSinceUtc = new Date(user.tokensValidAfterTime).getTime();\n                // Check if authentication time is older than valid since time.\n                if (authTimeUtc < validSinceUtc) {\n                    throw new error_1.FirebaseAuthError(revocationErrorInfo);\n                }\n            }\n            // All checks above passed. Return the decoded token.\n            return decodedIdToken;\n        });\n    }\n}\nexports.BaseAuth = BaseAuth;\n", "/*! firebase-admin v11.11.0 */\n\"use strict\";\n/*!\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TenantManager = exports.TenantAwareAuth = void 0;\nconst validator = require(\"../utils/validator\");\nconst utils = require(\"../utils/index\");\nconst error_1 = require(\"../utils/error\");\nconst base_auth_1 = require(\"./base-auth\");\nconst tenant_1 = require(\"./tenant\");\nconst auth_api_request_1 = require(\"./auth-api-request\");\n/**\n * Tenant-aware `Auth` interface used for managing users, configuring SAML/OIDC providers,\n * generating email links for password reset, email verification, etc for specific tenants.\n *\n * Multi-tenancy support requires Google Cloud's Identity Platform\n * (GCIP). To learn more about GCIP, including pricing and features,\n * see the {@link https://cloud.google.com/identity-platform | GCIP documentation}.\n *\n * Each tenant contains its own identity providers, settings and sets of users.\n * Using `TenantAwareAuth`, users for a specific tenant and corresponding OIDC/SAML\n * configurations can also be managed, ID tokens for users signed in to a specific tenant\n * can be verified, and email action links can also be generated for users belonging to the\n * tenant.\n *\n * `TenantAwareAuth` instances for a specific `tenantId` can be instantiated by calling\n * {@link TenantManager.authForTenant}.\n */\nclass TenantAwareAuth extends base_auth_1.BaseAuth {\n    /**\n     * The TenantAwareAuth class constructor.\n     *\n     * @param app - The app that created this tenant.\n     * @param tenantId - The corresponding tenant ID.\n     * @constructor\n     * @internal\n     */\n    constructor(app, tenantId) {\n        super(app, new auth_api_request_1.TenantAwareAuthRequestHandler(app, tenantId), (0, base_auth_1.createFirebaseTokenGenerator)(app, tenantId));\n        utils.addReadonlyGetter(this, 'tenantId', tenantId);\n    }\n    /**\n     * {@inheritdoc BaseAuth.verifyIdToken}\n     */\n    verifyIdToken(idToken, checkRevoked = false) {\n        return super.verifyIdToken(idToken, checkRevoked)\n            .then((decodedClaims) => {\n            // Validate tenant ID.\n            if (decodedClaims.firebase.tenant !== this.tenantId) {\n                throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.MISMATCHING_TENANT_ID);\n            }\n            return decodedClaims;\n        });\n    }\n    /**\n     * {@inheritdoc BaseAuth.createSessionCookie}\n     */\n    createSessionCookie(idToken, sessionCookieOptions) {\n        // Validate arguments before processing.\n        if (!validator.isNonEmptyString(idToken)) {\n            return Promise.reject(new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_ID_TOKEN));\n        }\n        if (!validator.isNonNullObject(sessionCookieOptions) ||\n            !validator.isNumber(sessionCookieOptions.expiresIn)) {\n            return Promise.reject(new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_SESSION_COOKIE_DURATION));\n        }\n        // This will verify the ID token and then match the tenant ID before creating the session cookie.\n        return this.verifyIdToken(idToken)\n            .then(() => {\n            return super.createSessionCookie(idToken, sessionCookieOptions);\n        });\n    }\n    /**\n     * {@inheritdoc BaseAuth.verifySessionCookie}\n     */\n    verifySessionCookie(sessionCookie, checkRevoked = false) {\n        return super.verifySessionCookie(sessionCookie, checkRevoked)\n            .then((decodedClaims) => {\n            if (decodedClaims.firebase.tenant !== this.tenantId) {\n                throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.MISMATCHING_TENANT_ID);\n            }\n            return decodedClaims;\n        });\n    }\n}\nexports.TenantAwareAuth = TenantAwareAuth;\n/**\n * Defines the tenant manager used to help manage tenant related operations.\n * This includes:\n * <ul>\n * <li>The ability to create, update, list, get and delete tenants for the underlying\n *     project.</li>\n * <li>Getting a `TenantAwareAuth` instance for running Auth related operations\n *     (user management, provider configuration management, token verification,\n *     email link generation, etc) in the context of a specified tenant.</li>\n * </ul>\n */\nclass TenantManager {\n    /**\n     * Initializes a TenantManager instance for a specified FirebaseApp.\n     *\n     * @param app - The app for this TenantManager instance.\n     *\n     * @constructor\n     * @internal\n     */\n    constructor(app) {\n        this.app = app;\n        this.authRequestHandler = new auth_api_request_1.AuthRequestHandler(app);\n        this.tenantsMap = {};\n    }\n    /**\n     * Returns a `TenantAwareAuth` instance bound to the given tenant ID.\n     *\n     * @param tenantId - The tenant ID whose `TenantAwareAuth` instance is to be returned.\n     *\n     * @returns The `TenantAwareAuth` instance corresponding to this tenant identifier.\n     */\n    authForTenant(tenantId) {\n        if (!validator.isNonEmptyString(tenantId)) {\n            throw new error_1.FirebaseAuthError(error_1.AuthClientErrorCode.INVALID_TENANT_ID);\n        }\n        if (typeof this.tenantsMap[tenantId] === 'undefined') {\n            this.tenantsMap[tenantId] = new TenantAwareAuth(this.app, tenantId);\n        }\n        return this.tenantsMap[tenantId];\n    }\n    /**\n     * Gets the tenant configuration for the tenant corresponding to a given `tenantId`.\n     *\n     * @param tenantId - The tenant identifier corresponding to the tenant whose data to fetch.\n     *\n     * @returns A promise fulfilled with the tenant configuration to the provided `tenantId`.\n     */\n    getTenant(tenantId) {\n        return this.authRequestHandler.getTenant(tenantId)\n            .then((response) => {\n            return new tenant_1.Tenant(response);\n        });\n    }\n    /**\n     * Retrieves a list of tenants (single batch only) with a size of `maxResults`\n     * starting from the offset as specified by `pageToken`. This is used to\n     * retrieve all the tenants of a specified project in batches.\n     *\n     * @param maxResults - The page size, 1000 if undefined. This is also\n     *   the maximum allowed limit.\n     * @param pageToken - The next page token. If not specified, returns\n     *   tenants starting without any offset.\n     *\n     * @returns A promise that resolves with\n     *   a batch of downloaded tenants and the next page token.\n     */\n    listTenants(maxResults, pageToken) {\n        return this.authRequestHandler.listTenants(maxResults, pageToken)\n            .then((response) => {\n            // List of tenants to return.\n            const tenants = [];\n            // Convert each user response to a Tenant.\n            response.tenants.forEach((tenantResponse) => {\n                tenants.push(new tenant_1.Tenant(tenantResponse));\n            });\n            // Return list of tenants and the next page token if available.\n            const result = {\n                tenants,\n                pageToken: response.nextPageToken,\n            };\n            // Delete result.pageToken if undefined.\n            if (typeof result.pageToken === 'undefined') {\n                delete result.pageToken;\n            }\n            return result;\n        });\n    }\n    /**\n     * Deletes an existing tenant.\n     *\n     * @param tenantId - The `tenantId` corresponding to the tenant to delete.\n     *\n     * @returns An empty promise fulfilled once the tenant has been deleted.\n     */\n    deleteTenant(tenantId) {\n        return this.authRequestHandler.deleteTenant(tenantId);\n    }\n    /**\n     * Creates a new tenant.\n     * When creating new tenants, tenants that use separate billing and quota will require their\n     * own project and must be defined as `full_service`.\n     *\n     * @param tenantOptions - The properties to set on the new tenant configuration to be created.\n     *\n     * @returns A promise fulfilled with the tenant configuration corresponding to the newly\n     *   created tenant.\n     */\n    createTenant(tenantOptions) {\n        return this.authRequestHandler.createTenant(tenantOptions)\n            .then((response) => {\n            return new tenant_1.Tenant(response);\n        });\n    }\n    /**\n     * Updates an existing tenant configuration.\n     *\n     * @param tenantId - The `tenantId` corresponding to the tenant to delete.\n     * @param tenantOptions - The properties to update on the provided tenant.\n     *\n     * @returns A promise fulfilled with the update tenant data.\n     */\n    updateTenant(tenantId, tenantOptions) {\n        return this.authRequestHandler.updateTenant(tenantId, tenantOptions)\n            .then((response) => {\n            return new tenant_1.Tenant(response);\n        });\n    }\n}\nexports.TenantManager = TenantManager;\n", "/*! firebase-admin v11.11.0 */\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ProjectConfigManager = void 0;\nconst project_config_1 = require(\"./project-config\");\nconst auth_api_request_1 = require(\"./auth-api-request\");\n/**\n * Manages (gets and updates) the current project config.\n */\nclass ProjectConfigManager {\n    /**\n     * Initializes a ProjectConfigManager instance for a specified FirebaseApp.\n     *\n     * @param app - The app for this ProjectConfigManager instance.\n     *\n     * @constructor\n     * @internal\n     */\n    constructor(app) {\n        this.authRequestHandler = new auth_api_request_1.AuthRequestHandler(app);\n    }\n    /**\n     * Get the project configuration.\n     *\n     * @returns A promise fulfilled with the project configuration.\n     */\n    getProjectConfig() {\n        return this.authRequestHandler.getProjectConfig()\n            .then((response) => {\n            return new project_config_1.ProjectConfig(response);\n        });\n    }\n    /**\n     * Updates an existing project configuration.\n     *\n     * @param projectConfigOptions - The properties to update on the project.\n     *\n     * @returns A promise fulfilled with the updated project config.\n     */\n    updateProjectConfig(projectConfigOptions) {\n        return this.authRequestHandler.updateProjectConfig(projectConfigOptions)\n            .then((response) => {\n            return new project_config_1.ProjectConfig(response);\n        });\n    }\n}\nexports.ProjectConfigManager = ProjectConfigManager;\n", "/*! firebase-admin v11.11.0 */\n\"use strict\";\n/*!\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Auth = void 0;\nconst auth_api_request_1 = require(\"./auth-api-request\");\nconst tenant_manager_1 = require(\"./tenant-manager\");\nconst base_auth_1 = require(\"./base-auth\");\nconst project_config_manager_1 = require(\"./project-config-manager\");\n/**\n * Auth service bound to the provided app.\n * An Auth instance can have multiple tenants.\n */\nclass Auth extends base_auth_1.BaseAuth {\n    /**\n     * @param app - The app for this Auth service.\n     * @constructor\n     * @internal\n     */\n    constructor(app) {\n        super(app, new auth_api_request_1.AuthRequestHandler(app));\n        this.app_ = app;\n        this.tenantManager_ = new tenant_manager_1.TenantManager(app);\n        this.projectConfigManager_ = new project_config_manager_1.ProjectConfigManager(app);\n    }\n    /**\n     * Returns the app associated with this Auth instance.\n     *\n     * @returns The app associated with this Auth instance.\n     */\n    get app() {\n        return this.app_;\n    }\n    /**\n     * Returns the tenant manager instance associated with the current project.\n     *\n     * @returns The tenant manager instance associated with the current project.\n     */\n    tenantManager() {\n        return this.tenantManager_;\n    }\n    /**\n     * Returns the project config manager instance associated with the current project.\n     *\n     * @returns The project config manager instance associated with the current project.\n     */\n    projectConfigManager() {\n        return this.projectConfigManager_;\n    }\n}\nexports.Auth = Auth;\n", "/*! firebase-admin v11.11.0 */\n\"use strict\";\n/*!\n * Copyright 2020 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UserRecord = exports.UserMetadata = exports.UserInfo = exports.PhoneMultiFactorInfo = exports.MultiFactorSettings = exports.MultiFactorInfo = exports.ProjectConfigManager = exports.ProjectConfig = exports.TenantManager = exports.TenantAwareAuth = exports.Tenant = exports.BaseAuth = exports.Auth = exports.getAuth = void 0;\n/**\n * Firebase Authentication.\n *\n * @packageDocumentation\n */\nconst index_1 = require(\"../app/index\");\nconst auth_1 = require(\"./auth\");\n/**\n * Gets the {@link Auth} service for the default app or a\n * given app.\n *\n * `getAuth()` can be called with no arguments to access the default app's\n * {@link Auth} service or as `getAuth(app)` to access the\n * {@link Auth} service associated with a specific app.\n *\n * @example\n * ```javascript\n * // Get the Auth service for the default app\n * const defaultAuth = getAuth();\n * ```\n *\n * @example\n * ```javascript\n * // Get the Auth service for a given app\n * const otherAuth = getAuth(otherApp);\n * ```\n *\n */\nfunction getAuth(app) {\n    if (typeof app === 'undefined') {\n        app = (0, index_1.getApp)();\n    }\n    const firebaseApp = app;\n    return firebaseApp.getOrInitService('auth', (app) => new auth_1.Auth(app));\n}\nexports.getAuth = getAuth;\nvar auth_2 = require(\"./auth\");\nObject.defineProperty(exports, \"Auth\", { enumerable: true, get: function () { return auth_2.Auth; } });\nvar base_auth_1 = require(\"./base-auth\");\nObject.defineProperty(exports, \"BaseAuth\", { enumerable: true, get: function () { return base_auth_1.BaseAuth; } });\nvar tenant_1 = require(\"./tenant\");\nObject.defineProperty(exports, \"Tenant\", { enumerable: true, get: function () { return tenant_1.Tenant; } });\nvar tenant_manager_1 = require(\"./tenant-manager\");\nObject.defineProperty(exports, \"TenantAwareAuth\", { enumerable: true, get: function () { return tenant_manager_1.TenantAwareAuth; } });\nObject.defineProperty(exports, \"TenantManager\", { enumerable: true, get: function () { return tenant_manager_1.TenantManager; } });\nvar project_config_1 = require(\"./project-config\");\nObject.defineProperty(exports, \"ProjectConfig\", { enumerable: true, get: function () { return project_config_1.ProjectConfig; } });\nvar project_config_manager_1 = require(\"./project-config-manager\");\nObject.defineProperty(exports, \"ProjectConfigManager\", { enumerable: true, get: function () { return project_config_manager_1.ProjectConfigManager; } });\nvar user_record_1 = require(\"./user-record\");\nObject.defineProperty(exports, \"MultiFactorInfo\", { enumerable: true, get: function () { return user_record_1.MultiFactorInfo; } });\nObject.defineProperty(exports, \"MultiFactorSettings\", { enumerable: true, get: function () { return user_record_1.MultiFactorSettings; } });\nObject.defineProperty(exports, \"PhoneMultiFactorInfo\", { enumerable: true, get: function () { return user_record_1.PhoneMultiFactorInfo; } });\nObject.defineProperty(exports, \"UserInfo\", { enumerable: true, get: function () { return user_record_1.UserInfo; } });\nObject.defineProperty(exports, \"UserMetadata\", { enumerable: true, get: function () { return user_record_1.UserMetadata; } });\nObject.defineProperty(exports, \"UserRecord\", { enumerable: true, get: function () { return user_record_1.UserRecord; } });\n", "import mod from \"../../auth/index.js\";\n\nexport const Auth = mod.Auth;\nexport const BaseAuth = mod.BaseAuth;\nexport const MultiFactorInfo = mod.MultiFactorInfo;\nexport const MultiFactorSettings = mod.MultiFactorSettings;\nexport const PhoneMultiFactorInfo = mod.PhoneMultiFactorInfo;\nexport const ProjectConfig = mod.ProjectConfig;\nexport const ProjectConfigManager = mod.ProjectConfigManager;\nexport const Tenant = mod.Tenant;\nexport const TenantAwareAuth = mod.TenantAwareAuth;\nexport const TenantManager = mod.TenantManager;\nexport const UserInfo = mod.UserInfo;\nexport const UserMetadata = mod.UserMetadata;\nexport const UserRecord = mod.UserRecord;\nexport const getAuth = mod.getAuth;\n"],
  "mappings": "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",
  "names": ["Tenant", "ProjectConfig", "WriteOperationType", "crypto", "sign", "self", "message", "types", "p2s", "getCryptoKey", "deriveKey", "p2s", "decrypt", "encrypt", "decrypt", "bitLength", "byteLength", "getNamedCurve", "encrypt", "wrap", "unwrap", "bitLength", "decrypt", "p2s", "unwrap", "protectedHeader", "init_decrypt", "init_decrypt", "init_decrypt", "bitLength", "encrypt", "p2s", "wrap", "init_encrypt", "init_encrypt", "jwe", "getCryptoKey", "getCryptoKey", "init_verify", "init_verify", "init_verify", "init_verify", "init_decrypt", "init_encrypt", "getCryptoKey", "init_sign", "init_sign", "init_sign", "init_sign", "init_encrypt", "jwk", "base64url_exports", "decode", "encode", "init_base64url", "decode", "init_base64url", "decode", "init_base64url", "crv", "generateKeyPair", "generateSecret", "runtime_default", "init_runtime", "base64url_exports", "runtime_default", "generateKeyPair", "generateSecret", "init_decrypt", "init_encrypt", "init_verify", "init_sign", "init_base64url", "init_runtime", "message", "require_utils", "set", "self", "Map", "self", "Buffer", "Symbol", "Uint8Array", "Map", "Promise", "Set", "WeakMap", "isObject", "key", "isObjectLike", "clone", "result", "clone", "args", "_i", "self", "self", "message", "getKeysInterceptor", "message", "message", "message", "decodeJwt", "JwtErrorCode", "MultiFactorId", "MultiFactorInfo", "PhoneMultiFactorInfo", "MultiFactorSettings", "UserMetadata", "UserInfo", "UserRecord", "BaseAuth", "TenantAwareAuth", "TenantManager", "ProjectConfigManager", "Auth", "require_auth", "getAuth", "app", "mod"]
}
